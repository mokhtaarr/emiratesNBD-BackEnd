// <auto-generated />
using System;
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(EmiratesContext))]
    partial class EmiratesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Models.AnAnimalDeath", b =>
                {
                    b.Property<int>("AnDeathId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnDeathId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AnDeathId");

                    b.ToTable("An_AnimalDeath", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AnAnimalDeathDetail", b =>
                {
                    b.Property<int>("AnDeathIdDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnDeathIdDetail"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AnDeathId")
                        .HasColumnType("int");

                    b.Property<int?>("AnimalAge")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool?>("IsmedicinNotify")
                        .HasColumnType("bit")
                        .HasColumnName("ISMedicinNotify");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyRecievedBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityRecieved")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("AnDeathIdDetail");

                    b.HasIndex("AnDeathId");

                    b.ToTable("An_AnimalDeathDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AnAnimalMidicin", b =>
                {
                    b.Property<int>("AnAnimalMidicinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnAnimalMidicinId"), 1L, 1);

                    b.Property<int>("AnMidicinId")
                        .HasColumnType("int");

                    b.Property<int?>("AnTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("AnimalAge")
                        .HasColumnType("int")
                        .HasComment("Days");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NextNotify")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("Shots")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("AnAnimalMidicinId");

                    b.HasIndex("AnMidicinId");

                    b.HasIndex("AnTypeId");

                    b.ToTable("An_ANimalMidicin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AnAnimalType", b =>
                {
                    b.Property<int>("AnTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnTypeId"), 1L, 1);

                    b.Property<byte[]>("AnTypeImage")
                        .HasColumnType("image");

                    b.Property<int?>("AnTypeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("AnTypeType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrentTrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ParentAnTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.HasKey("AnTypeId");

                    b.ToTable("An_AnimalType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AnAnimalWeightRate", b =>
                {
                    b.Property<int>("AnWeightRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnWeightRateId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("DailyMeals")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AnWeightRateId");

                    b.ToTable("An_AnimalWeightRate", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AnAnimalWeightRateDetail", b =>
                {
                    b.Property<int>("AnWeightRateDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnWeightRateDetailId"), 1L, 1);

                    b.Property<int?>("AnTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("AnWeightRateId")
                        .HasColumnType("int");

                    b.Property<int?>("AnimalItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("FoodItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("FromAge")
                        .HasColumnType("int");

                    b.Property<decimal?>("FromWeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MinWeightPrcnt")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ToAge")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToWeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeightRateFrom")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeightRateTo")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("AnWeightRateDetailId");

                    b.HasIndex("AnWeightRateId");

                    b.ToTable("An_AnimalWeightRateDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AnMedicin", b =>
                {
                    b.Property<int>("AnMidicinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnMidicinId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AnimalAge")
                        .HasColumnType("int")
                        .HasComment("Days");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("Shots")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("AnMidicinId");

                    b.ToTable("An_Medicin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AnNewBorn", b =>
                {
                    b.Property<int>("AnBornId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnBornId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AnBornId");

                    b.ToTable("An_NewBorn", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AnNewBornDetail", b =>
                {
                    b.Property<int>("AnBornIdDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnBornIdDetail"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AnBornId")
                        .HasColumnType("int");

                    b.Property<int?>("AnimalAge")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool?>("IsmedicinNotify")
                        .HasColumnType("bit")
                        .HasColumnName("ISMedicinNotify");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyRecievedBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityRecieved")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("AnBornIdDetail");

                    b.HasIndex("AnBornId");

                    b.ToTable("An_NewBornDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetAddDoc", b =>
                {
                    b.Property<int>("AssetAddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetAddId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReceiptrQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("AssetAddId");

                    b.ToTable("Asset_AssetAddDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetAddDocDetail", b =>
                {
                    b.Property<int>("AddAssetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddAssetDetailId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("AddValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetAddId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("AddAssetDetailId");

                    b.HasIndex("AssetAddId");

                    b.ToTable("Asset_AssetAddDocDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetCard", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("AssetCatId")
                        .HasColumnType("int");

                    b.Property<string>("AssetCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("Barcode")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CarLicenseExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CarLicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CarLicenseIssuePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarLicenseNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrentBookValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrentEmpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DeprInstallmentVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("DeprMethod")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeprStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DtReg")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dtReg");

                    b.Property<DateTime?>("DtRegRenew")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dtRegRenew");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<string>("EtaxCustType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Business  tax Reg Required,Person   NationalID not required,Foreigner  Name and ID  required");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("InstallMentCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsuranceExpiry")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsProduction")
                        .HasColumnType("bit");

                    b.Property<decimal?>("JunkValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("LastDeprDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("MarketPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Name1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("NoDepreciation")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ProductivPeriod")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("PurchDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PurchDoc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PurchPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RemainInstallments")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ResponsiblePerson")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TaxRefNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("WarrantyDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("WarrantyNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WarrantyTerms")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("AssetId");

                    b.HasIndex("AssetCatId");

                    b.ToTable("Asset_AssetCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetCategory", b =>
                {
                    b.Property<int>("AssetCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetCatId"), 1L, 1);

                    b.Property<int?>("AssetCatLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("AssetCatType")
                        .HasColumnType("tinyint");

                    b.Property<string>("CatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentAssetCatId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AssetCatId");

                    b.HasIndex("ParentAssetCatId");

                    b.ToTable("Asset_AssetCategory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetContact", b =>
                {
                    b.Property<int>("AssetContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetContactId"), 1L, 1);

                    b.Property<int?>("AccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId3")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("Bank1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Bank2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactAddress2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactAddress3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactEmail1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactEmail2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactEmail3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPhone1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone3")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone4")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone5")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<string>("Idno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IDNo");

                    b.Property<bool?>("Isprimary")
                        .HasColumnType("bit");

                    b.Property<string>("PassPortNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AssetContactId");

                    b.HasIndex("AssetId");

                    b.ToTable("Asset_AssetContacts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetDeductDoc", b =>
                {
                    b.Property<int>("AssetDeductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetDeductId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("DebitAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReceiptrQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("AssetDeductId");

                    b.ToTable("Asset_AssetDeductDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetDeductDocDetail", b =>
                {
                    b.Property<int>("DeductAssetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeductAssetDetailId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetDeductId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("DeductValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("DeductAssetDetailId");

                    b.HasIndex("AssetDeductId");

                    b.ToTable("Asset_AssetDeductDocDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetDeliverDoc", b =>
                {
                    b.Property<int>("DeliverAssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliverAssetId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReceiptrQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("DeliverAssetId")
                        .HasName("PK_Asset_AssetCustodyDoc");

                    b.ToTable("Asset_AssetDeliverDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetDeliverDocDetail", b =>
                {
                    b.Property<int>("DeliverAssetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliverAssetDetailId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("AddValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("DeliverAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("DeliverAssetDetailId");

                    b.HasIndex("DeliverAssetId");

                    b.ToTable("Asset_AssetDeliverDocDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetFixDoc", b =>
                {
                    b.Property<int>("FixAssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FixAssetId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReceiptrQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("FixAssetId");

                    b.ToTable("Asset_AssetFixDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetFixDocDetail", b =>
                {
                    b.Property<int>("FixAssetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FixAssetDetailId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("FixAssetId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FixValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("FixAssetDetailId");

                    b.HasIndex("FixAssetId");

                    b.ToTable("Asset_AssetFixDocDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetMoveDoc", b =>
                {
                    b.Property<int>("AssetMovId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetMovId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReceiptrQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("AssetMovId");

                    b.ToTable("Asset_AssetMoveDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetMoveDocDetail", b =>
                {
                    b.Property<int>("AssetMovDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetMovDetailId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetMovId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("MoveCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("NewDepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("NewStoreId")
                        .HasColumnType("int");

                    b.Property<int?>("OldDepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("OldStoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("AssetMovDetailId");

                    b.HasIndex("AssetMovId");

                    b.ToTable("Asset_AssetMoveDocDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetReceiveDoc", b =>
                {
                    b.Property<int>("ReceiveAssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiveAssetId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReceiptrQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ReceiveAssetId");

                    b.ToTable("Asset_AssetReceiveDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetReceiveDocDetail", b =>
                {
                    b.Property<int>("ReceiveAssetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiveAssetDetailId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("AddValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ReceiveAssetId")
                        .HasColumnType("int");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ReceiveAssetDetailId");

                    b.HasIndex("ReceiveAssetId");

                    b.ToTable("Asset_AssetReceiveDocDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetSetting", b =>
                {
                    b.Property<int>("AssetSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetSetId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<byte?>("DeprMethod")
                        .HasColumnType("tinyint");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AssetSetId");

                    b.ToTable("Asset_AssetSettings", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetAssetSettingDetail", b =>
                {
                    b.Property<int>("AssetSetDetails")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetSetDetails"), 1L, 1);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetSetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeprStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ScrapValu")
                        .HasColumnType("decimal(38,10)");

                    b.Property<decimal?>("UsablifeTime")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AssetSetDetails");

                    b.HasIndex("AssetSetId");

                    b.ToTable("Asset_AssetSettingDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetDepreciationDoc", b =>
                {
                    b.Property<int>("DeprDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeprDocId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalDeprVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("DeprDocId");

                    b.ToTable("Asset_DepreciationDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetDepreciationDocDetail", b =>
                {
                    b.Property<int>("DeprDocDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeprDocDetailId"), 1L, 1);

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditAssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitCostcenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DeprDocId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("DeprDocDetailId");

                    b.HasIndex("DeprDocId");

                    b.ToTable("Asset_DepreciationDocDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AssetTermination", b =>
                {
                    b.Property<int>("AssetTerminatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetTerminatId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CreditAssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountId")
                        .HasColumnType("int");

                    b.Property<string>("DebitAccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DebitAssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitCostcenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DeprValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProfitLossAccountId")
                        .HasColumnType("int");

                    b.Property<string>("ProfitLossAccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AssetTerminatId");

                    b.ToTable("Asset_Termination", (string)null);
                });

            modelBuilder.Entity("DAL.Models.BankAccountsView", b =>
                {
                    b.Property<string>("AcounntNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AcountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("BoxCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("BoxCurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Desca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCA")
                        .UseCollation("Arabic_CI_AI");

                    b.ToView("BankAccountsView");
                });

            modelBuilder.Entity("DAL.Models.BnkBankNotice", b =>
                {
                    b.Property<int>("BankNoticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankNoticId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<decimal?>("BankExpenses")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReceived")
                        .HasColumnType("bit");

                    b.Property<string>("KeeperNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("PaperDirection")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RefNo")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCheques")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<byte?>("TranType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("BankNoticId");

                    b.ToTable("BNk_BankNotice", (string)null);
                });

            modelBuilder.Entity("DAL.Models.BnkBankNoticeDetail", b =>
                {
                    b.Property<int>("BankNoticDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankNoticDetailId"), 1L, 1);

                    b.Property<int?>("BankNoticId")
                        .HasColumnType("int");

                    b.Property<bool?>("Canceled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CollectDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsCollected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTransferred")
                        .HasColumnType("bit");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TransferredAte")
                        .HasColumnType("smalldatetime");

                    b.HasKey("BankNoticDetailId");

                    b.HasIndex("BankNoticId");

                    b.ToTable("BNK_BankNoticeDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.BoxTran", b =>
                {
                    b.Property<string>("BoxFrom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BoxTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("BoxTranDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxTranId")
                        .HasColumnType("int");

                    b.Property<string>("Desca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCA")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Desce")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCE")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Valu")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("valu");

                    b.ToView("BoxTran");
                });

            modelBuilder.Entity("DAL.Models.CalAccChrtDailyAssist", b =>
                {
                    b.Property<int>("AccChrtDailyAssistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccChrtDailyAssistId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DailyAssisId")
                        .HasColumnType("int");

                    b.HasKey("AccChrtDailyAssistId");

                    b.HasIndex("AccountId");

                    b.ToTable("Cal_AccChrtDailyAssist", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalAccountChart", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<decimal?>("AccApproxim")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("AccBulkAccount")
                        .HasColumnType("int");

                    b.Property<byte?>("AccCashFlow")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("AccountCategory")
                        .HasColumnType("int");

                    b.Property<long?>("AccountCode")
                        .HasColumnType("bigint");

                    b.Property<byte?>("AccountGroup")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AccountLevel")
                        .HasColumnType("int");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AccountNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("AccountNature")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<byte?>("AccountType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("CalcMethod")
                        .HasColumnType("bit");

                    b.Property<byte?>("CostCenterOption")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("CostCentersDistribute")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<bool?>("CurrencyReevaluation")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsServerEntity")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainAccountId")
                        .HasColumnType("int")
                        .HasColumnName("mainAccountId");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AccountId");

                    b.HasIndex("Aid");

                    b.ToTable("Cal_AccountChart", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalAccountClaasiJoin", b =>
                {
                    b.Property<int>("AcChrtJoinClaasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcChrtJoinClaasi"), 1L, 1);

                    b.Property<int?>("AccountClassId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DaysCount")
                        .HasColumnType("int");

                    b.Property<byte?>("Operator")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("TypeOfAcc")
                        .HasColumnType("tinyint");

                    b.HasKey("AcChrtJoinClaasi");

                    b.HasIndex("AccountId");

                    b.ToTable("Cal_AccountClaasiJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalAccountingFix", b =>
                {
                    b.Property<int>("AccRecalcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccRecalcId"), 1L, 1);

                    b.Property<string>("Reason")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccRecalcId");

                    b.ToTable("Cal_AccountingFix", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalAccountUser", b =>
                {
                    b.Property<int>("AccUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccUserId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("TranAndView")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccUserId");

                    b.HasIndex("AccountId");

                    b.HasIndex("UserId");

                    b.ToTable("Cal_AccountUsers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalAssetAccount", b =>
                {
                    b.Property<int>("AssetAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetAccountId"), 1L, 1);

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountModel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("discount, tax, master ...etc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountNameE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimeAccount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AssetAccountId");

                    b.HasIndex("AssetId");

                    b.ToTable("Cal_AssetAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalBudget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("FromFinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ScinarioDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("ToFinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BudgetId");

                    b.ToTable("Cal_Budget", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalBudgetDetail", b =>
                {
                    b.Property<int>("BudgetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetDetailId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Credit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Debit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FromFinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ToFinancialIntervalsId")
                        .HasColumnType("int");

                    b.HasKey("BudgetDetailId");

                    b.HasIndex("BudgetId");

                    b.ToTable("Cal_BudgetDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalBusinessPartnerAccount", b =>
                {
                    b.Property<int>("BusinessPartnerAccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessPartnerAccId"), 1L, 1);

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountModel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("discount, tax, master ...etc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountNameE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("BspartnerId")
                        .HasColumnType("int")
                        .HasColumnName("BSPartnerId");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("EtaxCustType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Business  tax Reg Required,Person   NationalID not required,Foreigner  Name and ID  required");

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimeAccount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<string>("TaxRefNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BusinessPartnerAccId");

                    b.HasIndex("BspartnerId");

                    b.ToTable("Cal_BusinessPartnerAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalCostCenter", b =>
                {
                    b.Property<int>("CostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostCenterId"), 1L, 1);

                    b.Property<int?>("AccCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<byte?>("CashFlowList")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("CenterCategory")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CostCenterCode")
                        .HasColumnType("int");

                    b.Property<decimal?>("CostCenterCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("CostCenterLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CostCenterNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CostCenterNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CostCenterTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("CostCenterTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("CostType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("FunctionDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("FunctionDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("JopDesc")
                        .HasColumnType("tinyint")
                        .HasColumnName("jopDesc");

                    b.Property<int?>("MainCostCenterId")
                        .HasColumnType("int")
                        .HasColumnName("mainCostCenterId");

                    b.Property<int?>("MonthlybalanceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Parent")
                        .HasColumnType("int");

                    b.Property<decimal?>("PreviousBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CostCenterId")
                        .HasName("PK_Cal_CostCenter");

                    b.ToTable("Cal_CostCenters", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalCostCenterAccount", b =>
                {
                    b.Property<int>("CostCenterAccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostCenterAccId"), 1L, 1);

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AccountPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("CostCenterAccId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.ToTable("Cal_CostCenterAccount", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalCustAccount", b =>
                {
                    b.Property<int>("CustAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustAccountId"), 1L, 1);

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountModel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimeAccount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsServerEntity")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CustAccountId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cal_CustAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalEmpAccount", b =>
                {
                    b.Property<int>("EmpAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpAccountId"), 1L, 1);

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountModel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("discount, tax, master ...etc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountNameE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimeAccount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsServerEntity")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpAccountId");

                    b.HasIndex("AccountId");

                    b.HasIndex("EmpId");

                    b.ToTable("Cal_EmpAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalJurnalDetail", b =>
                {
                    b.Property<int>("JurnalDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JurnalDetailId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessPartnerAccId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId4")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpAccountId")
                        .HasColumnType("int");

                    b.Property<string>("JurDesc")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("JurnalId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("VendAccountId")
                        .HasColumnType("int");

                    b.HasKey("JurnalDetailId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("JurnalId");

                    b.ToTable("Cal_JurnalDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalJurnalEntry", b =>
                {
                    b.Property<int>("JurnalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JurnalId"), 1L, 1);

                    b.Property<int?>("AdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<int?>("AssetAddId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetDeductId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetMovId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetTerminatId")
                        .HasColumnType("int");

                    b.Property<int?>("BankNoticId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxTranId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractorContractId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractorExitractId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DeliverAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<int?>("DeprDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DifferenceInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ExecutExitractId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("FixAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsManual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsOpenning")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int?>("JorderClosId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderClosId");

                    b.Property<int?>("JorderEmpDocId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEmpDocId");

                    b.Property<int?>("JorderEquipDocId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEquipDocId");

                    b.Property<string>("JurnalDesc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("KeeperId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeTranId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaidInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("OwnerExitractId")
                        .HasColumnType("int");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("PettycashId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiveAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ResourceBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryIssuDocId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StockAdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderContractId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<int?>("TrOpenningBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("Tr_OpenningBalanceId");

                    b.Property<int?>("TranId")
                        .HasColumnType("int");

                    b.Property<int?>("TranReqId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VehiclMovId")
                        .HasColumnType("int");

                    b.Property<int?>("VjorderId")
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    b.HasKey("JurnalId");

                    b.HasIndex("Aid");

                    b.HasIndex("StorId");

                    b.ToTable("Cal_JurnalEntry", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalPostOrder", b =>
                {
                    b.Property<int>("PostQueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostQueId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BalaceCurrencyBeforCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalaceCurrencyBeforDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalaceLocalBeforCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalaceLocalBeforDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalancCrencyAftrCredCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalancCrencyAftrDebtCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalancCrencyBeforCredCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalancCrencyBeforDebtCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalancLocalAfterCredCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalancLocalAfterDebCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalancLocalBeforCredCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalancLocalBeforDebCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceCurrencyAfterCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceCurrencyAfterDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceLocalAfterCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceLocalAfterDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DetailedTableEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("HelpCostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("HelpCostCenterType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("IsHelpAcc")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHelpCostCenter")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOpenningTerm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("OpenBalancCredCostCentr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenBalancCredCrncyCostCentr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenBalancDepCostCentr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenBalancDepCrncyCostCentr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OriginalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("PostQueId");

                    b.ToTable("Cal_PostOrder", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalQueueOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int?>("QueueOrder")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("Cal_QueueOrder", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CalVendAccount", b =>
                {
                    b.Property<int>("VendAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendAccountId"), 1L, 1);

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountModel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("discount, tax, master ...etc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountNameE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("AccountStopped")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimeAccount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsServerEntity")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendAccountId");

                    b.HasIndex("VendorId");

                    b.ToTable("Cal_VendAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodAccountCategory", b =>
                {
                    b.Property<int>("AccountCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountCatId"), 1L, 1);

                    b.Property<byte?>("AccountCatType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<long?>("Code")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ParentAccountCatId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AccountCatId");

                    b.HasIndex("Aid");

                    b.ToTable("Cod_AccountCategories", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodAccountClassification", b =>
                {
                    b.Property<int>("AccountClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountClassId"), 1L, 1);

                    b.Property<int?>("AccountCatId")
                        .HasColumnType("int");

                    b.Property<byte?>("AccountClassType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<long?>("Code")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ParentAccountClassId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AccountClassId");

                    b.HasIndex("AccountCatId");

                    b.ToTable("Cod_AccountClassification", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodBuildingDegree", b =>
                {
                    b.Property<int>("BuildDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildDegreeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BuildDegreeId");

                    b.ToTable("Cod_BuildingDegree", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodBuildingExploitation", b =>
                {
                    b.Property<int>("BuildExploitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildExploitId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BuildExploitId");

                    b.ToTable("Cod_BuildingExploitation", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodBuildingFinishingLevel", b =>
                {
                    b.Property<int>("BuildFinishLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildFinishLevelId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BuildFinishLevelId");

                    b.ToTable("Cod_BuildingFinishingLevel", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodBuildingInsuranceStatus", b =>
                {
                    b.Property<int>("BuildInsurStatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildInsurStatId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BuildInsurStatId");

                    b.ToTable("Cod_BuildingInsuranceStatus", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodBuildingStatus", b =>
                {
                    b.Property<int>("BuildStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildStatusId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BuildStatusId");

                    b.ToTable("Cod_BuildingStatus", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodBuildingType", b =>
                {
                    b.Property<int>("BuildTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BuildTypeId");

                    b.ToTable("Cod_BuildingTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodBuildOccupType", b =>
                {
                    b.Property<int>("BuildOccupTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildOccupTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BuildOccupTypeId");

                    b.ToTable("Cod_BuildOccupTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodBuildPermitActiv", b =>
                {
                    b.Property<int>("BuildPermitActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildPermitActivityId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BuildPermitActivityId");

                    b.ToTable("Cod_BuildPermitActiv", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodBuildPerspective", b =>
                {
                    b.Property<int>("BuildPerspectiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildPerspectiveId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BuildPerspectiveId");

                    b.ToTable("Cod_BuildPerspective", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodCity", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.Property<byte?>("CurrentZoom")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Lat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Lng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<byte?>("MaxZoom")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MinZoom")
                        .HasColumnType("tinyint");

                    b.Property<string>("NameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("NameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RmarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SysCityId")
                        .HasColumnType("int")
                        .HasColumnName("SysCityID");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.HasKey("CityId");

                    b.HasIndex("RegionId");

                    b.HasIndex("SysCityId");

                    b.ToTable("Cod_City", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodColor", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ColorId");

                    b.ToTable("Cod_Colors", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodContractType", b =>
                {
                    b.Property<int>("ContractTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ContractTypeId");

                    b.ToTable("Cod_ContractType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodCountry", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_BIN");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.Property<byte?>("CurrentZoom")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Lat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Lng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<byte?>("MaxZoom")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MinZoom")
                        .HasColumnType("tinyint");

                    b.Property<string>("NameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("NameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.HasKey("CountryId");

                    b.HasIndex("CountryCode");

                    b.ToTable("Cod_Country", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodDailyAssistance", b =>
                {
                    b.Property<int>("DailyAssisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DailyAssisId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("DailyAssisId");

                    b.HasIndex("AccountId");

                    b.HasIndex("Aid");

                    b.ToTable("Cod_DailyAssistance", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodElectInsurStatus", b =>
                {
                    b.Property<int>("ElectInsurStatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElectInsurStatId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ElectInsurStatId");

                    b.ToTable("Cod_ElectInsurStatus", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodeSubUnitType", b =>
                {
                    b.Property<int>("SubUnittypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubUnittypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<bool?>("CalcByMeter")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("TotalUnitMeters")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("SubUnittypeId");

                    b.ToTable("Code_SubUnitTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodExplanation", b =>
                {
                    b.Property<int>("ExplanationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExplanationId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ExplanationId");

                    b.ToTable("Cod_Explanations", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodFurnitAndEqupmnt", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EquipmentId");

                    b.ToTable("Cod_FurnitAndEqupmnts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodInstallmentTemp", b =>
                {
                    b.Property<int>("InstallTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstallTempId"), 1L, 1);

                    b.Property<decimal?>("AddValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("AfterPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<bool?>("AutoRenew")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanEditInstallManual")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EveryPayCount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPercent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRental")
                        .HasColumnType("bit");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("YearsCount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InstallTempId");

                    b.ToTable("Cod_InstallmentTemps", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodInstallmentTempsDetail", b =>
                {
                    b.Property<int>("InstallTempDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstallTempDetailId"), 1L, 1);

                    b.Property<int?>("InstallTempId")
                        .HasColumnType("int");

                    b.Property<int?>("MonthOfInstall")
                        .HasColumnType("int");

                    b.Property<int?>("MonthOrder")
                        .HasColumnType("int");

                    b.Property<int?>("PayCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayRepeat")
                        .HasColumnType("int");

                    b.Property<int?>("PayTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("YearOrder")
                        .HasColumnType("int");

                    b.HasKey("InstallTempDetailId");

                    b.HasIndex("InstallTempId");

                    b.ToTable("Cod_InstallmentTempsDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodInsuranceCase", b =>
                {
                    b.Property<int>("InsurCaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsurCaseId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("InsurCaseId");

                    b.ToTable("Cod_InsuranceCases", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodInsurCovType", b =>
                {
                    b.Property<int>("InsurCovTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsurCovTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoverPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("InsurCovTypeId");

                    b.ToTable("Cod_InsurCovTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodLand", b =>
                {
                    b.Property<int>("LandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<decimal?>("BuildingArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BuildingMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("LandMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("LandNo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("LandSatusId")
                        .HasColumnType("int");

                    b.Property<int?>("LandTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Landarea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LandId")
                        .HasName("PK_Code_Lands");

                    b.ToTable("Cod_Lands", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodLandPermitActivJoin", b =>
                {
                    b.Property<int>("LandPermitActivJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandPermitActivJoinId"), 1L, 1);

                    b.Property<int?>("LandId")
                        .HasColumnType("int");

                    b.Property<int?>("LandPermitActivId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("LandPermitActivJoinId");

                    b.HasIndex("LandId");

                    b.HasIndex("LandPermitActivId");

                    b.ToTable("Cod_LandPermitActivJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodLandPermtActiv", b =>
                {
                    b.Property<int>("LandPermitActivId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandPermitActivId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LandPermitActivId");

                    b.ToTable("Cod_LandPermtActiv", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodLandPosition", b =>
                {
                    b.Property<int>("LandPosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandPosId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LandPosId");

                    b.ToTable("Cod_LandPositions", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodLandPosJoin", b =>
                {
                    b.Property<int>("LandPosJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandPosJoinId"), 1L, 1);

                    b.Property<int?>("LandId")
                        .HasColumnType("int");

                    b.Property<int?>("LandPosId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("LandPosJoinId");

                    b.HasIndex("LandId");

                    b.HasIndex("LandPosId");

                    b.ToTable("Cod_LandPosJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodLandRetainResJoin", b =>
                {
                    b.Property<int>("LandRetainResJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandRetainResJoinId"), 1L, 1);

                    b.Property<int?>("LandId")
                        .HasColumnType("int");

                    b.Property<int?>("LandRetainResId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("LandRetainResJoinId");

                    b.HasIndex("LandId");

                    b.HasIndex("LandRetainResId");

                    b.ToTable("Cod_LandRetainResJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodLandRetainRson", b =>
                {
                    b.Property<int>("LandRetainResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandRetainResId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LandRetainResId");

                    b.ToTable("Cod_LandRetainRsons", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodLandStatus", b =>
                {
                    b.Property<int>("LandSatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandSatusId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LandSatusId");

                    b.ToTable("Cod_LandStatus", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodLandType", b =>
                {
                    b.Property<int>("LandTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LandTypeId");

                    b.ToTable("Cod_LandTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodMaintenanceType", b =>
                {
                    b.Property<int>("MaintainTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintainTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("MaintainTypeId");

                    b.ToTable("Cod_MaintenanceTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodNonRenewalReason", b =>
                {
                    b.Property<int>("NonRenewResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NonRenewResId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("NonRenewResId");

                    b.ToTable("Cod_NonRenewalReasons", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodOperatingOrder", b =>
                {
                    b.Property<int>("OperOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperOrderId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("OperOrderId");

                    b.ToTable("Cod_OperatingOrders", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodOwnershipBond", b =>
                {
                    b.Property<int>("OwnShipBondId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnShipBondId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("OwnShipBondId");

                    b.ToTable("Cod_OwnershipBonds", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodPackingSize", b =>
                {
                    b.Property<int>("PackSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackSizeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("HeightCentimeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("HeightMeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("HeightMillimeters")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Hieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LengthCentimeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LengthMeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LengthMillimeters")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Wheight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WidthCentimeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WidthMeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WidthMillimeters")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("PackSizeId");

                    b.ToTable("Cod_PackingSize", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodParking", b =>
                {
                    b.Property<int>("ParkingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParkingId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AppartId")
                        .HasColumnType("int");

                    b.Property<int?>("CarCapacity")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ParkingId");

                    b.ToTable("Cod_Parkings", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodPaymentTerm", b =>
                {
                    b.Property<int>("PaymentTermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentTermId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("PaymentTermId");

                    b.ToTable("Cod_PaymentTerms", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodPaymentType", b =>
                {
                    b.Property<int>("PayTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PayRepeat")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("PayTypeId");

                    b.ToTable("Cod_PaymentTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodPostalCode", b =>
                {
                    b.Property<int>("PostalCodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostalCodId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("PostalCodId");

                    b.ToTable("Cod_PostalCodes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodRegion", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.Property<byte?>("CurrentZoom")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Lat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Lng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<byte?>("MaxZoom")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MinZoom")
                        .HasColumnType("tinyint");

                    b.Property<string>("NameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("NameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.HasKey("RegionId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cod_Region", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodRentCase", b =>
                {
                    b.Property<int>("RentCaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentCaseId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("RentCaseId");

                    b.ToTable("Cod_RentCase", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodSavingFile", b =>
                {
                    b.Property<int>("SavfilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SavfilesId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShelvId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("SavfilesId");

                    b.ToTable("Cod_SavingFiles", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodService", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ServiceId");

                    b.ToTable("Cod_Services", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodShelf", b =>
                {
                    b.Property<int>("ShelvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShelvId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ParentShelvId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ShelvId");

                    b.ToTable("Cod_Shelves", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodSubRegion", b =>
                {
                    b.Property<int>("SubRegionClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubRegionClassId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.Property<byte?>("CurrentZoom")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Lat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Lng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<byte?>("MaxZoom")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MinZoom")
                        .HasColumnType("tinyint");

                    b.Property<string>("NameA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("NameE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_BIN");

                    b.HasKey("SubRegionClassId");

                    b.ToTable("Cod_SubRegion", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodTaskType", b =>
                {
                    b.Property<int>("TaskTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TaskTypeId");

                    b.ToTable("Cod_TaskTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodTrmsModifiRson", b =>
                {
                    b.Property<int>("TrmModResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrmModResId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TrmModResId");

                    b.ToTable("Cod_TrmsModifiRsons", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodUnitDegree", b =>
                {
                    b.Property<int>("UnitDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitDegreeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnitDegreeId");

                    b.ToTable("Cod_UnitDegree", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodUnitExploitation", b =>
                {
                    b.Property<int>("UnitExploitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitExploitId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnitExploitId");

                    b.ToTable("Cod_UnitExploitation", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodUnitFinishingLevel", b =>
                {
                    b.Property<int>("UnFinLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnFinLevelId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("FinishMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnFinLevelId");

                    b.ToTable("Cod_UnitFinishingLevel", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodUnitInsuranceStatus", b =>
                {
                    b.Property<int>("UnitInsurstatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitInsurstatId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnitInsurstatId");

                    b.ToTable("Cod_UnitInsuranceStatus", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodUnitOccupancyType", b =>
                {
                    b.Property<int>("UnitOccuTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitOccuTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnitOccuTypeId");

                    b.ToTable("Cod_UnitOccupancyTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodUnitPermittedActivity", b =>
                {
                    b.Property<int>("UnitPermitActivId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitPermitActivId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnitPermitActivId");

                    b.ToTable("Cod_UnitPermittedActivity", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodUnitPerspective", b =>
                {
                    b.Property<int>("UnitPerspectiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitPerspectiveId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnitPerspectiveId");

                    b.ToTable("Cod_UnitPerspective", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodUnitService", b =>
                {
                    b.Property<int>("UnitServId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitServId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnitServId");

                    b.ToTable("Cod_UnitServices", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodUnitStatus", b =>
                {
                    b.Property<int>("UnitStatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitStatId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnitStatId");

                    b.ToTable("Cod_UnitStatus", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodUnitType", b =>
                {
                    b.Property<int>("UnittypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnittypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnittypeId");

                    b.ToTable("Cod_UnitTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CodUntMntanItmBylndownrTnant", b =>
                {
                    b.Property<int>("UnMantItmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnMantItmId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnMantItmId");

                    b.ToTable("Cod_UntMntanItmBylndownrTnant", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ContrInstallMent", b =>
                {
                    b.Property<int>("InstallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstallId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallmentsCount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("NotPaidInstallCount")
                        .HasColumnType("int");

                    b.Property<string>("OtherSource")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PaidInstallCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TableEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TableStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("InstallId");

                    b.ToTable("Contr_InstallMent", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ContrInstallMentDetail", b =>
                {
                    b.Property<int>("InstallDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstallDetailId"), 1L, 1);

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InstallValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PayDayDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Serial")
                        .HasColumnType("int");

                    b.HasKey("InstallDetailId");

                    b.HasIndex("InstallId");

                    b.ToTable("Contr_InstallMentDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmLead", b =>
                {
                    b.Property<int>("LeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeadId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("AssignedToEmpId")
                        .HasColumnType("int");

                    b.Property<byte?>("Barcode")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CarLicenseExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CarLicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CarLicenseIssuePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarLicenseNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLimitAllowed")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<string>("CustId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CustID")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustJob")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("DefaultDisc")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DiscPercentOrVal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DtReg")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dtReg");

                    b.Property<DateTime?>("DtRegRenew")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dtRegRenew");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("ForAdjustOnly")
                        .HasColumnType("bit");

                    b.Property<string>("FormerProduct")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HomePage")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool?>("InternationalLicense")
                        .HasColumnType("bit");

                    b.Property<byte?>("InvoiceCopies")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreditEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscountByItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOpportunity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPricIncludTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxExempted")
                        .HasColumnType("bit");

                    b.Property<string>("LeadCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LeadName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LeadName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("LeadTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("MarketChannelId")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PassPortExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PassPortIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassPortIssuePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassPortNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PrePaidPercent")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ReportDiscValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("SalPrice")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TaxExemptionNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxRefNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LeadId");

                    b.HasIndex("LeadTypeId");

                    b.HasIndex("MarketChannelId");

                    b.ToTable("CRM_Leads", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmLeadsMember", b =>
                {
                    b.Property<int>("LeadMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeadMemberId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LeadMemberId");

                    b.ToTable("CRM_LeadsMembers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmLeadsMembersDetail", b =>
                {
                    b.Property<int>("LeadMemberDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeadMemberDetailId"), 1L, 1);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("LeadMemberDetailId");

                    b.HasIndex("LeadMemberId");

                    b.ToTable("CRM_LeadsMembersDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmLeadsMembersJoin", b =>
                {
                    b.Property<int>("LeadMemberJoin")
                        .HasColumnType("int");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadMemberId")
                        .HasColumnType("int");

                    b.HasKey("LeadMemberJoin");

                    b.HasIndex("LeadId");

                    b.HasIndex("LeadMemberId");

                    b.ToTable("CRM_LeadsMembersJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmLeadType", b =>
                {
                    b.Property<int>("LeadTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeadTypeId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreayedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LeadTypeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LeadTypeDes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LeadTypeName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LeadTypeName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LeadTypeId");

                    b.ToTable("CRM_LeadTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmMarketChannel", b =>
                {
                    b.Property<int>("MarketChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarketChannelId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ChannelCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChannelName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ChannelName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MarketChannelId");

                    b.ToTable("CRM_MarketChannels", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmSalesPlan", b =>
                {
                    b.Property<int>("SalesPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesPlanId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PlanName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PlanName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("SalesPlanId");

                    b.ToTable("CRM_SalesPlan", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmSalesPlanDetail", b =>
                {
                    b.Property<int>("SalesPlanDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesPlanDetailId"), 1L, 1);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<string>("Mission")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SalesPlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("SalesPlanDetailId");

                    b.HasIndex("SalesPlanId");

                    b.ToTable("CRM_SalesPlanDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmSurvey", b =>
                {
                    b.Property<int>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurveyId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("AnswerType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<string>("VisitCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VisitName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VisitName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("VisitTypeId")
                        .HasColumnType("int");

                    b.HasKey("SurveyId");

                    b.HasIndex("VisitTypeId");

                    b.ToTable("CRM_Survey", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmSurveyMemberJoin", b =>
                {
                    b.Property<int>("SurveyVisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurveyVisitId"), 1L, 1);

                    b.Property<int?>("SurveyId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("int");

                    b.HasKey("SurveyVisitId");

                    b.ToTable("CRM_SurveyMemberJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmTeam", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Capacaty")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DefaultTarget")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TeamCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TeamName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TeamName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TeamId");

                    b.ToTable("CRM_Teams", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmTeamMember", b =>
                {
                    b.Property<int>("TeamMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamMemberId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DefaultTarget")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTeamLeader")
                        .HasColumnType("bit");

                    b.Property<string>("MemberCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("MemberName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("MemberName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TeamMemberId");

                    b.HasIndex("TeamId");

                    b.ToTable("CRM_TeamMembers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmVisit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitId"), 1L, 1);

                    b.Property<string>("BounusDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("LeadGetBounus")
                        .HasColumnType("bit");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VisitTypeId")
                        .HasColumnType("int");

                    b.HasKey("VisitId");

                    b.HasIndex("VisitTypeId");

                    b.ToTable("CRM_Visits", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmVisitSurvey", b =>
                {
                    b.Property<int>("VisitSurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitSurveyId"), 1L, 1);

                    b.Property<string>("Answer1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Answer2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Answer3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Answer4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("AnswerYorN")
                        .HasColumnType("bit");

                    b.Property<string>("FilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SurveyId")
                        .HasColumnType("int");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("VisitSurveyId");

                    b.HasIndex("VisitId");

                    b.ToTable("CRM_VisitSurveys", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CrmVisitType", b =>
                {
                    b.Property<int>("VisitTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitTypeId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VisitCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VisitName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VisitName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("VisitPeriority")
                        .HasColumnType("tinyint");

                    b.HasKey("VisitTypeId");

                    b.ToTable("CRM_VisitTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.DeliverCustSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("DeliverId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DeliverQtyOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int>("InvTrNo")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("DeliverCustSearch");
                });

            modelBuilder.Entity("DAL.Models.DeliverSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("CostExecuted")
                        .HasColumnType("bit");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("DeliverId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int?>("InvTrNo")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SalesInvDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("DeliverSearch");
                });

            modelBuilder.Entity("DAL.Models.GPrintLog", b =>
                {
                    b.Property<int>("PrintLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrintLogId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("PrintTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PrintLogId");

                    b.ToTable("G_PrintLog", (string)null);
                });

            modelBuilder.Entity("DAL.Models.GUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Custom1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Custom2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Custom3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Custom4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Custom5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SalesDepId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<byte?>("UserType")
                        .HasColumnType("tinyint")
                        .HasComment("0 User , 1 superUser , 2 admin");

                    b.HasKey("UserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("G_Users", (string)null);
                });

            modelBuilder.Entity("DAL.Models.GUserGroup", b =>
                {
                    b.Property<int>("UserGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserGroupId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ParentUserGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("UserGroupCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserGroupName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserGroupName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserGroupId");

                    b.ToTable("G_UserGroups", (string)null);
                });

            modelBuilder.Entity("DAL.Models.GUserModule", b =>
                {
                    b.Property<int>("UserModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserModuleId"), 1L, 1);

                    b.Property<bool>("CanCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("CanOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPost")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPreView")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPrint")
                        .HasColumnType("bit");

                    b.Property<bool>("Custom1")
                        .HasColumnType("bit")
                        .HasColumnName("CUSTOM1");

                    b.Property<string>("DefaultReport")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ModuleDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("PrintCopies")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("PrintWithSave")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserModuleId");

                    b.HasIndex("UserId");

                    b.ToTable("G_USER_MODULE", (string)null);
                });

            modelBuilder.Entity("DAL.Models.GUserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RoleName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserRoleId");

                    b.ToTable("G_UserRole", (string)null);
                });

            modelBuilder.Entity("DAL.Models.GUserRolePermission", b =>
                {
                    b.Property<int>("UserRolePermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRolePermId"), 1L, 1);

                    b.Property<bool>("CanCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("CanOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPost")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPreView")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPrint")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ModuleDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("ModuleType")
                        .HasColumnType("tinyint")
                        .HasComment("1 screen, 2 TabPage,3 Label");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("UserRolePermId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("G_UserRolePermissions", (string)null);
                });

            modelBuilder.Entity("DAL.Models.GUserScreenField", b =>
                {
                    b.Property<int>("ScreenFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScreenFieldId"), 1L, 1);

                    b.Property<string>("AuthDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AuthenticatedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("Authinticated")
                        .HasColumnType("bit");

                    b.Property<string>("FieldName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserModuleId")
                        .HasColumnType("int");

                    b.HasKey("ScreenFieldId");

                    b.ToTable("G_UserScreenFields", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrAcheivedTarget", b =>
                {
                    b.Property<int>("AcheivedTargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcheivedTargetId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AcheivedTargetId");

                    b.ToTable("HR_AcheivedTargets", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrAcheivedTargetDetail", b =>
                {
                    b.Property<int>("AcheivedTargetDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcheivedTargetDetailId"), 1L, 1);

                    b.Property<decimal?>("AcheivedPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("AcheivedTargetId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AcheivedValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CommisionValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DeservPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("HrempGroupId")
                        .HasColumnType("int")
                        .HasColumnName("HREmpGroupId");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("TargetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AcheivedTargetDetailId")
                        .HasName("PK_HR_TargetsDetails");

                    b.HasIndex("AcheivedTargetId");

                    b.ToTable("HR_AcheivedTargetDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrActivityDetailElement", b =>
                {
                    b.Property<int>("ActivityElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityElementId"), 1L, 1);

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpActivityDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpElementId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<string>("TextValu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ActivityElementId");

                    b.HasIndex("EmpActivityDetailId");

                    b.ToTable("Hr_ActivityDetailElements", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrAttend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<decimal?>("Countearly")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countearly");

                    b.Property<decimal?>("Countearlypure")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countearlypure");

                    b.Property<decimal?>("Countleate")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countleate");

                    b.Property<decimal?>("Countovertim")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countovertim");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<int?>("DevId")
                        .HasColumnType("int")
                        .HasColumnName("Dev_id");

                    b.Property<int?>("Idatthes")
                        .HasColumnType("int")
                        .HasColumnName("idatthes");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("mode");

                    b.Property<string>("Moderol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("moderol");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.Property<TimeSpan?>("Timeat")
                        .HasColumnType("time")
                        .HasColumnName("timeat");

                    b.HasKey("Id");

                    b.ToTable("Hr_Attend", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrAttendanceDoc", b =>
                {
                    b.Property<int>("AttendDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendDocId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AttendDocId");

                    b.ToTable("Hr_AttendanceDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrAttendanceElement", b =>
                {
                    b.Property<int>("AttendElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendElementId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ElementCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("ElementUsage")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("EnablEditOnEmpActivity")
                        .HasColumnType("bit");

                    b.Property<decimal?>("FixedValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Isprintable")
                        .HasColumnType("bit")
                        .HasColumnName("ISPrintable");

                    b.Property<decimal?>("MinMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("UnitDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("VacationEffect")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ValueType")
                        .HasColumnType("tinyint");

                    b.HasKey("AttendElementId");

                    b.ToTable("Hr_AttendanceElements", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrAttendDocDetail", b =>
                {
                    b.Property<int>("AttendDocDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendDocDetailsId"), 1L, 1);

                    b.Property<decimal?>("AttenDelayByDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AttenDelayByHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AttenDelayByMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("AttendDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("AttendDocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DismissDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("EarlyAttendByDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("EarlyAttendByHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("EarlyAttendByMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("EarlyLeaveByDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("EarlyLeaveByHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("EarlyLeaveByMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FirstShftFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FirstShftTo")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LeavPermisionId1")
                        .HasColumnType("int");

                    b.Property<int?>("LeavPermisionId2")
                        .HasColumnType("int");

                    b.Property<int?>("LeavPermisionId3")
                        .HasColumnType("int");

                    b.Property<int?>("LeavPermisionId4")
                        .HasColumnType("int");

                    b.Property<int?>("LeavPermisionId5")
                        .HasColumnType("int");

                    b.Property<int?>("LeavPermisionId6")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetTimeByDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetTimeByHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetTimeByMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OverTimeByDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OverTimeByHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OverTimeByMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("SecondShftFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SecondShftTo")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThirdShftFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ThirdShftTo")
                        .HasColumnType("smalldatetime");

                    b.HasKey("AttendDocDetailsId");

                    b.HasIndex("AttendDocId");

                    b.ToTable("Hr_AttendDocDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrAttendDocFactElement", b =>
                {
                    b.Property<int>("FactAttendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactAttendId"), 1L, 1);

                    b.Property<int?>("AttendDocId")
                        .HasColumnType("int");

                    b.Property<byte?>("EarlyAttendCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("EarlyAttendDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("EarlyAttendHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("EarlyAttendMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("EarlyLeaveCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("EarlyLeaveDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("EarlyLeaveHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("EarlyLeaveMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<byte?>("LateArrivalCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LateArrivalDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LateArrivalHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LateArrivalMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Shift1NoShow")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Shift1Show")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Shift2NoShow")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Shift2Show")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Shift3NoShow")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Shift3Show")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalWorkDaysPeriod")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalWorkHoursPeriod")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("VacationOvertimeCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("VacationOvertimeDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("VacationOvertimeHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("VacationOvertimeMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("VacationWorkDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("VacationWorkHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("VacationWorkMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VacationWorkShow")
                        .HasColumnType("int");

                    b.Property<decimal?>("WeekEndWorkDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeekEndWorkHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeekEndWorkMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("WeekEndWorkShow")
                        .HasColumnType("int");

                    b.Property<byte?>("WeekendOvertimeCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("WeekendOvertimeDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeekendOvertimeHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeekendOvertimeMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkDayNoShow")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkDayShow")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("WorkdayOvertimeCount")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("WorkdayOvertimeDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkdayOvertimeHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkdayOvertimeMinutes")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("FactAttendId");

                    b.HasIndex("AttendDocId");

                    b.ToTable("Hr_AttendDocFactElements", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrAttendElementTran", b =>
                {
                    b.Property<int>("ElementTransId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElementTransId"), 1L, 1);

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ElementValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPlus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("OriginalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 number,2 minutes,3 hours,4 days");

                    b.HasKey("ElementTransId");

                    b.ToTable("Hr_AttendElementTrans", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrAttendhestory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<int?>("DevId")
                        .HasColumnType("int")
                        .HasColumnName("Dev_id");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("mode");

                    b.Property<string>("Moderol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("moderol");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.Property<TimeSpan?>("Timeat")
                        .HasColumnType("time")
                        .HasColumnName("timeat");

                    b.HasKey("Id");

                    b.ToTable("Hr_Attendhestory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrAttendop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<int?>("DevId")
                        .HasColumnType("int")
                        .HasColumnName("Dev_id");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("mode");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<TimeSpan?>("Timeat")
                        .HasColumnType("time")
                        .HasColumnName("timeat");

                    b.HasKey("Id");

                    b.ToTable("Hr_Attendop", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrAttendrole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<TimeSpan?>("Endstarttimeattend")
                        .HasColumnType("time")
                        .HasColumnName("endstarttimeattend");

                    b.Property<TimeSpan?>("Endtimeatdepartur")
                        .HasColumnType("time")
                        .HasColumnName("endtimeatdepartur");

                    b.Property<string>("Nameshift")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nameshift");

                    b.Property<TimeSpan?>("Satarttimeattdend")
                        .HasColumnType("time")
                        .HasColumnName("satarttimeattdend");

                    b.Property<TimeSpan?>("Starttimeatdepartur")
                        .HasColumnType("time")
                        .HasColumnName("starttimeatdepartur");

                    b.HasKey("Id");

                    b.ToTable("Hr_attendrole", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrDepartment", b =>
                {
                    b.Property<int>("DepartMentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartMentId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartTask")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("DepartMentId");

                    b.HasIndex("ParentId");

                    b.ToTable("Hr_Departments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrDevicesCon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ip")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ip");

                    b.Property<string>("Keycomm")
                        .HasColumnType("text")
                        .HasColumnName("keycomm");

                    b.Property<int?>("Moodes")
                        .HasColumnType("int")
                        .HasColumnName("moodes");

                    b.Property<string>("Namedev")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("namedev");

                    b.Property<string>("Port")
                        .HasColumnType("text")
                        .HasColumnName("port");

                    b.Property<int?>("Statuess")
                        .HasColumnType("int")
                        .HasColumnName("statuess");

                    b.HasKey("Id");

                    b.ToTable("Hr_DevicesCon", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEducation", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EducationCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("EducationDesc")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("EducationName1")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("EducationName2")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Qualification")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("EducationId");

                    b.ToTable("Hr_Education", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpActivity", b =>
                {
                    b.Property<int>("EmpActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpActivityId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpActivityId");

                    b.ToTable("Hr_EmpActivity", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpActivityDetail", b =>
                {
                    b.Property<int>("EmpActivityDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpActivityDetailId"), 1L, 1);

                    b.Property<int?>("EmpActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.HasKey("EmpActivityDetailId");

                    b.HasIndex("EmpActivityId");

                    b.ToTable("Hr_EmpActivityDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpDocType", b =>
                {
                    b.Property<int>("EmpDocTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpDocTypId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpDocTypId");

                    b.ToTable("Hr_EmpDocTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpDocument", b =>
                {
                    b.Property<int>("EmpDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpDocId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpDocTypId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IssuePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpDocId");

                    b.HasIndex("EmpDocTypId");

                    b.ToTable("Hr_EmpDocuments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpElementPeriodBalance", b =>
                {
                    b.Property<int>("EmpElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpElementId"), 1L, 1);

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ElementValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 minute,2 hour,3 day, 4 number");

                    b.HasKey("EmpElementId");

                    b.ToTable("Hr_EmpElementPeriodBalance", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpGroup", b =>
                {
                    b.Property<int>("HrempGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HREmpGroupId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HrempGroupId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("GroupType")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsManager")
                        .HasColumnType("bit");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("HrempGroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("Hr_EmpGroups", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpLoan", b =>
                {
                    b.Property<int>("EmpLoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpLoanId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpLoanReqId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InstallmentValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Installments")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInstallmentStopped")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("LastInstallmentValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("LastPayDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("LoanBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("LoanCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("LoanValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PaidInstallmentCount")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartPayDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExemption")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpLoanId");

                    b.ToTable("Hr_EmpLoans", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpLoanRequest", b =>
                {
                    b.Property<int>("EmpLoanReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpLoanReqId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EmpLoanBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InstallmentValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Installments")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("LastInstallmentValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LoanValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpLoanReqId");

                    b.ToTable("Hr_EmpLoanRequest", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmployee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"), 1L, 1);

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("AnnualVacs")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AnnualVacsBalance")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Attendance")
                        .HasColumnType("bit")
                        .HasComment("true full Time,false Part time");

                    b.Property<bool?>("AutosalaryIssue")
                        .HasColumnType("bit");

                    b.Property<string>("BankAccNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BankName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Car")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("CommisionCollectionPerc")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CommisionPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ContractSrtDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("ContractType")
                        .HasColumnType("bit")
                        .HasComment("true limited, false unlimited");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DailyCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceEmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("DistributeSalary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DrivingExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DrivingIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DrivingLicense")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DrivingRenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte[]>("EmpImage")
                        .HasColumnType("image");

                    b.Property<string>("EtaxCustType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Business  tax Reg Required,Person   NationalID not required,Foreigner  Name and ID  required");

                    b.Property<decimal?>("Evaluation")
                        .HasColumnType("numeric(10,2)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("HealthInsEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("HealthInsId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("HealthInsID")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("HourlyCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("HourlyCostRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("HrempGroupId")
                        .HasColumnType("int")
                        .HasColumnName("HREmpGroupId");

                    b.Property<DateTime?>("IdexpiryDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("IDExpiryDate");

                    b.Property<DateTime?>("IdissueDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("IDIssueDate");

                    b.Property<string>("Idno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDNo")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("IsCommissionAfterDisc")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMoneyCollector")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSales")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTechnician")
                        .HasColumnType("bit");

                    b.Property<bool?>("IssueSalary")
                        .HasColumnType("bit");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<byte?>("KidsNo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("LastVacsUpdate")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("MaritalStatus")
                        .HasColumnType("tinyint")
                        .HasComment("0 single,1 married,2 married and have kids");

                    b.Property<byte?>("MaxVacsBalance")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MilitaryService")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("Nationality")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("PassportExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PassportIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassportNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<string>("Phone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Phone3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Qualification")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("Religion")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("ReservedVacs")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ReservedVacsBalance")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("SocialSecurityId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SocialSecurityID")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Syndicate")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("syndicate")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SyndicateId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("syndicateID")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TaxRefNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("TotalDailyCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalHourlyCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("WorkStartDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("EmpId");

                    b.HasIndex("DepartMentId");

                    b.HasIndex("HrempGroupId");

                    b.HasIndex("JobId");

                    b.HasIndex("PeriodTableId");

                    b.HasIndex("ShiftId");

                    b.ToTable("Hr_Employees", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpMovePromotDetail", b =>
                {
                    b.Property<int>("EmpMoveDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpMoveDetailId"), 1L, 1);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpMoveId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OldSalaryValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryValu")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("EmpMoveDetailId");

                    b.HasIndex("EmpMoveId");

                    b.ToTable("Hr_EmpMovePromotDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpMovePromotion", b =>
                {
                    b.Property<int>("EmpMoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpMoveId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("NewDepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("NewJobId")
                        .HasColumnType("int");

                    b.Property<int?>("NewStoreId")
                        .HasColumnType("int");

                    b.Property<string>("NewTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpMoveId")
                        .HasName("PK_Hr_MoveAndPromotion");

                    b.ToTable("Hr_EmpMovePromotion", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpSalaryDistribution", b =>
                {
                    b.Property<int>("SalaryDistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryDistId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryPercent")
                        .HasColumnType("numeric(18,5)");

                    b.HasKey("SalaryDistId");

                    b.ToTable("Hr_EmpSalaryDistribution", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpSalaryType", b =>
                {
                    b.Property<int>("EmpSalaryTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpSalaryTypesId"), 1L, 1);

                    b.Property<int?>("CreditAccId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditEmpAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitEmpAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryValu")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("EmpSalaryTypesId");

                    b.HasIndex("EmpId");

                    b.HasIndex("SalaryTypId");

                    b.ToTable("Hr_EmpSalaryTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpsSalaryTemp", b =>
                {
                    b.Property<int>("EmpsSalaryTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpsSalaryTempId"), 1L, 1);

                    b.Property<int?>("CreditAccId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditEmpAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitEmpAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("HrempGroupId")
                        .HasColumnType("int")
                        .HasColumnName("HREmpGroupId");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("EmpsSalaryTempId");

                    b.HasIndex("SalaryTypId");

                    b.ToTable("Hr_EmpsSalaryTemp", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpVacation", b =>
                {
                    b.Property<int>("EmpVacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpVacId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpVacId");

                    b.ToTable("Hr_EmpVacation", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrEmpVacationsDetail", b =>
                {
                    b.Property<int>("EmpVacDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpVacDetailId"), 1L, 1);

                    b.Property<byte?>("AnnualBalance")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AnnualVacs")
                        .HasColumnType("tinyint");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpVacId")
                        .HasColumnType("int");

                    b.Property<byte?>("OldAnnualBalance")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OldAnnualVacs")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OldReservedVacs")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OldReservedVacsBalance")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("ReservedVacs")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ReservedVacsBalance")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("EmpVacDetailId")
                        .HasName("PK_EmpVacationsDetails");

                    b.HasIndex("EmpVacId");

                    b.ToTable("Hr_EmpVacationsDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrJob", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"), 1L, 1);

                    b.Property<string>("Add1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jdesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("JDesc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jduties")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("JDuties")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jqualifications")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("JQualifications")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jresponsibilities")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("JResponsibilities")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("NumberAvailable")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("StandardDailyWage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("StandardDailyWorkHours")
                        .HasColumnType("decimal(5,2)");

                    b.Property<byte?>("StandardHolyDays")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("StandardHourlyWage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("StandardMonthlyWage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("TestMandatory")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobId");

                    b.ToTable("Hr_Jobs", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrKpi", b =>
                {
                    b.Property<int>("Kpiid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KPIId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Kpiid"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("KpiPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("Kpiid");

                    b.ToTable("Hr_KPIS", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrLeavePermision", b =>
                {
                    b.Property<int>("LeavPermisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeavPermisionId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("HoursCount")
                        .HasColumnType("numeric(18,5)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMission")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("LeavPermReqId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MissionDesc")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LeavPermisionId");

                    b.ToTable("Hr_LeavePermision", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrLeavPermissionRequest", b =>
                {
                    b.Property<int>("LeavPermReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeavPermReqId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("HoursCount")
                        .HasColumnType("numeric(18,5)");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LeavPermReqId");

                    b.ToTable("Hr_LeavPermissionRequest", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrMobileSetting", b =>
                {
                    b.Property<int>("HrMobSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HrMobSetId"), 1L, 1);

                    b.Property<int?>("DefLoanReqBookId")
                        .HasColumnType("int");

                    b.Property<int?>("DefPermReqBookId")
                        .HasColumnType("int");

                    b.Property<int?>("DefVacReqBookId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.HasKey("HrMobSetId");

                    b.ToTable("HR_MobileSetting", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrPeriodsTable", b =>
                {
                    b.Property<int>("PeriodTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodTableId"), 1L, 1);

                    b.Property<bool?>("AcceptShftBeforDismis")
                        .HasColumnType("bit")
                        .HasComment("احتساب الورديه فى حالة خروج الموظف و رجوعه قبل ميعاد الانصراف مع تجاهل عدد الساعات المحققه");

                    b.Property<bool?>("AcceptShiftHours")
                        .HasColumnType("bit")
                        .HasComment("اعتبار تحقيق الورديه بمجرد تحقيق عدد ساعات الورديه بغض النظر عن توقيت الحضور و الانصراف");

                    b.Property<bool?>("AcceptShiftVacs")
                        .HasColumnType("bit")
                        .HasComment("قبول تعويض الورديات فى أيام الأجازات");

                    b.Property<bool?>("AttendanceMachin")
                        .HasColumnType("bit");

                    b.Property<bool?>("CalcEarlyLeaveVacation")
                        .HasColumnType("bit");

                    b.Property<bool?>("CalcEarlyLeaveWeekEnd")
                        .HasColumnType("bit");

                    b.Property<bool?>("CalcLateAttendVacation")
                        .HasColumnType("bit");

                    b.Property<bool?>("CalcLateAttendWeekEnd")
                        .HasColumnType("bit");

                    b.Property<bool?>("CancelEarlyLeave")
                        .HasColumnType("bit")
                        .HasComment("الغاء الانصراف المبكر فى حالة تسجيل حضور ثانى فى نفس اليوم");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("CutLateTimFromOverTime")
                        .HasColumnType("bit")
                        .HasComment("خصم التأخير و الانصراف المبكر من الوقت الاضافى لنفس اليوم");

                    b.Property<byte?>("DailyWorkHours")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EarlyAttendElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EarlyAttendMinVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("EarlyAttendRound")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("EarlyAttendUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("EarlyLeaveElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EarlyLeaveMinVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("EarlyLeaveRound")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("EarlyLeaveUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FirstDayWork")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LateArrivalElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LateArrivalMinVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LateArrivalRound")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("LateArrivalUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PeriodCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PeriodWorkDays")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PeriodsNum")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("RoundingMethod")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Shift1NoShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("Shift1ShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("Shift2NoShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("Shift2ShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("Shift3NoShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("Shift3ShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<bool?>("ShiftNotAcheived")
                        .HasColumnType("bit")
                        .HasComment("عدم احتساب الورديه فى حالة خروج الموظف فى منتصف اليوم قبل ميعاد الانصراف");

                    b.Property<decimal?>("SubPeriodCount")
                        .HasColumnType("numeric(5,2)");

                    b.Property<byte?>("SubPeriodType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TableEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TableStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("VacOvrTimAftrDismis")
                        .HasColumnType("tinyint");

                    b.Property<int?>("VacationOvertimeElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("VacationOvertimeMinVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("VacationOvertimeRound")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("VacationOvertimeUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VacationWorkDayElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("VacationWorkMinVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("VacationWorkRound")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("VacationWorkUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte?>("WeekEndOvrTimAftrDismis")
                        .HasColumnType("tinyint");

                    b.Property<int?>("WeekEndWorkDayElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WeekEndWorkMinVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeekEndWorkRound")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("WeekEndWorkUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("WeekendOvertimeElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WeekendOvertimeMinVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeekendOvertimeRound")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("WeekendOvertimeUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("WorkDayNoShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkDayShowElementId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkdayOvertimeElementId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WorkdayOvertimeMinVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkdayOvertimeRound")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("WorkdayOvertimeUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte?>("WrkOvrTimAfterDismis")
                        .HasColumnType("tinyint");

                    b.HasKey("PeriodTableId");

                    b.ToTable("Hr_PeriodsTables", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrPeriodTableDetail", b =>
                {
                    b.Property<int>("PeriodTablDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodTablDetailId"), 1L, 1);

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("PayDayDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PeriodEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PeriodStrtDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<string>("SubPeriodCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TotalDays")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalVacsDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalVacsHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalWorkDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalWorkHours")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("PeriodTablDetailId");

                    b.HasIndex("PeriodTableId");

                    b.ToTable("Hr_PeriodTableDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrPeriodTablePolicy", b =>
                {
                    b.Property<int>("PeriodPolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodPolicyId"), 1L, 1);

                    b.Property<decimal?>("Approximate")
                        .HasColumnType("numeric(10,3)");

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<byte?>("AttendUnit")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Minimum")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.HasKey("PeriodPolicyId");

                    b.HasIndex("PeriodTableId");

                    b.ToTable("Hr_PeriodTablePolicy", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrPeriodTableVacation", b =>
                {
                    b.Property<int>("PeriodVacatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodVacatId"), 1L, 1);

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VacationDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("PeriodVacatId");

                    b.HasIndex("PeriodTableId");

                    b.ToTable("Hr_PeriodTableVacations", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrRewardAndPenalty", b =>
                {
                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RewardId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExecutDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMoral")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsReward")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("UnitDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("UnitValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("RewardId");

                    b.ToTable("Hr_RewardAndPenalty", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrSalaryCalcMethod", b =>
                {
                    b.Property<int>("SalaryCalcMethod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryCalcMethod"), 1L, 1);

                    b.Property<string>("CalcMethodCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("SalaryCalcMethod");

                    b.ToTable("Hr_SalaryCalcMethod", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrSalaryIssueDetail", b =>
                {
                    b.Property<int>("SalaryIssuDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryIssuDetailId"), 1L, 1);

                    b.Property<decimal?>("AddValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditEmpAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitCostcenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitEmpAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DeductValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ElementCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ElementCountDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ElementUnitValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OtherValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("SalaryIssuDocId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.HasKey("SalaryIssuDetailId");

                    b.HasIndex("SalaryIssuDocId");

                    b.ToTable("Hr_SalaryIssueDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrSalaryIssueDistribution", b =>
                {
                    b.Property<int>("SalaryIssuDistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryIssuDistId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryDays")
                        .HasColumnType("numeric(18,5)");

                    b.Property<decimal?>("SalaryHours")
                        .HasColumnType("numeric(18,5)");

                    b.Property<int?>("SalaryIssuDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalaryPercent")
                        .HasColumnType("numeric(18,5)");

                    b.Property<decimal?>("ValueShare")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("SalaryIssuDistId");

                    b.HasIndex("SalaryIssuDocId");

                    b.ToTable("Hr_SalaryIssueDistribution", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrSalaryIssueDoc", b =>
                {
                    b.Property<int>("SalaryIssuDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryIssuDocId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAddValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDeduction")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalOtherValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("SalaryIssuDocId");

                    b.ToTable("Hr_SalaryIssueDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrSalaryType", b =>
                {
                    b.Property<int>("SalaryTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryTypId"), 1L, 1);

                    b.Property<decimal?>("AddField1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AddField2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("AffectType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AnnualPeriods")
                        .HasColumnType("int");

                    b.Property<decimal?>("Approx")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("ApproxUp")
                        .HasColumnType("bit");

                    b.Property<byte?>("Approximation")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<bool?>("AutoIssue")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanDelet")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("CreditAccFilter")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CreditAccId")
                        .HasColumnType("int");

                    b.Property<byte?>("CreditCostCenterFilter")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CreditCostCenterId")
                        .HasColumnType("int");

                    b.Property<byte?>("DebitAccFilter")
                        .HasColumnType("tinyint");

                    b.Property<int?>("DebitAccId")
                        .HasColumnType("int");

                    b.Property<byte?>("DebitCostCenterFilter")
                        .HasColumnType("tinyint");

                    b.Property<int?>("DebitCostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Devide")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Distributable")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ElementCount")
                        .HasColumnType("numeric(18,5)");

                    b.Property<string>("ElementCountDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Equation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("ImplementScale")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Indmnity")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsAnnualSegment")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBasicsalary")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsZeroIfLargerThan")
                        .HasColumnType("bit");

                    b.Property<bool?>("LargerThanZero")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaximumVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MinimumVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Multiply")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ParentRelation")
                        .HasColumnType("int");

                    b.Property<byte?>("SalaryCalcMethod")
                        .HasColumnType("tinyint");

                    b.Property<string>("SalaryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("SalaryValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("SocialSecurity")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Taxation")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("UseElementOrUnit")
                        .HasColumnType("bit");

                    b.Property<byte?>("UseType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("ZeroIfLargerThan")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("SalaryTypId");

                    b.ToTable("Hr_SalaryTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrSegment", b =>
                {
                    b.Property<int>("SegmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SegmentId"), 1L, 1);

                    b.Property<decimal?>("FromSegmant")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SalaryTypId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SegmantPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("SegmentSerial")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("ToSegmant")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("SegmentId");

                    b.HasIndex("SalaryTypId");

                    b.ToTable("Hr_Segments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrShift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Day1Name1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Day1Name2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("Day1Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day2Name1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Day2Name2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("Day2Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day3Name1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Day3Name2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("Day3Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day4Name1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Day4Name2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("Day4Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day5Name1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Day5Name2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("Day5Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day6Name1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Day6Name2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("Day6Type")
                        .HasColumnType("bit");

                    b.Property<string>("Day7Name1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Day7Name2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("Day7Type")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("FirstShfDay1tFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay1To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay2From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay2To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay3From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay3To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay4From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay4To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay5From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay5To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay6From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay6To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay7From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FirstShftDay7To")
                        .HasColumnType("datetime");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("SecondShftDay1From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay1To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay2From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay2To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay3From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay3To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay4From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay4To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay5From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay5To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay6From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay6To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay7From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SecondShftDay7To")
                        .HasColumnType("datetime");

                    b.Property<string>("ShiftCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("ThirdShftDay1From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay1To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay2From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay2To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay3From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay3To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay4From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay4To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay5From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay5To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay6From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay6To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay7From")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThirdShftDay7To")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ShiftId");

                    b.ToTable("Hr_Shifts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrSysgenral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Countmin")
                        .HasColumnType("int")
                        .HasColumnName("countmin");

                    b.Property<string>("Dateformat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("dateformat");

                    b.Property<int?>("Filteratt")
                        .HasColumnType("int")
                        .HasColumnName("filteratt");

                    b.Property<int?>("Filtercheckcollector")
                        .HasColumnType("int")
                        .HasColumnName("filtercheckcollector");

                    b.Property<int?>("Modes")
                        .HasColumnType("int")
                        .HasColumnName("modes");

                    b.Property<string>("Modrolin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modrolin");

                    b.Property<string>("Modrolout")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modrolout");

                    b.Property<string>("Namesetting")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("namesetting");

                    b.HasKey("Id");

                    b.ToTable("hr_sysgenral", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrSyssettinge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Countitertaion")
                        .HasColumnType("int")
                        .HasColumnName("countitertaion");

                    b.Property<int?>("Countitertaionout")
                        .HasColumnType("int")
                        .HasColumnName("countitertaionout");

                    b.Property<int?>("Idgenralsetting")
                        .HasColumnType("int")
                        .HasColumnName("idgenralsetting");

                    b.Property<int?>("Modetype")
                        .HasColumnType("int")
                        .HasColumnName("modetype");

                    b.Property<int?>("Modetypeout")
                        .HasColumnType("int")
                        .HasColumnName("modetypeout");

                    b.Property<int?>("Rolid")
                        .HasColumnType("int")
                        .HasColumnName("rolid");

                    b.Property<int?>("Statusmodin")
                        .HasColumnType("int")
                        .HasColumnName("statusmodin");

                    b.Property<int?>("Statusmodout")
                        .HasColumnType("int")
                        .HasColumnName("statusmodout");

                    b.HasKey("Id");

                    b.ToTable("Hr_syssettinges", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrTarget", b =>
                {
                    b.Property<int>("TargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TargetId"), 1L, 1);

                    b.Property<decimal?>("AcheivedPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DeservPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("HrempGroupId")
                        .HasColumnType("int")
                        .HasColumnName("HREmpGroupId");

                    b.Property<decimal?>("ManagerLevel1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ManagerLevel2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ManagerLevel3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ManagerLevel4Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ManagerLevel5Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("TargetFrom")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TargetTo")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("TargetType")
                        .HasColumnType("tinyint")
                        .HasComment("1 مبلغ, 2 عدد");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TargetId");

                    b.ToTable("HR_Targets", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrTermination", b =>
                {
                    b.Property<int>("TerminateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminateId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("ServiceEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<byte?>("TerminateType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("ValueDeserve")
                        .HasColumnType("tinyint");

                    b.HasKey("TerminateId");

                    b.ToTable("Hr_Termination", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrVacationDoc", b =>
                {
                    b.Property<int>("VacationDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacationDocId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<byte?>("AnnualVacs")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AnnualVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("NetDaysCount")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("ReservedVacs")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ReservedVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VacRequestId")
                        .HasColumnType("int");

                    b.Property<byte?>("VacationType")
                        .HasColumnType("tinyint");

                    b.HasKey("VacationDocId");

                    b.ToTable("Hr_VacationDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrVacationEdit", b =>
                {
                    b.Property<int>("VacationEditDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacationEditDocId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<byte?>("AnnualVacs")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AnnualVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("AttendElementId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("NetDaysCount")
                        .HasColumnType("int");

                    b.Property<int?>("NewDayCount")
                        .HasColumnType("int");

                    b.Property<int?>("NewNetDaysCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NewReturnDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("ReservedVacs")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ReservedVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VacationDocId")
                        .HasColumnType("int");

                    b.Property<byte?>("VacationType")
                        .HasColumnType("tinyint");

                    b.HasKey("VacationEditDocId");

                    b.ToTable("Hr_VacationEdit", (string)null);
                });

            modelBuilder.Entity("DAL.Models.HrVacationRequest", b =>
                {
                    b.Property<int>("VacRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacRequestId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<byte?>("AnnualVacs")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AnnualVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("NetDaysCount")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("ReservedVacs")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ReservedVacsBalance")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("VacationType")
                        .HasColumnType("tinyint");

                    b.HasKey("VacRequestId");

                    b.ToTable("Hr_VacationRequest", (string)null);
                });

            modelBuilder.Entity("DAL.Models.LaLand", b =>
                {
                    b.Property<int>("LandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandId"), 1L, 1);

                    b.Property<string>("BasicMemeber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsResidential")
                        .HasColumnType("bit");

                    b.Property<int?>("LandInternalNo")
                        .HasColumnType("int");

                    b.Property<int?>("LandMainNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("LandSize")
                        .HasColumnType("numeric(18,2)");

                    b.Property<bool?>("RightLeft")
                        .HasColumnType("bit");

                    b.Property<int?>("StreetNo")
                        .HasColumnType("int");

                    b.HasKey("LandId");

                    b.HasIndex("CustomerId");

                    b.ToTable("La_Lands", (string)null);
                });

            modelBuilder.Entity("DAL.Models.LaPropSerial", b =>
                {
                    b.Property<int>("PropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropId"), 1L, 1);

                    b.Property<int?>("CustMain")
                        .HasColumnType("int");

                    b.Property<int?>("CustProp")
                        .HasColumnType("int");

                    b.Property<int?>("LandId")
                        .HasColumnType("int");

                    b.HasKey("PropId");

                    b.HasIndex("CustMain");

                    b.ToTable("La_PropSerial", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MobSalesInvoice", b =>
                {
                    b.Property<int>("InvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<decimal?>("BankTransfer")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EtaxReference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EtaxRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("EtaxSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EtaxSentTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHold")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMobile")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsRemoteEntity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ItemCommision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainCustServerId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool?>("MultiResourceDeliver")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PayMethodDatafield")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayMethodPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RemotId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemsCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemsProfit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJobOrders")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyCar")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyNoVehicl")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyPump")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("InvId");

                    b.ToTable("Mob_SalesInvoice", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MobSalesInvoiceItemCard", b =>
                {
                    b.Property<int>("InvItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvItemCardId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CityIdfrom")
                        .HasColumnType("int")
                        .HasColumnName("CityIDFrom");

                    b.Property<int?>("CityIdto")
                        .HasColumnType("int")
                        .HasColumnName("CityIDTo");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CommisionPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CommisionValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("DelivItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("InOffer")
                        .HasColumnType("bit");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCommisionPercent")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<int?>("ItemOfferId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JobProductId")
                        .HasColumnType("int")
                        .HasColumnName("jobProductId");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OfferPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("PettycashId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<byte?>("PriceList")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VehicleId1")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId2")
                        .HasColumnType("int");

                    b.Property<int?>("VjorderId")
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    b.HasKey("InvItemCardId");

                    b.HasIndex("InvId");

                    b.ToTable("Mob_SalesInvoiceItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsAdjustMent", b =>
                {
                    b.Property<int>("AdjustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdjustId"), 1L, 1);

                    b.Property<bool?>("AdjSourcType")
                        .HasColumnType("bit")
                        .HasComment("1 customer, 2 vendor");

                    b.Property<int?>("AdjSourcTypeId")
                        .HasColumnType("int")
                        .HasComment("customer or vendor id");

                    b.Property<bool?>("AdjType")
                        .HasColumnType("bit")
                        .HasComment("1 debit, 2 credit");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("CurrencyId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DifferenceInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DocBookId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaidInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ResourceBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCheques")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("AdjustId");

                    b.ToTable("Ms_AdjustMents", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsAttachment", b =>
                {
                    b.Property<int>("AttachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttachId"), 1L, 1);

                    b.Property<string>("AttachDesc1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttachDesc2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttachPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AttachPath2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("AttachSerial")
                        .HasColumnType("int");

                    b.Property<string>("AttachType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Encrypted")
                        .HasColumnType("bit");

                    b.Property<string>("EncyptionDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IssuePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("TableCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.HasKey("AttachId");

                    b.ToTable("Ms_Attachments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsBankAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<string>("AcounntNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AcounntNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AcountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AccountId");

                    b.ToTable("Ms_BankAccount", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsBoxBank", b =>
                {
                    b.Property<int>("BoxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("0 Box ,1  Bank");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoxId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("BankFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BankMobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BankResposableName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BankTel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BoxCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CheckPrintId")
                        .HasColumnType("int")
                        .HasColumnName("CheckPrintID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Desca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCA")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Desce")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCE")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("ForAdjustOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsBank")
                        .HasColumnType("bit")
                        .HasComment("0 Box ; 1 Bank");

                    b.Property<string>("KeeperName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.HasKey("BoxId");

                    b.ToTable("MS_BoxBank", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsBoxCurrency", b =>
                {
                    b.Property<int>("BoxCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoxCurrencyId"), 1L, 1);

                    b.Property<int?>("AccountChrtId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BankExpensAccId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<int?>("ChequndercollectId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("RetAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.HasKey("BoxCurrencyId");

                    b.HasIndex("AccountId");

                    b.HasIndex("BoxId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("MS_BoxCurrency", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsBoxTransferDetail", b =>
                {
                    b.Property<int>("BoxTranDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoxTranDetailId"), 1L, 1);

                    b.Property<int?>("BoxFrom")
                        .HasColumnType("int");

                    b.Property<int?>("BoxTo")
                        .HasColumnType("int");

                    b.Property<int?>("BoxTranId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Valu")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("valu");

                    b.HasKey("BoxTranDetailId")
                        .HasName("PK_BoxTransferDetail");

                    b.HasIndex("BoxTranId");

                    b.ToTable("MS_BoxTransferDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsBoxTransferNote", b =>
                {
                    b.Property<int>("BoxTranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoxTranId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBox")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm1")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StrCustm2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm2")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StrCustm3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm3")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.HasKey("BoxTranId");

                    b.ToTable("MS_BoxTransferNote", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsBoxUser", b =>
                {
                    b.Property<int>("BoxUsersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoxUsersId"), 1L, 1);

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BoxUsersId");

                    b.HasIndex("BoxId");

                    b.HasIndex("UserId");

                    b.ToTable("Ms_BoxUsers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsBusinessPartner", b =>
                {
                    b.Property<int>("BspartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BSPartnerId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BspartnerId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("Barcode")
                        .HasColumnType("tinyint");

                    b.Property<int?>("BsPartnerCatId")
                        .HasColumnType("int");

                    b.Property<int?>("BsPartnerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CarLicenseExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CarLicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CarLicenseIssuePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarLicenseNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLimitAllowed")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CustID")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustJob")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("DefaultDisc")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DiscPercentOrVal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DtReg")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dtReg");

                    b.Property<DateTime?>("DtRegRenew")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dtRegRenew");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Evaluation")
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("ForAdjustOnly")
                        .HasColumnType("bit");

                    b.Property<string>("HomePage")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool?>("InternationalLicense")
                        .HasColumnType("bit");

                    b.Property<byte?>("InvoiceCopies")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreditEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscountByItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPricIncludTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxExempted")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartnerCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartnerDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartnerDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("PassPortExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PassPortIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassPortIssuePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassPortNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PrePaidPercent")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ReportDiscValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("SalPrice")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TaxExemptionNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxRefNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BspartnerId");

                    b.HasIndex("BsPartnerCatId");

                    b.HasIndex("BsPartnerTypeId");

                    b.ToTable("Ms_BusinessPartners", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsBusinessPartnerCategory", b =>
                {
                    b.Property<int>("BsPartnerCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BsPartnerCatId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerCatLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("CustomerCatType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ParentCustomerCatId")
                        .HasColumnType("int");

                    b.Property<string>("PartnerCatCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartnerCatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartnerCatDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BsPartnerCatId");

                    b.ToTable("Ms_BusinessPartnerCategory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsBusinessPartnerType", b =>
                {
                    b.Property<int>("BsPartnerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BsPartnerTypeId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartnerTypeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartnerTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartnerTypeDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PartnerTypeLevel")
                        .HasColumnType("int");

                    b.Property<int?>("PartnerTypeParent")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BsPartnerTypeId");

                    b.ToTable("Ms_BusinessPartnerType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCashTransactionDetail", b =>
                {
                    b.Property<int>("PaidDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaidDocId"), 1L, 1);

                    b.Property<int?>("AdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("JurnalId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaidBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Paid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidByDoc")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidByDocBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("TrNoDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PaidDocId");

                    b.HasIndex("AdjustId");

                    b.HasIndex("JurnalId");

                    b.HasIndex("PayId");

                    b.HasIndex("RectId");

                    b.ToTable("MS_CashTransactionDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCheqBook", b =>
                {
                    b.Property<int>("CheqBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheqBookId"), 1L, 1);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CheqBookCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CheqBookNamAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CheqBookNamAR");

                    b.Property<string>("CheqBookNamEn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CheqBookNamEN");

                    b.Property<int?>("CheqNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CurrentNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("EmpDefaultBook")
                        .HasColumnType("bit");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("StartAt")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CheqBookId")
                        .HasName("PK_Ms_Books");

                    b.HasIndex("EmpId");

                    b.ToTable("Ms_CheqBooks", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsChequesOpenning", b =>
                {
                    b.Property<int>("ChequeOpenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChequeOpenId"), 1L, 1);

                    b.Property<int?>("BeneficiaryAccId")
                        .HasColumnType("int")
                        .HasColumnName("beneficiaryAccId");

                    b.Property<int?>("BoxCurrencyId")
                        .HasColumnType("int")
                        .HasComment("if Paper In [bank account and chartof account], if PaperOut [should be from book] and book is related to bank account which is related to account in chart of accounts");

                    b.Property<byte?>("CheckType")
                        .HasColumnType("tinyint");

                    b.Property<string>("ChequeNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("HelpTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("InOrOut")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHelpingAccount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKembiala")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(28,7)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(28,7)");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(28,7)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ChequeOpenId");

                    b.ToTable("Ms_ChequesOpenning", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsChequeTransfer", b =>
                {
                    b.Property<int>("ChequTranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChequTranId"), 1L, 1);

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("ChequTranId");

                    b.ToTable("Ms_ChequeTransfer", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsChequeTransferDetail", b =>
                {
                    b.Property<int>("ChequTranDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChequTranDetailId"), 1L, 1);

                    b.Property<decimal?>("BalanceAfter")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ChequTranDetailId");

                    b.ToTable("Ms_ChequeTransferDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCommission", b =>
                {
                    b.Property<int>("CommissionDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommissionDocId"), 1L, 1);

                    b.Property<byte?>("CalcMethod")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("CommissionPercent")
                        .HasColumnType("numeric(10,4)");

                    b.Property<decimal?>("CommissionValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FromBookId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<int?>("ToBookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.HasKey("CommissionDocId");

                    b.ToTable("Ms_Commission", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCompany", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<string>("CompNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CompNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CompShortNameA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompShortNameE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DateOfEstablishment")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LegalEntity")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("image");

                    b.Property<string>("MailBox")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Mobile1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Mobile2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Mobile3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Website1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Website2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Website3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("YearEndTo")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("YearStartfrom")
                        .HasColumnType("smalldatetime");

                    b.HasKey("CompanyId")
                        .HasName("PK_Cal_Company");

                    b.ToTable("MS_Company", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCurrency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<string>("CollectionCurrencyFractionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CollectionCurrencyFractionName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CollectionCurrencyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CollectionCurrencyName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CollectionCurrencyTempName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrancyNameFractionOverthree")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrancyNameFractionOverthree2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CurrancyNameOverthree")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrancyNameOverthree2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CurrancyNameTempOver3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrenctType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("DecimalPlaces")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("DefualtCurrency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DoubleCurencyFractionname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DoubleCurencyFractionname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DoubleCurencyTempname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DoubleCurencyname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DoubleCurencyname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("EquivalentConversionPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("EtaxUnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FractionalUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fractionalUnit")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("LastModify")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SingleCurencyFractionname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("singleCurencyFractionname")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SingleCurencyFractionname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("singleCurencyFractionname2");

                    b.Property<string>("SingleCurencyTempname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("singleCurencyTempname")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SingleCurencyname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("singleCurencyname")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SingleCurencyname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("singleCurencyname2");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CurrencyId");

                    b.ToTable("MS_Currency", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCurrencyCategory", b =>
                {
                    b.Property<int>("CurrencyCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyCategoryId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyCategoryNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyCategoryNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("CurrencyCategoryId");

                    b.ToTable("MS_CurrencyCategory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCurrencyCategoryJoin", b =>
                {
                    b.Property<int>("CurrencyCatJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyCatJoinId"), 1L, 1);

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<byte?>("CurrencyType")
                        .HasColumnType("tinyint");

                    b.HasKey("CurrencyCatJoinId");

                    b.HasIndex("CurrencyCategoryId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Ms_CurrencyCategoryJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCurrencyDailyRateChange", b =>
                {
                    b.Property<int>("CurrencyChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyChangeId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAndTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("LocalCurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NewRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OldRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CurrencyChangeId");

                    b.ToTable("Ms_CurrencyDailyRateChanges", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCurrencyRate", b =>
                {
                    b.Property<int>("EqualCurrencyPriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EqualCurrencyPriceId"), 1L, 1);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("EquivalentCurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModify")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("EqualCurrencyPriceId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Ms_CurrencyRate", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCusromerUser", b =>
                {
                    b.Property<int>("CustUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustUserId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Ms_CusromerUsers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCustImg", b =>
                {
                    b.Property<int>("CustImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustImgId"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("ImgDesc1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImgDesc2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("CustImgId")
                        .HasName("PK_CustImgs");

                    b.HasIndex("CustomerId");

                    b.ToTable("Ms_CustImgs", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCustomer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("Barcode")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CarLicenseExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CarLicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CarLicenseIssuePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarLicenseNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLimitAllowed")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CustID")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustJob")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CustomerCatId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("DefaultDisc")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DiscPercentOrVal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DtReg")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dtReg");

                    b.Property<DateTime?>("DtRegRenew")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dtRegRenew");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EtaxCustType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Business  tax Reg Required,Person   NationalID not required,Foreigner  Name and ID  required");

                    b.Property<decimal?>("Evaluation")
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("ForAdjustOnly")
                        .HasColumnType("bit");

                    b.Property<string>("HomePage")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool?>("InternationalLicense")
                        .HasColumnType("bit");

                    b.Property<byte?>("InvoiceCopies")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreditEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDealer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscountByItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMobile")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPricIncludTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsServerEntity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxExempted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxInvHold")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<bool?>("LegalAssign")
                        .HasColumnType("bit");

                    b.Property<string>("LegalStatus")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PassPortExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PassPortIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassPortIssuePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassPortNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PrePaidPercent")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ReportDiscValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("SalPrice")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TaxExemptionNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxRefNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CustomerId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerCatId");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("MS_Customer", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCustomerBranch", b =>
                {
                    b.Property<int>("CustBranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustBranchId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<string>("CustBranchCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustBranchName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustBranchName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("CustBranchId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Ms_CustomerBranches", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCustomerCategory", b =>
                {
                    b.Property<int>("CustomerCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerCatId"), 1L, 1);

                    b.Property<byte?>("Barcode")
                        .HasColumnType("tinyint");

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLimitAllowed")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerCatLevel")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerCatParent")
                        .HasColumnType("int");

                    b.Property<decimal?>("DefaultDisc")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DiscPercentOrVal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreditEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDealer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscountByItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxExempted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentCustomerCatId")
                        .HasColumnType("int");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ReportDiscValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("SalPrice")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CustomerCatId");

                    b.ToTable("MS_CustomerCategory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCustomerContact", b =>
                {
                    b.Property<int>("CustContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustContactId"), 1L, 1);

                    b.Property<int?>("AccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId3")
                        .HasColumnType("int");

                    b.Property<string>("Bank1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Bank2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactAddress2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactAddress3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactEmail1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactEmail2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactEmail3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPhone1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone3")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone4")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone5")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Idno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IDNo");

                    b.Property<bool?>("Isprimary")
                        .HasColumnType("bit");

                    b.Property<string>("PassPortNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CustContactId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Ms_CustomerContacts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCustomerFollowUpType", b =>
                {
                    b.Property<int>("FollowUpTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FollowUpTypeId"), 1L, 1);

                    b.Property<int?>("CarCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("FollowUpTypeId")
                        .HasName("PK_Ms_CustomerFollowUp");

                    b.ToTable("Ms_CustomerFollowUpTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCustomersFollowUp", b =>
                {
                    b.Property<int>("FollowUpUpdateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FollowUpUpdateId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("FollowUpTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ValidityDays")
                        .HasColumnType("int");

                    b.HasKey("FollowUpUpdateId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Ms_CustomersFollowUp", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsCustomerType", b =>
                {
                    b.Property<int>("CustomerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerTypeId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrentTrNo")
                        .HasColumnType("int");

                    b.Property<string>("CustomerTypeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerTypeDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerTypeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("CustomerTypeLevelType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CustomerTypeParent")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CustomerTypeId");

                    b.ToTable("Ms_CustomerTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsDeliverItemCard", b =>
                {
                    b.Property<int>("DelivItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DelivItemCardId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<int?>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobMaterialId")
                        .HasColumnType("int")
                        .HasColumnName("jobMaterialId");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RetPurchItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesDepId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrdertemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("Satus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId1")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId2")
                        .HasColumnType("int");

                    b.HasKey("DelivItemCardId")
                        .HasName("PK_DeliverItemCard");

                    b.HasIndex("DeliverId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("UnitId");

                    b.ToTable("Ms_DeliverItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsDeliverSalesInvoice", b =>
                {
                    b.Property<int>("DeliverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliverId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("CostExecuted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DeliverQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DeliverQtyOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit")
                        .HasComment("True Closed ;  False  Not Closed");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPricFromInvBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetPriceFromInv")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("0 Invoice ; 1 Customer ; 2 Return");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm4");

                    b.Property<string>("StrCustm5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm5");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCostAveragBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalCostAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalLastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalLastCostBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyCar")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyNoVehicl")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyPump")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("DeliverId");

                    b.ToTable("Ms_DeliverSalesInvoice", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsDeliverSalesInvoiceExpense", b =>
                {
                    b.Property<int>("DeliverIdExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliverIdExpenseId"), 1L, 1);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("DeliverIdExpenseId");

                    b.HasIndex("DeliverId");

                    b.ToTable("Ms_DeliverSalesInvoiceExpenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsDeliverSalesInvoiceMultiAccount", b =>
                {
                    b.Property<int>("SalesDelMultiAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesDelMultiAccountId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId4")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RectSourceBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SalesDelMultiAccountId");

                    b.HasIndex("DeliverId");

                    b.ToTable("Ms_DeliverSalesInvoiceMultiAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsDescription", b =>
                {
                    b.Property<int>("DescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DescriptionId"), 1L, 1);

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("DescriptionId");

                    b.ToTable("Ms_Description", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsExpense", b =>
                {
                    b.Property<int>("ExpensesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpensesId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ExpensesCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ExpensesDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ExpensesDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("ExpensesType")
                        .HasColumnType("tinyint")
                        .HasComment("0 Sales , 1 Purchase , 2 Others");

                    b.Property<decimal?>("ExpensesValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ExpensesId");

                    b.ToTable("MS_Expenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaCapacity", b =>
                {
                    b.Property<int>("CapcityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CapcityId"), 1L, 1);

                    b.Property<string>("CapcityCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CapcityDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CapcityDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CapcityId")
                        .HasName("PK_Ms_Capacity");

                    b.ToTable("MsGA_Capacity", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsgaCity", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("CityCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SysCityId")
                        .HasColumnType("int")
                        .HasColumnName("SysCityID");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CityId")
                        .HasName("PK_MS_City");

                    b.ToTable("MSGA_City", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterExport", b =>
                {
                    b.Property<int>("LetterExportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetterExportId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomsNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("LetterExportId");

                    b.ToTable("MsGA_LetterExport", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterExportDetail", b =>
                {
                    b.Property<int>("LetExpDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetExpDetailId"), 1L, 1);

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BuyerAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BuyerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("ColLetterPrinted")
                        .HasColumnType("bit")
                        .HasColumnName("colLetterPrinted");

                    b.Property<bool?>("ColQutPrinted")
                        .HasColumnType("bit")
                        .HasColumnName("colQutPrinted");

                    b.Property<bool?>("ColSalePrinted")
                        .HasColumnType("bit")
                        .HasColumnName("colSalePrinted");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<bool?>("IsCurrentBuyer")
                        .HasColumnType("bit");

                    b.Property<int?>("LetterExportId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LetExpDetailId");

                    b.HasIndex("LetterExportId");

                    b.ToTable("MsGA_LetterExportDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterFayum", b =>
                {
                    b.Property<int>("LetterFayumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetterFayumId"), 1L, 1);

                    b.Property<string>("AddField11")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField21")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("ApprovedBookBody")
                        .HasColumnType("bit");

                    b.Property<bool?>("ApprovedBookMotor")
                        .HasColumnType("bit");

                    b.Property<int?>("BodyPeriodicBookId")
                        .HasColumnType("int");

                    b.Property<bool?>("BookBodyPrint")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BookBodyPrintTime")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("BookMotorPrint")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BookMotorPrintTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Client2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("client2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LogoPrintedBody")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LogoPrintedMotor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MotorPeriodicBookId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("LetterFayumId");

                    b.ToTable("MsGA_LetterFayum", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterFayumDetail", b =>
                {
                    b.Property<int>("LetFayumDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetFayumDetailId"), 1L, 1);

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField11")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField21")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BuyerAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BuyerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("ColLetterPrinted")
                        .HasColumnType("bit")
                        .HasColumnName("colLetterPrinted");

                    b.Property<bool?>("ColQutPrinted")
                        .HasColumnType("bit")
                        .HasColumnName("colQutPrinted");

                    b.Property<bool?>("ColSalePrinted")
                        .HasColumnType("bit")
                        .HasColumnName("colSalePrinted");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<bool?>("IsCurrentBuyer")
                        .HasColumnType("bit");

                    b.Property<int?>("LetterFayumId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LetFayumDetailId");

                    b.HasIndex("LetterFayumId");

                    b.ToTable("MsGA_LetterFayumDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterNormal", b =>
                {
                    b.Property<int>("LetterNormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetterNormId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("ApprovedBookBody")
                        .HasColumnType("bit");

                    b.Property<bool?>("ApprovedBookMotor")
                        .HasColumnType("bit");

                    b.Property<int?>("BodyPeriodicBookId")
                        .HasColumnType("int");

                    b.Property<bool?>("BookBodyPrint")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BookBodyPrintTime")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("BookMotorPrint")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BookMotorPrintTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Client2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("client2");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("IsOurBody")
                        .HasColumnType("bit");

                    b.Property<string>("LogoPrintedBody")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LogoPrintedMotor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MotorPeriodicBookId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<bool?>("TaxPrinted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VehicleShapeId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleTypId")
                        .HasColumnType("int");

                    b.HasKey("LetterNormId");

                    b.ToTable("MsGA_LetterNormal", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterNormalDetail", b =>
                {
                    b.Property<int>("LetNormDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetNormDetailId"), 1L, 1);

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField11")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField21")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BuyerAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BuyerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("ColLetterPrinted")
                        .HasColumnType("bit")
                        .HasColumnName("colLetterPrinted");

                    b.Property<bool?>("ColQutPrinted")
                        .HasColumnType("bit")
                        .HasColumnName("colQutPrinted");

                    b.Property<bool?>("ColSalePrinted")
                        .HasColumnType("bit")
                        .HasColumnName("colSalePrinted");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<bool?>("IsCurrentBuyer")
                        .HasColumnType("bit");

                    b.Property<int?>("LetterNormId")
                        .HasColumnType("int");

                    b.Property<string>("PlateNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("TaxPrinted")
                        .HasColumnType("bit");

                    b.Property<string>("TaxReg")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LetNormDetailId");

                    b.HasIndex("LetterNormId");

                    b.ToTable("MsGA_LetterNormalDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterQuery", b =>
                {
                    b.Property<int>("GawabQueryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GawabQueryId"), 1L, 1);

                    b.Property<int?>("AuthUser")
                        .HasColumnType("int");

                    b.Property<bool?>("CanEditBuyer")
                        .HasColumnType("bit");

                    b.Property<int?>("CopyCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("EditDone")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrint")
                        .HasColumnType("bit");

                    b.Property<int?>("LetterNormId")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PrintedCopy")
                        .HasColumnType("int");

                    b.Property<int?>("RemainCopy")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("GawabQueryId");

                    b.ToTable("MsGA_LetterQuery", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterTax", b =>
                {
                    b.Property<int>("LetterTaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetterTaxId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("LetterNormId")
                        .HasColumnType("int");

                    b.Property<int?>("LetterTaxTempId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityUsed")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("LetterTaxId");

                    b.ToTable("MsGA_LetterTax", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterTempTax", b =>
                {
                    b.Property<int>("LetterTaxTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetterTaxTempId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(22,2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityUsed")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxPercent")
                        .HasColumnType("numeric(7,2)");

                    b.Property<decimal?>("TaxValu")
                        .HasColumnType("numeric(22,2)");

                    b.Property<string>("TempCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TempDesca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TempDesce")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("LetterTaxTempId");

                    b.ToTable("MsGA_LetterTempTax", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaMachineType", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MachineID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MachineId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MachineCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MachineName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VehicleShapeId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleTypId")
                        .HasColumnType("int");

                    b.HasKey("MachineId")
                        .HasName("PK_Ms_type");

                    b.ToTable("MsGA_MachineType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaMoror", b =>
                {
                    b.Property<int>("MororId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MororID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MororId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MoroCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MororName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MororId")
                        .HasName("PK_GAV_Moror");

                    b.ToTable("MsGA_Moror", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaMotorSn", b =>
                {
                    b.Property<int>("MotorDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MotorDocId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsMotor")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MotorDocId");

                    b.ToTable("MsGA_MotorSN", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaMotorSndetail", b =>
                {
                    b.Property<int>("MotorSearialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MotorSearialID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MotorSearialId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("BasicSaleType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((0))")
                        .HasComment("0 Cash ; 1 Installment");

                    b.Property<string>("BodySn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BodySN");

                    b.Property<int?>("CapcityId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<int?>("LetterFayumId")
                        .HasColumnType("int");

                    b.Property<int?>("LetterNormId")
                        .HasColumnType("int");

                    b.Property<bool?>("LetterType")
                        .HasColumnType("bit");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int")
                        .HasColumnName("MachineID");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MororId")
                        .HasColumnType("int")
                        .HasColumnName("MororID");

                    b.Property<int?>("MotorDocId")
                        .HasColumnType("int");

                    b.Property<string>("MotorSn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MotorSN");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MotorSearialId")
                        .HasName("PK_Ms_MotorSearial");

                    b.HasIndex("LetterFayumId");

                    b.HasIndex("LetterNormId");

                    b.HasIndex("MotorDocId");

                    b.ToTable("MsGA_MotorSNDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaPeriodicBook", b =>
                {
                    b.Property<int>("PeriodicBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicBookId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("BodyOrMotor")
                        .HasColumnType("bit");

                    b.Property<int?>("CapcityId")
                        .HasColumnType("int");

                    b.Property<string>("Cover1")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Cover2")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstLetter")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("LastLetter")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("Logo1")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Logo2")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Logo3")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PreFix")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("SerialEnd")
                        .HasColumnType("int");

                    b.Property<int?>("SerialStart")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("PeriodicBookId");

                    b.ToTable("MsGA_PeriodicBook", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaPeriodicBookDetail", b =>
                {
                    b.Property<int>("PeriodicBookDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodicBookDetailId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("BasicSaleType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((0))")
                        .HasComment("0 Cash ; 1 Installment");

                    b.Property<string>("BodySn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BodySN");

                    b.Property<int?>("CapcityId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<int?>("LetterNormId")
                        .HasColumnType("int");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int")
                        .HasColumnName("MachineID");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MororId")
                        .HasColumnType("int")
                        .HasColumnName("MororID");

                    b.Property<string>("MotorSn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MotorSN");

                    b.Property<int?>("PeriodicBookId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Serial")
                        .HasColumnType("int");

                    b.HasKey("PeriodicBookDetailId");

                    b.HasIndex("LetterNormId");

                    b.HasIndex("PeriodicBookId");

                    b.ToTable("MsGA_PeriodicBookDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaShipment", b =>
                {
                    b.Property<int>("ShipMentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipMentId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ShipMentId");

                    b.ToTable("MsGA_Shipment", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsGaShipmentDetail", b =>
                {
                    b.Property<int>("ShipMentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipMentDetailId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("BasicSaleType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((0))")
                        .HasComment("0 Cash ; 1 Installment");

                    b.Property<string>("BodySn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BodySN");

                    b.Property<int?>("CapcityId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<int?>("LetterExportId")
                        .HasColumnType("int");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int")
                        .HasColumnName("MachineID");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MororId")
                        .HasColumnType("int")
                        .HasColumnName("MororID");

                    b.Property<string>("MotorSn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MotorSN");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Serial")
                        .HasColumnType("int");

                    b.Property<int>("ShipMentId")
                        .HasColumnType("int");

                    b.HasKey("ShipMentDetailId");

                    b.HasIndex("LetterExportId");

                    b.HasIndex("ShipMentId");

                    b.ToTable("MsGA_ShipmentDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemAlternative", b =>
                {
                    b.Property<int>("AlterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlterId"), 1L, 1);

                    b.Property<int?>("AlterItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("AlterId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("MS_ItemAlternatives", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemCard", b =>
                {
                    b.Property<int>("ItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemCardId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("AllPatchesSamePrice")
                        .HasColumnType("bit");

                    b.Property<int?>("AnTypeId")
                        .HasColumnType("int");

                    b.Property<byte?>("AnimalClass")
                        .HasColumnType("tinyint")
                        .HasComment("1 animal, 2 food, 3 medicin");

                    b.Property<bool?>("AutoSuggestBatches")
                        .HasColumnType("bit");

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BeforLastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BoxTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("BreakTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ClosingId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CodingStoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CommisionEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("CostWithDimension")
                        .HasColumnType("bit");

                    b.Property<int?>("CoverTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CutterTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte?>("DimensionSalesPrice")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DistributId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpirPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("FaceTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FirstPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("FirstQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("GofferId")
                        .HasColumnType("int");

                    b.Property<int?>("GradId")
                        .HasColumnType("int");

                    b.Property<int?>("GramTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Height")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("InOffer")
                        .HasColumnType("bit");

                    b.Property<int?>("IndistryId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAttributeItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCommisionPercent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDimension")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscountPercent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExpir")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOfferDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOuterItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSalesStopped")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSerialItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsServerEntity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTempItem")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("ItemLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ItemMax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ItemSize")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint")
                        .HasComment("1  Finished product,2 Material,3 non stock Item,4 Manufactured,5 vehicle");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LargePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LargeQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostManual")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("LastPurchDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("LastSalePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("LeastProfitMargin")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LeastSalesPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Length")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ManualPurchasePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("OfferDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<DateTime?>("OfferFromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("OfferToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PadingTypeId")
                        .HasColumnType("int");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<decimal?>("Price10")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price7")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price8")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price9")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductionItemUnit")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurchaseNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("QtyInBox")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInNotebook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyPartiation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Quantity5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("SecandPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SecandQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Separator")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<string>("SerialNoPrefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("SizeTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("SpecialItemExeclud")
                        .HasColumnType("bit");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("strCustm5")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("Tax1ForPurch")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax1ForSale")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint")
                        .HasComment("0 Percent , 1 value , 2 Without");

                    b.Property<bool?>("Tax2ForPurch")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax2ForSale")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint")
                        .HasComment("0 Percent , 1 value , 2 Without");

                    b.Property<bool?>("Tax3ForPurch")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax3ForSale")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint")
                        .HasComment("0 Percent , 1 value , 2 Without");

                    b.Property<string>("TaxItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<decimal?>("ThirdPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ThridQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Unit2IsMandatory")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("UsePurchDisc")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSameItemAsMaterial")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSomeSubItems")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseUnit2")
                        .HasColumnType("bit");

                    b.Property<int?>("WarantyPeriod")
                        .HasColumnType("int");

                    b.Property<byte?>("WarantyPeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day,2 week, 3 month, 4 year");

                    b.Property<decimal?>("Wheight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Width")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ItemCardId");

                    b.HasIndex("ItemCategoryId");

                    b.ToTable("MS_ItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemCardDefaulPartition", b =>
                {
                    b.Property<int>("ItemStorePrtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemStorePrtId"), 1L, 1);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.HasKey("ItemStorePrtId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Ms_ItemCardDefaulPartitions", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemCardOffer", b =>
                {
                    b.Property<int>("OfferItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferItemId"), 1L, 1);

                    b.Property<decimal?>("BasicQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("GiftDiscount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("GiftItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("GiftQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("GiftUnitId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDiscountPercent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGiftDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReplace")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PriceAfterDisc")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("OfferItemId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Ms_ItemCardOffers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemCardVendor", b =>
                {
                    b.Property<int>("ItemVendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemVendorId"), 1L, 1);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ItemVendorId");

                    b.ToTable("Ms_ItemCardVendors", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemCategory", b =>
                {
                    b.Property<int>("ItemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemCategoryId"), 1L, 1);

                    b.Property<byte[]>("CategoryImage")
                        .HasColumnType("image");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrentTrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ItemCatCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ItemCatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ItemCatDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ItemCategoryCatLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemCategoryType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ParentItemCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.HasKey("ItemCategoryId");

                    b.ToTable("MS_ItemCategory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemCollection", b =>
                {
                    b.Property<int>("ItemCollectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemCollectId"), 1L, 1);

                    b.Property<bool?>("IsNotBasic")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SubItemId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ItemCollectId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Ms_ItemCollection", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemCostHistory", b =>
                {
                    b.Property<int>("ItemCostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemCostId"), 1L, 1);

                    b.Property<int?>("AffectByTableId")
                        .HasColumnType("int");

                    b.Property<string>("AffectByTableName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DocCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DocQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ItemMax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("LogType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurNotReceived")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PurchaseOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInNotebook")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInWithoutCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutWithoutBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyPartiation")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RequestedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReservedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SaleNotDelivered")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SalesOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WithoutCost")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ItemCostId")
                        .HasName("PK_MS_ItemCostLog");

                    b.ToTable("MS_ItemCostHistory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemImage", b =>
                {
                    b.Property<int>("ImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImgId"), 1L, 1);

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("ImgDesc1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImgDesc2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImgPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.HasKey("ImgId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("MS_ItemImages", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemPartition", b =>
                {
                    b.Property<int>("ItemPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemPartId"), 1L, 1);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ItemMax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurNotReceived")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurchaseNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchaseOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInNotebook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyInWithoutCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2Notebook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2Notebook")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyIunit2Partiation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2Partiation")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyOutWithoutBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyPartiation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RequestedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReservedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SaleNotDelivered")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SalesOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Ttype")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("TType")
                        .IsFixedLength()
                        .HasComment("i for inserted, u for updated")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("Tversion")
                        .HasColumnType("bigint")
                        .HasColumnName("TVersion")
                        .HasComment("number of updates on the table");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("VarianceQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WithoutCost")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ItemPartId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("StorePartId");

                    b.ToTable("Ms_ItemPartition", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemPricing", b =>
                {
                    b.Property<int>("ItemPricintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemPricintId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AnTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("BreakTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ClosingId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int?>("CodingStoreId")
                        .HasColumnType("int");

                    b.Property<int?>("CoverTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CutterTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DistributId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FaceTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("GofferId")
                        .HasColumnType("int");

                    b.Property<int?>("GradId")
                        .HasColumnType("int");

                    b.Property<int?>("GramTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("IndistryId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("PadingTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SizeTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ItemPricintId");

                    b.ToTable("Ms_ItemPricing", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemPricintDetail", b =>
                {
                    b.Property<int>("ItemPricintDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemPricintDetailId"), 1L, 1);

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("FirstPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int>("ItemPricintId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LargePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NewPrice1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NewPrice10")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NewPrice2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NewPrice3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NewPrice4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NewPrice5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NewPrice6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NewPrice7")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NewPrice8")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NewPrice9")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price10")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price7")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price8")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price9")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PurchDisc")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SecandPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ThirdPrice")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ItemPricintDetailId");

                    b.HasIndex("ItemPricintId");

                    b.ToTable("Ms_ItemPricintDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemSerial", b =>
                {
                    b.Property<int>("ItemSerialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemSerialId"), 1L, 1);

                    b.Property<string>("Color")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DelivItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Height")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInOrOut")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Length")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderDetailItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<int?>("PurInvItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("RetItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("RetPurchItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Srno1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SRNo1");

                    b.Property<string>("Srno2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SRNo2");

                    b.Property<string>("Srno3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SRNo3");

                    b.Property<string>("Srno4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SRNo4");

                    b.Property<string>("Srno5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SRNo5");

                    b.Property<int?>("StockAdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("StockAdjustItemId")
                        .HasColumnType("int");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StockRecItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("TrItenCardId")
                        .HasColumnType("int");

                    b.Property<int?>("TranId")
                        .HasColumnType("int");

                    b.Property<int?>("TranReqId")
                        .HasColumnType("int");

                    b.Property<int?>("TranReqItemCardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("WarrantyEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("WarrantyStrtDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ItemSerialId")
                        .HasName("PK_MS_ItemSerials_1");

                    b.HasIndex("DelivItemCardId");

                    b.HasIndex("InvItemCardId");

                    b.HasIndex("OrderDetailItemCardId");

                    b.HasIndex("PurInvItemCardId");

                    b.HasIndex("RetItemCardId");

                    b.HasIndex("RetPurchItemCardId");

                    b.HasIndex("StockAdjustItemId");

                    b.HasIndex("StockRecItemCardId");

                    b.HasIndex("TrItenCardId");

                    b.HasIndex("TranReqItemCardId");

                    b.ToTable("MS_ItemSerials", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemSerialsTransaction", b =>
                {
                    b.Property<int>("ItemSerialTranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemSerialTranId"), 1L, 1);

                    b.Property<bool?>("IsInOrOut")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemSerialId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.HasKey("ItemSerialTranId");

                    b.ToTable("MS_ItemSerialsTransactions", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemShortage", b =>
                {
                    b.Property<int>("ItemShortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemShortId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RequestedQtyBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RequestedQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ItemShortId");

                    b.ToTable("Ms_ItemShortage", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemStartQty", b =>
                {
                    b.Property<int>("StartQtyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StartQtyId"), 1L, 1);

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyInNotebook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyPartiation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.HasKey("StartQtyId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Ms_ItemStartQty", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemStockAdjustment", b =>
                {
                    b.Property<int>("StockAdjustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockAdjustId"), 1L, 1);

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsReevaluation")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStockOpenning")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<decimal?>("StockTotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockAdjustId");

                    b.ToTable("Ms_ItemStockAdjustment", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemStockAdjustmentDetail", b =>
                {
                    b.Property<int>("StockAdjustItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockAdjustItemId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageOld")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageOldUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiffQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiffQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostOld")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostOld");

                    b.Property<decimal?>("FifocostOldUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostOldUnit");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostOld")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostOld");

                    b.Property<decimal?>("LifocostOldUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostOldUnit");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NewQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OldQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRateNew")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRateOld")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StockAdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("StockAdjustItemId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("StockAdjustId");

                    b.ToTable("Ms_ItemStockAdjustmentDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemUnit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitId"), 1L, 1);

                    b.Property<string>("BarCode1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode10")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode11")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode12")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode13")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode14")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode15")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode4")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode5")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode6")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode7")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode8")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode9")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BeforLastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("CannotDevide")
                        .HasColumnType("bit");

                    b.Property<byte?>("DefaultBarCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("EtaxUnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsBasicUnit")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultPurchas")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultSale")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKarat")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotRegular")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostManual")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastSalePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LeastProfitMargin")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LeastSalesPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ManualPurchasePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price10")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price7")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price8")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price9")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PurchDisc")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitNam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("UnittRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Wheight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("X")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Y")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Z")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("UnitId");

                    b.HasIndex("BasUnitId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Ms_ItemUnit", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemUnitPackingJoin", b =>
                {
                    b.Property<int>("ItemPackSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemPackSizeId"), 1L, 1);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MaxWheight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MineQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PackSizeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyInPackage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RecomendedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ItemPackSizeId");

                    b.HasIndex("PackSizeId");

                    b.HasIndex("UnitId");

                    b.ToTable("Ms_ItemUnitPackingJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsItemVendor", b =>
                {
                    b.Property<int>("ItemVendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemVendorId"), 1L, 1);

                    b.Property<bool?>("IsBasicVendor")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("Price1")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Price10")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Price2")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Price3")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Price4")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Price5")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Price6")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Price7")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Price8")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Price9")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Quantity1")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Quantity10")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Quantity2")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Quantity3")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Quantity4")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Quantity5")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Quantity6")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Quantity7")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Quantity8")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Quantity9")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ItemVendorId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("VendorId");

                    b.ToTable("MS_ItemVendors", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsJewelryPricing", b =>
                {
                    b.Property<int>("GoldPricingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoldPricingId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("GlobalGramPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("GlobalKiloPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("GlobalOuncePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)")
                        .HasComment("18,21,24");

                    b.Property<decimal?>("KiratGlobalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("KiratLocalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LocaGramPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LocalKiloPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LocalOuncePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("GoldPricingId");

                    b.ToTable("Ms_JewelryPricing", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsKeeperBank", b =>
                {
                    b.Property<int>("KeeperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeeperId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("KeeperNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCheques")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("KeeperId");

                    b.ToTable("Ms_KeeperBank", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsKeeperBankDetail", b =>
                {
                    b.Property<int>("KeeperDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeeperDetailId"), 1L, 1);

                    b.Property<DateTime?>("CollectDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsCollected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTransferred")
                        .HasColumnType("bit");

                    b.Property<int?>("KeeperId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TransferredAte")
                        .HasColumnType("smalldatetime");

                    b.HasKey("KeeperDetailId");

                    b.HasIndex("KeeperId");

                    b.ToTable("Ms_KeeperBankDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsLetterOfGuarantee", b =>
                {
                    b.Property<int>("LetOfGrnteeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetOfGrnteeId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CashMargin")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Conditions")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoverPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoverValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustodyGuarantee")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Expenses")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsCovered")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LetEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LetOfGrnteeCatId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LimitGuarantee")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("PaperDirection")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ReceiverName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("LetOfGrnteeId");

                    b.ToTable("Ms_LetterOfGuarantee", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsLetterOfGuaranteeCategory", b =>
                {
                    b.Property<int>("LetOfGrnteeCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetOfGrnteeCatId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LetOfGrnteeCatId");

                    b.ToTable("Ms_LetterOfGuaranteeCategory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsLetterOfGuaranteeStatus", b =>
                {
                    b.Property<int>("LetOfGrnteeStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetOfGrnteeStatusId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LetOfGrnteeStatusId");

                    b.ToTable("Ms_LetterOfGuaranteeStatus", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsLetterOfGuaranteeTran", b =>
                {
                    b.Property<int>("LetOfGrnteeTranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetOfGrnteeTranId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CashMargin")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Conditions")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoverPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoverValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustodyGuarantee")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Expenses")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCovered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LetEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LetOfGrnteeCatId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeStatusId1")
                        .HasColumnType("int");

                    b.Property<int?>("LetOfGrnteeTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("LetrOfGaccountId")
                        .HasColumnType("int")
                        .HasColumnName("LetrOfGAccountId");

                    b.Property<int?>("LetrOfGcommisionAccountId")
                        .HasColumnType("int")
                        .HasColumnName("LetrOfGCommisionAccountId");

                    b.Property<int?>("LetrOfGexpensAccountId")
                        .HasColumnType("int")
                        .HasColumnName("LetrOfGExpensAccountId");

                    b.Property<decimal?>("LimitGuarantee")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("PaperDirection")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ReceiverName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("ValuEffect")
                        .HasColumnType("tinyint")
                        .HasComment("1 Uprais,2 Decreas, else none");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("LetOfGrnteeTranId");

                    b.HasIndex("LetOfGrnteeId");

                    b.ToTable("Ms_LetterOfGuaranteeTrans", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsLetterOfGuaranteeType", b =>
                {
                    b.Property<int>("LetOfGrnteeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetOfGrnteeTypeId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LetOfGrnteeTypeId");

                    b.ToTable("Ms_LetterOfGuaranteeTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsLotNumberConfiguration", b =>
                {
                    b.Property<int>("LotNumberConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LotNumberConfigId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("LotConfigDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Part1")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Part10")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("Part10DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part10Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Part10type")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Part1DateType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day,2 week,3 month,4 year");

                    b.Property<string>("Part1Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Part1type")
                        .HasColumnType("tinyint")
                        .HasComment("1 fixed,2 manual,3 date");

                    b.Property<string>("Part2")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("Part2DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part2Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Part2type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part3")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("Part3DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part3Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Part3type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part4")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("Part4DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part4Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Part4type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part5")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("Part5DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part5Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Part5type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part6")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("Part6DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part6Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Part6type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part7")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("Part7DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part7Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Part7type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part8")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("Part8DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part8Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Part8type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part9")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("Part9DateType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Part9Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Part9type")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PartsCount")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("LotNumberConfigId");

                    b.ToTable("MS_LotNumberConfiguration", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsLotNumberExpiry", b =>
                {
                    b.Property<int>("LotNumberExpiryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LotNumberExpiryId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Day")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("Disabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FixedPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LotNumberConfigId")
                        .HasColumnType("int");

                    b.Property<string>("LotNumberExpiry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ManualPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ManualPart2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ManualPart3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ManualPart4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ManualPart5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ManualPart6")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Month")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("Period")
                        .HasColumnType("int");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint")
                        .HasComment("1 day, 2 month, 3 year");

                    b.Property<DateTime?>("ProdDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Week")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Year")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("LotNumberExpiryId");

                    b.ToTable("MS_LotNumberExpiry", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsMobSetting", b =>
                {
                    b.Property<int>("MobSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MobSetId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("NotiFyUserId1")
                        .HasColumnType("int");

                    b.Property<int?>("NotiFyUserId2")
                        .HasColumnType("int");

                    b.Property<int?>("NotiFyUserId3")
                        .HasColumnType("int");

                    b.Property<int?>("NotiFyUserId4")
                        .HasColumnType("int");

                    b.Property<int?>("NotiFyUserId5")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MobSetId");

                    b.ToTable("Ms_MobSettings", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPartition", b =>
                {
                    b.Property<int>("StorePartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StorePartId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("AnimalCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("InBookId")
                        .HasColumnType("int");

                    b.Property<int?>("InTermId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAnimalStore")
                        .HasColumnType("bit");

                    b.Property<int?>("OutBookId")
                        .HasColumnType("int");

                    b.Property<int?>("OutTermId")
                        .HasColumnType("int");

                    b.Property<int?>("PartAccountId")
                        .HasColumnType("int");

                    b.Property<string>("PartCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartDescE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("SharedPartition")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Size")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Space")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StoreKeeper")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("StrCustm2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("strCustm2")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StrCustm3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("strCustm3")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StrCustm4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("strCustm4")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StrCustm5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("strCustm5")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StrCustm6")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("strCustm6")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("X")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Y")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Z")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("StorePartId");

                    b.HasIndex("StoreId");

                    b.ToTable("MS_Partition", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPaymentNote", b =>
                {
                    b.Property<int>("PayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<string>("BankAccNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("BankNoticId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("CheckType")
                        .HasColumnType("tinyint")
                        .HasComment("0 Paid ; 1 Back ; 2  Transfer;");

                    b.Property<int?>("CheqBookId")
                        .HasColumnType("int");

                    b.Property<int?>("ChequeOpenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustodyEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DifferenceInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Equation")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    SqlServerPropertyBuilderExtensions.IsSparse(b.Property<string>("Equation"));

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsKembiala")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPettyCash")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsRemoteEntity")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainVendServerId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaidInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("NoteNum")
                        .HasColumnType("int");

                    b.Property<string>("OtherSource")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PayMethodDatafield")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield3")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId2")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId3")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayMethodPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint")
                        .HasComment(" 1  Customer ; 2 vendor ; 3  Other");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RemotId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ResourceBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm1");

                    b.Property<string>("StrCustm2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm2");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItems")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<byte?>("TranType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Check");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Value1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value10")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value10BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value1BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value2BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value3BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value4BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value5BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value6BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value7")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value7BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value8")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value8BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value9")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value9BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("PayId");

                    b.HasIndex("BoxId");

                    b.HasIndex("PurInvId");

                    b.HasIndex("RetSaleId");

                    b.HasIndex(new[] { "TrNo", "BookId" }, "StopDoubleTrNoPayment")
                        .IsUnique()
                        .HasFilter("[BookId] IS NOT NULL");

                    b.ToTable("MS_PaymentNote", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPaymentNoteCurrency", b =>
                {
                    b.Property<int>("PayCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayCurId"), 1L, 1);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("PayCurId");

                    b.HasIndex("PayId");

                    b.ToTable("Ms_PaymentNoteCurrencies", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPaymentNoteItem", b =>
                {
                    b.Property<int>("PayItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayItemsId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("ShipExecuted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("PayItemsId");

                    b.HasIndex("PayId");

                    b.ToTable("Ms_PaymentNoteItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPettycash", b =>
                {
                    b.Property<int>("PettycashId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PettycashId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint")
                        .HasComment(" 1  Customer ; 2 vendor ; 3  Other");

                    b.Property<byte?>("RectSourceType1")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalFilteredPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VjorderId")
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    b.HasKey("PettycashId");

                    b.ToTable("MS_Pettycash", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPettyCashDetail", b =>
                {
                    b.Property<int>("PettycashDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PettycashDetailId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPurchase")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturnSales")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStockRelated")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PettycashId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remark1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remark2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remark3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("PettycashDetailId");

                    b.HasIndex("PettycashId");

                    b.ToTable("MS_PettyCashDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPettyPaymentJoin", b =>
                {
                    b.Property<int>("PetyPayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetyPayId"), 1L, 1);

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("PettycashId")
                        .HasColumnType("int");

                    b.HasKey("PetyPayId");

                    b.HasIndex("PayId");

                    b.HasIndex("PettycashId");

                    b.ToTable("Ms_PettyPaymentJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPosItemCategory", b =>
                {
                    b.Property<int>("PosItemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosItemCategoryId"), 1L, 1);

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("UseItemBarcode")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseItemCode")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseItemImg")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseItemName")
                        .HasColumnType("bit");

                    b.HasKey("PosItemCategoryId");

                    b.ToTable("Ms_PosItemCategory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPosPaymentMethod", b =>
                {
                    b.Property<int>("PayMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayMethodId"), 1L, 1);

                    b.Property<int?>("AccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId10")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId3")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId4")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId5")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId6")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId7")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId8")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId9")
                        .HasColumnType("int");

                    b.Property<decimal?>("AddPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Desc1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Desc2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("MandatoryFieldData")
                        .HasColumnType("bit");

                    b.Property<byte[]>("MethodImage")
                        .HasColumnType("image");

                    b.Property<string>("UserQuestion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("PayMethodId");

                    b.ToTable("Ms_PosPaymentMethods", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPossetting", b =>
                {
                    b.Property<int>("PosSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosSetId"), 1L, 1);

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BtnItemCatHeight")
                        .HasColumnType("int");

                    b.Property<int?>("BtnItemCatWidth")
                        .HasColumnType("int");

                    b.Property<int?>("BtnItemHeight")
                        .HasColumnType("int");

                    b.Property<int?>("BtnItemWidth")
                        .HasColumnType("int");

                    b.Property<int?>("BtnPayMethodHeight")
                        .HasColumnType("int");

                    b.Property<int?>("BtnPayMethodWidth")
                        .HasColumnType("int");

                    b.Property<int?>("CashTermId")
                        .HasColumnType("int");

                    b.Property<string>("CmdCredit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdCredit");

                    b.Property<string>("CmdCredit2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdCredit2");

                    b.Property<string>("CmdDelete")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdDelete");

                    b.Property<string>("CmdDelete2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdDelete2");

                    b.Property<string>("CmdDeleteItem")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdDeleteItem");

                    b.Property<string>("CmdDeleteItem2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdDeleteItem2");

                    b.Property<string>("CmdDiscount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdDiscount");

                    b.Property<string>("CmdDiscount2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdDiscount2");

                    b.Property<string>("CmdDocSearch")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdDocSearch");

                    b.Property<string>("CmdDocSearch2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdDocSearch2");

                    b.Property<string>("CmdEdit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdEdit");

                    b.Property<string>("CmdEdit2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdEdit2");

                    b.Property<string>("CmdFirst")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdFirst");

                    b.Property<string>("CmdFirst2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdFirst2");

                    b.Property<string>("CmdHold")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdHold");

                    b.Property<string>("CmdHold2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdHold2");

                    b.Property<string>("CmdItemEdit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdItemEdit");

                    b.Property<string>("CmdItemEdit2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdItemEdit2");

                    b.Property<string>("CmdItemSearch1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdItemSearch1");

                    b.Property<string>("CmdItemSearch2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdItemSearch2");

                    b.Property<string>("CmdLast")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdLast");

                    b.Property<string>("CmdLast2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdLast2");

                    b.Property<string>("CmdNew")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdNew");

                    b.Property<string>("CmdNew2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdNew2");

                    b.Property<string>("CmdNext")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdNext");

                    b.Property<string>("CmdNext2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdNext2");

                    b.Property<string>("CmdOffer1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdOffer1");

                    b.Property<string>("CmdOffer2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdOffer2");

                    b.Property<string>("CmdPay")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdPay");

                    b.Property<string>("CmdPay2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdPay2");

                    b.Property<string>("CmdPreview")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdPreview");

                    b.Property<string>("CmdPreview2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdPreview2");

                    b.Property<string>("CmdPrevious")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdPrevious");

                    b.Property<string>("CmdPrevious2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdPrevious2");

                    b.Property<string>("CmdPrint")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdPrint");

                    b.Property<string>("CmdPrint2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdPrint2");

                    b.Property<string>("CmdRetWithInv")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdRetWithInv");

                    b.Property<string>("CmdRetWithInv2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdRetWithInv2");

                    b.Property<string>("CmdRetWithoutInv")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdRetWithoutInv");

                    b.Property<string>("CmdRetWithoutInv2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdRetWithoutInv2");

                    b.Property<string>("CmdSave")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdSave");

                    b.Property<string>("CmdSave2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdSave2");

                    b.Property<string>("CmdShortage")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdShortage");

                    b.Property<string>("CmdShortage2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdShortage2");

                    b.Property<string>("CmdUndo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdUndo");

                    b.Property<string>("CmdUndo2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("cmdUndo2");

                    b.Property<int?>("CreditTermId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DefCustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DefEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpAccountId")
                        .HasColumnType("int");

                    b.Property<bool?>("MinusNoteQty")
                        .HasColumnType("bit");

                    b.Property<int?>("PayMethodTermId")
                        .HasColumnType("int");

                    b.Property<int?>("RetBookId")
                        .HasColumnType("int");

                    b.Property<int?>("ReturnCashTermId")
                        .HasColumnType("int");

                    b.Property<int?>("ReturnCreditTermId")
                        .HasColumnType("int");

                    b.Property<int?>("ReturnPayMethodTermId")
                        .HasColumnType("int");

                    b.Property<bool?>("UseItemDefStorIfNoQty")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseOffers")
                        .HasColumnType("bit");

                    b.Property<int?>("VendorAccountId")
                        .HasColumnType("int");

                    b.HasKey("PosSetId");

                    b.ToTable("Ms_POSSettings", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPosShift", b =>
                {
                    b.Property<int>("PosShiftLogId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("ShiftEnd")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShiftStart")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Trdate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PosShiftLogId");

                    b.ToTable("Ms_PosShifts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPosSpecialItem", b =>
                {
                    b.Property<int>("SpecialItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialItemCardId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("SpecialItemCardId");

                    b.ToTable("Ms_PosSpecialItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPurchaseInvoiceCostReceived", b =>
                {
                    b.Property<int>("PurNoCostStockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurNoCostStockId"), 1L, 1);

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.HasKey("PurNoCostStockId");

                    b.HasIndex("PurInvId");

                    b.ToTable("Ms_PurchaseInvoiceCostReceived", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPurchaseInvoiceExpense", b =>
                {
                    b.Property<int>("PurExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurExpenseId"), 1L, 1);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdvancedPay")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRefundableTax1")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRefundableTax2")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRefundableTax3")
                        .HasColumnType("bit");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("TaxAfterRate1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxAfterRate2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxAfterRate3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxCurrency1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxCurrency2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxCurrency3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("PurExpenseId");

                    b.HasIndex("PurInvId");

                    b.ToTable("MS_PurchaseInvoiceExpenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPurchaseInvoiceItemCard", b =>
                {
                    b.Property<int>("InvItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvItemCardId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AnimalAge")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CityIdfrom")
                        .HasColumnType("int")
                        .HasColumnName("CityIDFrom");

                    b.Property<int?>("CityIdto")
                        .HasColumnType("int")
                        .HasColumnName("CityIDTo");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<bool?>("DeliverNoCostExecut")
                        .HasColumnType("bit");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("IsNoCostDeliver")
                        .HasColumnType("int");

                    b.Property<bool?>("IsmedicinNotify")
                        .HasColumnType("bit")
                        .HasColumnName("ISMedicinNotify");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforDiscount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyDiscount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyRecievedBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyScalDiffrence")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyScalDiffrenceValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QualityDiscount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QualityValueDisc")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityRecieved")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StockRecItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int?>("VjorderId")
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    b.HasKey("InvItemCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("PurInvId");

                    b.HasIndex("UnitId");

                    b.ToTable("MS_PurchaseInvoiceItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPurchasInvoice", b =>
                {
                    b.Property<int>("PurInvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurInvId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("AdvancExpenseBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AdvancExpenseWithCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BankTranPayMethodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BankTransfer")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DeliverNoCostExecut")
                        .HasColumnType("bit");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("EtaxReference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EtaxRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("EtaxSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EtaxSentTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("IsNoCostDeliver")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsRemoteEntity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainVendServerId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool?>("MultiResourceDeliver")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("OtherPayMethodId2")
                        .HasColumnType("int");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PayMethodDatafield")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield3")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId2")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId3")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayMethodPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PurOrderReqId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RemotId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalExpensesTaxes1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensesTaxes2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensesTaxes3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.Property<int?>("VisaPayMethodId")
                        .HasColumnType("int");

                    b.HasKey("PurInvId");

                    b.HasIndex("PurOrderId");

                    b.HasIndex("TaxesId1");

                    b.ToTable("MS_PurchasInvoice", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPurchasInvoiceCurrency", b =>
                {
                    b.Property<int>("PurInvCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurInvCurId"), 1L, 1);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("PurInvCurId");

                    b.HasIndex("PurInvId");

                    b.ToTable("MS_PurchasInvoiceCurrencies", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPurchasInvoiceMultiAccount", b =>
                {
                    b.Property<int>("PurMultiAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurMultiAccountId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId4")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RectSourceBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PurMultiAccountId");

                    b.HasIndex("PurInvId");

                    b.ToTable("MS_PurchasInvoiceMultiAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPurchasOrder", b =>
                {
                    b.Property<int>("PurOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurOrderId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DeliveryPeriodDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpiryPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurOrderReqId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VendBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("PurOrderId");

                    b.ToTable("Ms_PurchasOrder", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPurchasOrderRequest", b =>
                {
                    b.Property<int>("PurOrderReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurOrderReqId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DeliveryPeriodDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpiryPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VendBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("PurOrderReqId");

                    b.ToTable("Ms_PurchasOrderRequest", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPurchInvVehicleJobOrderJoin", b =>
                {
                    b.Property<int>("PurchVehiclJobOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchVehiclJobOrderId"), 1L, 1);

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("VjorderId")
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    b.HasKey("PurchVehiclJobOrderId");

                    b.HasIndex("PurInvId");

                    b.HasIndex("VjorderId");

                    b.ToTable("Ms_PurchInvVehicleJobOrderJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPurchOrderDetail", b =>
                {
                    b.Property<int>("OrderDetailItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailItemCardId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyExecuted")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyExecutedBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("OrderDetailItemCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("PurOrderId");

                    b.ToTable("MS_PurchOrderDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsPurchOrderReqDetail", b =>
                {
                    b.Property<int>("OrderDetailItemReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailItemReqId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurOrderReqId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyExecuted")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyExecutedBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("OrderDetailItemReqId");

                    b.HasIndex("PurOrderReqId");

                    b.ToTable("MS_PurchOrderReqDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReceiptNote", b =>
                {
                    b.Property<int>("RectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RectId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<string>("BankAccNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("BankNoticId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("CheckType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CheqBookId")
                        .HasColumnType("int");

                    b.Property<bool?>("ChequOwnerId")
                        .HasColumnType("bit");

                    b.Property<int?>("ChequeOpenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChequeTran")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ClientAccNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ClientBankId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CollectorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DifferenceInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Equation")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    SqlServerPropertyBuilderExtensions.IsSparse(b.Property<string>("Equation"));

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InstallDates")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsKembiala")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsRemoteEntity")
                        .HasColumnType("bit");

                    b.Property<int?>("KeeperId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainCustServerId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaidInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("NoteNum")
                        .HasColumnType("int");

                    b.Property<string>("OtherSource")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("OwnerTranId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<string>("PayMethodDatafield")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield3")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId2")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId3")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayMethodPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RemotId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ResourceBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RetPurId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm1")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StrCustm2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm2")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalInvoices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<byte?>("TranType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Value1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value10")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value10BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value1BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value2BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value3BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value4BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value5BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value6BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value7")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value7BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value8")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value8BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value9")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value9BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("RectId");

                    b.HasIndex("BoxId");

                    b.HasIndex("InvId");

                    b.HasIndex("RetPurId");

                    b.HasIndex(new[] { "TrNo", "BookId" }, "StopDoubleTrNo")
                        .IsUnique()
                        .HasFilter("[BookId] IS NOT NULL");

                    b.ToTable("Ms_ReceiptNote", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReceiptNoteCurrency", b =>
                {
                    b.Property<int>("RecCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecCurId"), 1L, 1);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("RecCurId");

                    b.HasIndex("RectId");

                    b.ToTable("Ms_ReceiptNoteCurrencies", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsRecPayDocJoin", b =>
                {
                    b.Property<int>("InvRecPayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvRecPayId"), 1L, 1);

                    b.Property<int?>("DocId")
                        .HasColumnType("int");

                    b.Property<byte?>("DocType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Paid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.HasKey("InvRecPayId");

                    b.ToTable("Ms_RecPayDocJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnPurchase", b =>
                {
                    b.Property<int>("RetPurchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetPurchId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BankTranPayMethodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BankTransfer")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("EtaxReference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EtaxRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("EtaxSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EtaxSentTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0 Cash ; 1 Due ;");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsRemoteEntity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainVendServerId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("OtherPayMethodId2")
                        .HasColumnType("int");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PayMethodDatafield")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield3")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId2")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId3")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayMethodPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RemotId")
                        .HasColumnType("int");

                    b.Property<string>("RetDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RetDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("RetTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("ReturnType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((0))")
                        .HasComment("0  Invoice ; 1 customer");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.Property<int?>("VisaPayMethodId")
                        .HasColumnType("int");

                    b.HasKey("RetPurchId");

                    b.ToTable("MS_ReturnPurchase", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnPurchaseCurrency", b =>
                {
                    b.Property<int>("RetPurchCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetPurchCurId"), 1L, 1);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("RetPurchCurId");

                    b.HasIndex("RetPurchId");

                    b.ToTable("MS_ReturnPurchaseCurrencies", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnPurchaseExpense", b =>
                {
                    b.Property<int>("RetPurchExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetPurchExpenseId"), 1L, 1);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("RetPurchExpenseId");

                    b.HasIndex("RetPurchId");

                    b.ToTable("Ms_ReturnPurchaseExpenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnPurchaseItem", b =>
                {
                    b.Property<int>("RetPurchItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetPurchItemCardId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<int?>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyRecievedBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityIn")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityReceived")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("RetPurchItemCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("RetPurchId");

                    b.HasIndex("UnitId");

                    b.ToTable("MS_ReturnPurchaseItem", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnPurchaseMultiAccount", b =>
                {
                    b.Property<int>("RetPurMultiAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetPurMultiAccountId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId4")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RectSourceBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.HasKey("RetPurMultiAccountId");

                    b.HasIndex("RetPurchId");

                    b.ToTable("MS_ReturnPurchaseMultiAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnSale", b =>
                {
                    b.Property<int>("RetSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetSaleId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BankTranPayMethodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BankTransfer")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EtaxReference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EtaxRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("EtaxSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EtaxSentTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0 Cash ; 1 Due ; Customer Account");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsRemoteEntity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainCustServerId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("OtherPayMethodId2")
                        .HasColumnType("int");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PayMethodDatafield")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield3")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId2")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId3")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayMethodPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RemotId")
                        .HasColumnType("int");

                    b.Property<string>("RetDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RetDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("RetTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("ReturnType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Invoice ; 1  Customer");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemsCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemsProfit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("VisaPayMethodId")
                        .HasColumnType("int");

                    b.HasKey("RetSaleId");

                    b.ToTable("MS_ReturnSales", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnSalesCurrency", b =>
                {
                    b.Property<int>("RetSaleCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetSaleCurId"), 1L, 1);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("RetSaleCurId");

                    b.HasIndex("RetSaleId");

                    b.ToTable("MS_ReturnSalesCurrencies", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnSalesExpense", b =>
                {
                    b.Property<int>("RetSaleExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetSaleExpenseId"), 1L, 1);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("RetSaleExpenseId");

                    b.HasIndex("RetSaleId");

                    b.ToTable("Ms_ReturnSalesExpenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnSalesItemCard", b =>
                {
                    b.Property<int>("RetItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetItemCardId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CommisionPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CommisionValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("InOffer")
                        .HasColumnType("bit");

                    b.Property<int?>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<int?>("ItemOfferId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JobProductId")
                        .HasColumnType("int")
                        .HasColumnName("jobProductId");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OfferPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityIn")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("SalesDepId")
                        .HasColumnType("int");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RetItemCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("RetSaleId");

                    b.HasIndex("UnitId");

                    b.ToTable("MS_ReturnSalesItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnSalesMultiAccount", b =>
                {
                    b.Property<int>("RetSaleMultiAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetSaleMultiAccountId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId4")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RectSourceBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.HasKey("RetSaleMultiAccountId");

                    b.HasIndex("RetSaleId");

                    b.ToTable("MS_ReturnSalesMultiAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnSalesReq", b =>
                {
                    b.Property<int>("ReqsalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReqsalesId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<decimal?>("BankTransfer")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EtaxReference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EtaxRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("EtaxSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EtaxSentTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InvQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHold")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMobile")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsRemoteEntity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ItemCommision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainCustServerId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool?>("MultiResourceDeliver")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PayMethodDatafield")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield3")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId2")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId3")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayMethodPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("RemotId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemsCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemsProfit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJobOrders")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyCar")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyNoVehicl")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyPump")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ReqsalesId");

                    b.ToTable("Ms_ReturnSalesReq", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsReturnSalesReqItemCard", b =>
                {
                    b.Property<int>("SalesReqItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesReqItemCardId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CityIdfrom")
                        .HasColumnType("int")
                        .HasColumnName("CityIDFrom");

                    b.Property<int?>("CityIdto")
                        .HasColumnType("int")
                        .HasColumnName("CityIDTo");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CommisionPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CommisionValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("DelivItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("InOffer")
                        .HasColumnType("bit");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCommisionPercent")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<int?>("ItemOfferId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JobProductId")
                        .HasColumnType("int")
                        .HasColumnName("jobProductId");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OfferPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("PettycashId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<byte?>("PriceList")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ReqsalesId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnedQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VehicleId1")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId2")
                        .HasColumnType("int");

                    b.Property<int?>("VjorderId")
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    b.HasKey("SalesReqItemCardId");

                    b.ToTable("Ms_ReturnSalesReqItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesDepartment", b =>
                {
                    b.Property<int>("SalesDepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesDepId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SalesDepCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SalesDepDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SalesDepDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SalesDepLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("SalesDepLevelType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("SalesDepParent")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("SalesDepId");

                    b.ToTable("Ms_SalesDepartments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvJobOrderJoin", b =>
                {
                    b.Property<int>("SalesInvJobOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesInvJobOrderId"), 1L, 1);

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SalesInvJobOrderId");

                    b.HasIndex("InvId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Ms_SalesInvJobOrderJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoice", b =>
                {
                    b.Property<int>("InvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BankTranPayMethodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BankTransfer")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EtaxReference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EtaxRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("EtaxSent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EtaxSentTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHold")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMobile")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsRemoteEntity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ItemCommision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainCustServerId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool?>("MultiResourceDeliver")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("OtherPayMethodId2")
                        .HasColumnType("int");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PayMethodDatafield")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayMethodDatafield3")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId2")
                        .HasColumnType("int");

                    b.Property<int?>("PayMethodId3")
                        .HasColumnType("int");

                    b.Property<decimal?>("PayMethodPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RemotId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemsCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemsProfit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJobOrders")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyCar")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyNoVehicl")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyPump")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VisaPayMethodId")
                        .HasColumnType("int");

                    b.HasKey("InvId");

                    b.HasIndex("SalesOfferId");

                    b.HasIndex(new[] { "StoreId" }, "StoreIdIndex");

                    b.ToTable("Ms_SalesInvoice", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceCostDeliver", b =>
                {
                    b.Property<int>("SaleNoCostDelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleNoCostDelId"), 1L, 1);

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SaleNoCostDelId");

                    b.HasIndex("InvId");

                    b.ToTable("Ms_SalesInvoiceCostDeliver", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceCurrency", b =>
                {
                    b.Property<int>("InvCurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvCurId"), 1L, 1);

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("InvCurId");

                    b.HasIndex("InvId");

                    b.ToTable("Ms_SalesInvoiceCurrencies", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceExpense", b =>
                {
                    b.Property<int>("SalesInvExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesInvExpenseId"), 1L, 1);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("SalesInvExpenseId");

                    b.HasIndex("InvId");

                    b.ToTable("Ms_SalesInvoiceExpenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceItemCard", b =>
                {
                    b.Property<int>("InvItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvItemCardId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CityIdfrom")
                        .HasColumnType("int")
                        .HasColumnName("CityIDFrom");

                    b.Property<int?>("CityIdto")
                        .HasColumnType("int")
                        .HasColumnName("CityIDTo");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CommisionPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CommisionValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("DelivItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliverId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("InOffer")
                        .HasColumnType("bit");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCommisionPercent")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<int?>("ItemOfferId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JobProductId")
                        .HasColumnType("int")
                        .HasColumnName("jobProductId");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OfferPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<int?>("PettycashId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<byte?>("PriceList")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("SalesDepId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOffertemCardId")
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.IsSparse(b.Property<int?>("SalesOffertemCardId"));

                    b.Property<int?>("SalesOrdertemCardId")
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.IsSparse(b.Property<int?>("SalesOrdertemCardId"));

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId1")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId2")
                        .HasColumnType("int");

                    b.Property<int?>("VjorderId")
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    b.HasKey("InvItemCardId")
                        .HasName("PK_InvoiceItemCard");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("UnitId");

                    b.HasIndex(new[] { "InvId" }, "Inv");

                    b.ToTable("Ms_SalesInvoiceItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceItemCardDeleted", b =>
                {
                    b.Property<int>("DelInvItemcardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DelInvItemcardId"), 1L, 1);

                    b.Property<bool?>("AddOrEditMode")
                        .HasColumnType("bit")
                        .HasComment("1 Add, 0 Edit");

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("DeletedOrChanged")
                        .HasColumnType("bit")
                        .HasComment("1Deleted,0 changed");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<string>("LotNumberExpiry")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ReturnQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("DelInvItemcardId");

                    b.ToTable("MS_SalesInvoiceItemCard_Deleted", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceMultiAccount", b =>
                {
                    b.Property<int>("SalesMultiAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesMultiAccountId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId4")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RectSourceBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SalesMultiAccountId");

                    b.HasIndex("InvId");

                    b.ToTable("Ms_SalesInvoiceMultiAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceQualityDeliveryDoc", b =>
                {
                    b.Property<int>("QualitySaleDelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QualitySaleDelId"), 1L, 1);

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemDeliverId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("QualitySaleDelId");

                    b.HasIndex("InvId");

                    b.ToTable("Ms_SalesInvoiceQualityDeliveryDocs", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceQualityMissedItem", b =>
                {
                    b.Property<int>("QualitySaleDelMissedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QualitySaleDelMissedId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemDeliverId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("QualitySaleDelMissedId");

                    b.HasIndex("InvId");

                    b.ToTable("Ms_SalesInvoiceQualityMissedItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvVehiclJobOrderJoin", b =>
                {
                    b.Property<int>("SalesVehiclJobOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesVehiclJobOrderId"), 1L, 1);

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("VjorderId")
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    b.HasKey("SalesVehiclJobOrderId");

                    b.HasIndex("InvId");

                    b.HasIndex("VjorderId");

                    b.ToTable("Ms_SalesInvVehiclJobOrderJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesItemsOffer", b =>
                {
                    b.Property<int>("PromoOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromoOfferId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsActiveOffer")
                        .HasColumnType("bit");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PromoOfferId")
                        .HasName("PK_Ms_SalesItemsOffers_1");

                    b.ToTable("Ms_SalesItemsOffers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesItemsOffersDetail", b =>
                {
                    b.Property<int>("ItemOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemOfferId"), 1L, 1);

                    b.Property<decimal?>("BaseDiscount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BaseItemUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BaseItemUnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BaseQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BaseQtyBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscForTotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsSeasonal")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("OfferedItemId")
                        .HasColumnType("int");

                    b.Property<int?>("OfferedItemUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OfferedItemUnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OfferedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OfferedQtyBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<int?>("PromoOfferId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ItemOfferId")
                        .HasName("PK_Ms_SalesItemsOffers");

                    b.HasIndex("PromoOfferId");

                    b.ToTable("Ms_SalesItemsOffersDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesOffer", b =>
                {
                    b.Property<int>("SalesOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesOfferId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DeliveryPeriodDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpiryPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsMobile")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayPeriodDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PrinPriceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("SalesOfferId");

                    b.ToTable("Ms_SalesOffer", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesOfferItemCard", b =>
                {
                    b.Property<int>("SalesOffertemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesOffertemCardId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecuteQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecuteQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SalesDepId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SalesOffertemCardId")
                        .HasName("PK_Table_1");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("SalesOfferId");

                    b.ToTable("Ms_SalesOfferItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesOfferItemRequest", b =>
                {
                    b.Property<int>("SalesOffertemCardReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesOffertemCardReqId"), 1L, 1);

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecuteQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecuteQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SalesOfferReqId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("SalesOffertemCardReqId");

                    b.HasIndex("SalesOfferReqId");

                    b.ToTable("Ms_SalesOfferItemRequest", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesOfferRequest", b =>
                {
                    b.Property<int>("SalesOfferReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesOfferReqId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DeliveryPeriodDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExpiryPeriodDays")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayPeriodDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SalesOfferReqId");

                    b.ToTable("Ms_SalesOfferRequest", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesOrder", b =>
                {
                    b.Property<int>("SalesOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesOrderId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("InvQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("InvoiceType")
                        .HasColumnType("tinyint")
                        .HasComment("0  Cash ; 1  Due ");

                    b.Property<bool?>("IsMobile")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsShippingInv")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SalesOrderId");

                    b.ToTable("Ms_SalesOrder", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSalesOrderItemCard", b =>
                {
                    b.Property<int>("SalesOrdertemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesOrdertemCardId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AlterTo")
                        .HasColumnType("int");

                    b.Property<int?>("AlterToItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CollectToItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("DisAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisAmountAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecuteQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecuteQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MainDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MainDiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SalesDepId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<bool?>("Tax1IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax1Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax1PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax1Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax2IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax2Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax2PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax2Style")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Tax3IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax3Percent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Tax3PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<byte?>("Tax3Style")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxableValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SalesOrdertemCardId");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("Ms_SalesOrderItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsSetting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettingId"), 1L, 1);

                    b.Property<byte?>("AccountsDecimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("ActivateUnit2")
                        .HasColumnType("bit");

                    b.Property<bool?>("AlertCustCredit")
                        .HasColumnType("bit");

                    b.Property<int?>("AlertTimeOut")
                        .HasColumnType("int");

                    b.Property<bool?>("AlertVendCredit")
                        .HasColumnType("bit");

                    b.Property<byte?>("AskForAttachMove")
                        .HasColumnType("tinyint")
                        .HasComment("1 always copy, 2 always move,3 never copy or move,4 ask to move");

                    b.Property<string>("AttachmentPath")
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<bool?>("ChekAlert")
                        .HasColumnType("bit")
                        .HasColumnName("chekAlert");

                    b.Property<byte?>("CostDicimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("CustCodOrNam")
                        .HasColumnType("bit");

                    b.Property<string>("CustSeparator")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<byte?>("DimensionDicimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("DistDiscOnJobOrderItems")
                        .HasColumnType("bit");

                    b.Property<string>("EtaxActivityCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ETaxActivityCode");

                    b.Property<string>("EtaxBranchId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ETaxBranchId");

                    b.Property<string>("EtaxClientId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ETaxClientId");

                    b.Property<string>("EtaxClientSecret")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ETaxClientSecret");

                    b.Property<string>("EtaxCurrency")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ETaxCurrency");

                    b.Property<string>("EtaxDocVersion")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EtaxInvoiceStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ETaxInvoiceStatus");

                    b.Property<string>("EtaxIssuerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ETaxIssuerId");

                    b.Property<string>("EtaxIssuerName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ETaxIssuerName");

                    b.Property<string>("EtaxPortalUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ETaxPortalUrl");

                    b.Property<string>("EtaxPortalUrlLive")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ETaxPortalUrlLive");

                    b.Property<string>("EtaxPortalUrlTest")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ETaxPortalUrlTest");

                    b.Property<string>("EtaxSubmitUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ETaxSubmitUrl");

                    b.Property<string>("EtaxSubmitUrlLive")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ETaxSubmitUrlLive");

                    b.Property<string>("EtaxSubmitUrlTest")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ETaxSubmitUrlTest");

                    b.Property<string>("EtaxTax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EtaxTokenPin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ETaxTokenPin");

                    b.Property<string>("EtaxTokenUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ETaxTokenUrl");

                    b.Property<string>("EtaxTokenUrlLive")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ETaxTokenUrlLive");

                    b.Property<string>("EtaxTokenUrlTest")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ETaxTokenUrlTest");

                    b.Property<int?>("ExpPeriod")
                        .HasColumnType("int");

                    b.Property<bool?>("ExpUseColor")
                        .HasColumnType("bit");

                    b.Property<bool?>("HideCurrency")
                        .HasColumnType("bit");

                    b.Property<bool?>("HideCustBranch")
                        .HasColumnType("bit");

                    b.Property<bool?>("HideDeletedDocs")
                        .HasColumnType("bit");

                    b.Property<bool?>("HideMoneyCollector")
                        .HasColumnType("bit");

                    b.Property<bool?>("HideSalesMan")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCostAffectDoc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ItemDefTax")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemIssueCostMethod")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ItemIssueWhichCost")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("ItemLimitAlert")
                        .HasColumnType("bit");

                    b.Property<bool?>("ItemMaxAlert")
                        .HasColumnType("bit");

                    b.Property<string>("ItemSeparator")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<bool?>("JoinBranches")
                        .HasColumnType("bit");

                    b.Property<byte?>("NoOfItemRemarksFields")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("PartCodOrNam")
                        .HasColumnType("bit");

                    b.Property<byte?>("PercentDicimals")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PriceDicimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("PriceIncludTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<bool?>("PriceIncludTaxInSales")
                        .HasColumnType("bit");

                    b.Property<string>("PurchReturnItemCost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("QuantityDicimals")
                        .HasColumnType("tinyint");

                    b.Property<string>("SalesReturnItemCost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ScaleAppPath")
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<bool?>("ScaleAutoRead")
                        .HasColumnType("bit");

                    b.Property<string>("ScaleDataPath")
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<bool?>("SearchItemWithQtySales")
                        .HasColumnType("bit");

                    b.Property<string>("SysDateFormat")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte?>("TimeDecimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("UseAlterItems")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseAnalyticalCode")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseAttributes")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseBarCodes")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseBasicOrAlterBarcod")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseBrancheCodeColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseBrancheNameColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseCatCodInCust")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseCatCodInItems")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseCatCodInVend")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseComposItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseCurrency")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseExpiryDateColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseExpirySystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseFinancialQtyOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseHightColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseHijiryDate")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseItemTaxInPurch")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseItemTaxInSales")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseLengthColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseLotNumberColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UsePartitionCodeColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UsePartitionNameColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseProducDateColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSalesJobOrders")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSerialNumber")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseShipping")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSimpleExpirySystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseUnitColumn")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseVehicles")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseWeightCardSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseWidthColumn")
                        .HasColumnType("bit");

                    b.Property<byte?>("ValuesDicimals")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("VendCodOrNam")
                        .HasColumnType("bit");

                    b.Property<string>("VendSeparator")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("SettingId");

                    b.ToTable("MS_Settings", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsStockReceiptItemCard", b =>
                {
                    b.Property<int>("StockRecItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockRecItemCardId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AnimalAge")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<bool?>("DeliverNoCostExecut")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool>("FireTriger")
                        .HasColumnType("bit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<int?>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("IsNoCostDeliver")
                        .HasColumnType("int");

                    b.Property<bool?>("IsmedicinNotify")
                        .HasColumnType("bit")
                        .HasColumnName("ISMedicinNotify");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobGoStockId")
                        .HasColumnType("int")
                        .HasColumnName("jobGoStockId");

                    b.Property<int?>("JobProductId")
                        .HasColumnType("int")
                        .HasColumnName("jobProductId");

                    b.Property<int?>("JobScrapId")
                        .HasColumnType("int")
                        .HasColumnName("jobScrapId");

                    b.Property<decimal?>("Kirat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforDiscount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyDiscount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyScalDiffrence")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyScalDiffrenceValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QualityDiscount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QualityValueDisc")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityIn")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RetPurchItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("Satus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("StockRecItemCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("StockRecId");

                    b.HasIndex("UnitId");

                    b.ToTable("MS_StockReceiptItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsStockRecript", b =>
                {
                    b.Property<int>("StockRecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockRecId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<bool?>("CostExecuted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit")
                        .HasComment("True Closed ;  False  Not Closed");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .HasColumnType("bit");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PurOrderReqId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchaseInvQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReceiptrQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((0))")
                        .HasComment("0 Invoice ; 1 Return ; 2  Vendor ");

                    b.Property<string>("StockRecDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StockRecDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm4");

                    b.Property<string>("StrCustm5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm5");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalProfitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServicePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("StockRecId");

                    b.ToTable("MS_StockRecript", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsStockRecriptExpense", b =>
                {
                    b.Property<int>("StockRecExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockRecExpenseId"), 1L, 1);

                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("StockRecExpenseId");

                    b.HasIndex("StockRecId");

                    b.ToTable("MS_StockRecriptExpenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsStockRecriptMultiAccount", b =>
                {
                    b.Property<int>("StockRecMultiAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockRecMultiAccountId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId4")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RectSourceBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RectSourceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StockRecId")
                        .HasColumnType("int");

                    b.HasKey("StockRecMultiAccountId");

                    b.HasIndex("StockRecId");

                    b.ToTable("MS_StockRecriptMultiAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsStockTranItemCard", b =>
                {
                    b.Property<int>("TrItenCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrItenCardId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<int?>("PartFrom")
                        .HasColumnType("int");

                    b.Property<int?>("PartTo")
                        .HasColumnType("int");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ServerUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("TranId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("TrItenCardId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("TranId");

                    b.HasIndex("UnitId");

                    b.ToTable("MS_StockTranItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsStockTranItemCardReq", b =>
                {
                    b.Property<int>("TranReqItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TranReqItemCardId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenseShareUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<int?>("FollowCollectionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemIdToFollow")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("PartFrom")
                        .HasColumnType("int");

                    b.Property<int?>("PartTo")
                        .HasColumnType("int");

                    b.Property<decimal?>("PriceAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpensAfterCurrUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseAfterCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterExpenseUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("TranReqId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("TranReqItemCardId");

                    b.HasIndex("TranReqId");

                    b.ToTable("Ms_StockTranItemCardReq", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsStockTransferNote", b =>
                {
                    b.Property<int>("TranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TranId"), 1L, 1);

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsRemoteEntity")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("RemotId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("StockTranDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StockTranDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<int?>("TranReqId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TranId");

                    b.ToTable("MS_StockTransferNote", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsStockTransferNoteRequest", b =>
                {
                    b.Property<int>("TranReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TranReqId"), 1L, 1);

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StockTranDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StockTranDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TranReqId");

                    b.ToTable("Ms_StockTransferNoteRequest", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsStore", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"), 1L, 1);

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<byte[]>("BranchLogo")
                        .HasColumnType("image");

                    b.Property<int?>("CashOnHandAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<string>("CommercialName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("EtaxCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("OtherAccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId10")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId11")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId12")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId13")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId14")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId3")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId4")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId5")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId6")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId7")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId8")
                        .HasColumnType("int");

                    b.Property<int?>("OtherAccountId9")
                        .HasColumnType("int");

                    b.Property<string>("PrintFooter")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PrintFooterFont")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrintFooterFontColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("PrintFooterFontSize")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PrintFooterFontStyle")
                        .HasColumnType("tinyint");

                    b.Property<string>("PrintHeader")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PrintHeaderFont")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrintHeaderFontColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("PrintHeaderFontSize")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PrintHeaderFontStyle")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PurchAccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("PurchAccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("PurchAccountId3")
                        .HasColumnType("int");

                    b.Property<int?>("PurchAccountId4")
                        .HasColumnType("int");

                    b.Property<int?>("PurchAccountId5")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SalesAccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("SalesAccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("SalesAccountId3")
                        .HasColumnType("int");

                    b.Property<int?>("SalesAccountId4")
                        .HasColumnType("int");

                    b.Property<int?>("SalesAccountId5")
                        .HasColumnType("int");

                    b.Property<int?>("SalesCostAccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("SalesCostAccountId2")
                        .HasColumnType("int");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreKeeper")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StorePosition")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("StoreType")
                        .HasColumnType("bit")
                        .HasComment("true MainBranch , False Sub Branch");

                    b.Property<string>("TaxReg")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StoreId");

                    b.HasIndex("BoxId");

                    b.ToTable("MS_Stores", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsTaxis", b =>
                {
                    b.Property<int>("TaxesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxesId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("EtaxCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsAccomulative")
                        .HasColumnType("bit");

                    b.Property<bool?>("PlusOrMinus")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TaxNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TaxNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("TaxStyle")
                        .HasColumnType("tinyint")
                        .HasComment("0 Percent , 1 value , 2 Without");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.HasKey("TaxesId");

                    b.ToTable("MS_Taxes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsTerm", b =>
                {
                    b.Property<int>("TermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TermId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("CashOrCredit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("DependsOn")
                        .HasColumnType("tinyint");

                    b.Property<int?>("InventoryBookId")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryTermId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDefaultTerm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOpenningTerm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStopped")
                        .HasColumnType("bit");

                    b.Property<int?>("JournalEntryBookId")
                        .HasColumnType("int");

                    b.Property<int?>("JournalEntryTermId")
                        .HasColumnType("int");

                    b.Property<string>("ReportPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("SystemIssuedOnly")
                        .HasColumnType("bit");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("UseItemTax")
                        .HasColumnType("tinyint");

                    b.HasKey("TermId");

                    b.ToTable("Ms_Terms", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsTermsCostCenter", b =>
                {
                    b.Property<int>("TermCostCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TermCostCenterId"), 1L, 1);

                    b.Property<bool?>("AddCenter1DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCenter2DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCenter3DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCenter4DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCenter5DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCostCenter1IsFixed")
                        .HasColumnType("bit");

                    b.Property<int?>("AddCostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId4")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId5")
                        .HasColumnType("int");

                    b.Property<bool?>("AddCostCenterIsFixed2")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCostCenterIsFixed3")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCostCenterIsFixed4")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddCostCenterIsFixed5")
                        .HasColumnType("bit");

                    b.Property<bool?>("CenterCashDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("CenterDiscDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("CenterTaxDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("CostCenterCashIsFixed")
                        .HasColumnType("bit");

                    b.Property<int?>("CostCenterCredit")
                        .HasColumnType("int");

                    b.Property<bool?>("CostCenterCreditFixed")
                        .HasColumnType("bit");

                    b.Property<bool?>("CostCenterDebitFixed")
                        .HasColumnType("bit");

                    b.Property<bool?>("CostCenterDiscIsFixed")
                        .HasColumnType("bit");

                    b.Property<int?>("CostCenterIdCash")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdDebit")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdDisc")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdTax")
                        .HasColumnType("int");

                    b.Property<bool?>("CostCenterTaxIsFixed")
                        .HasColumnType("bit");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("ValuAddCostCenter1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAddCostCenter2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAddCostCenter3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAddCostCenter4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAddCostCenter5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuCostCenterCash")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuCostCenterCredit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuCostCenterDebit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuCostCenterDisc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuCostCenterTax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("TermCostCenterId");

                    b.HasIndex("TermId");

                    b.ToTable("Ms_TermsCostCenter", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsTermsDetail", b =>
                {
                    b.Property<int>("TermDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TermDetailId"), 1L, 1);

                    b.Property<bool?>("AccCashDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AccDiscDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AccTaxDebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<byte?>("AccountCashIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AccountCreditFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AccountDebitFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AccountDiscIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AccountIdCash")
                        .HasColumnType("int");

                    b.Property<int?>("AccountIdCredit")
                        .HasColumnType("int");

                    b.Property<int?>("AccountIdDebit")
                        .HasColumnType("int");

                    b.Property<int?>("AccountIdDisc")
                        .HasColumnType("int");

                    b.Property<int?>("AccountIdTax")
                        .HasColumnType("int");

                    b.Property<byte?>("AccountTaxIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("AddAcc1DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddAcc2DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddAcc3DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddAcc4DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AddAcc5DebitOrCredit")
                        .HasColumnType("bit");

                    b.Property<byte?>("AddAccount1IsFixed")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AddAccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId3")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId4")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId5")
                        .HasColumnType("int");

                    b.Property<byte?>("AddAccountIsFixed2")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddAccountIsFixed3")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddAccountIsFixed4")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddAccountIsFixed5")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddCostCenter1IsFixed")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AddCostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId4")
                        .HasColumnType("int");

                    b.Property<int?>("AddCostCenterId5")
                        .HasColumnType("int");

                    b.Property<byte?>("AddCostCenterIsFixed2")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddCostCenterIsFixed3")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddCostCenterIsFixed4")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AddCostCenterIsFixed5")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("AnalaticalCodeMust")
                        .HasColumnType("bit");

                    b.Property<byte?>("CostCenterCashIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("CostCenterCreditFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("CostCenterDebitFixed")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("CostCenterDiscIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CostCenterIdCash")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdCredit")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdDebit")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdDisc")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterIdTax")
                        .HasColumnType("int");

                    b.Property<byte?>("CostCenterTaxIsFixed")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("TaxOnService")
                        .HasColumnType("bit");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("ValuAccountCash")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAccountCredit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAccountDebit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAccountDisc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAccountTax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAddAccount1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAddAccount2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAddAccount3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAddAccount4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ValuAddAccount5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("TermDetailId");

                    b.HasIndex("TermId");

                    b.ToTable("Ms_TermsDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsUpdateReplication", b =>
                {
                    b.Property<int>("UpdatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UpdatID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UpdatId"), 1L, 1);

                    b.Property<DateTime?>("LastUpDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("LastUpdate2")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdate3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TableDef")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UpdatId");

                    b.ToTable("MS_UpdateReplication", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsUserAuthentication", b =>
                {
                    b.Property<int>("AuthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthId"), 1L, 1);

                    b.Property<string>("AuthCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AuthDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AuthName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("AuthenticatedBy")
                        .HasColumnType("int")
                        .HasComment("the Id of the user who athurized to give this authentication");

                    b.Property<bool?>("Authinticated")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuthId");

                    b.ToTable("MS_UserAuthentications", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsVendImg", b =>
                {
                    b.Property<int>("VendImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendImgId"), 1L, 1);

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("ImgDesc1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImgDesc2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendImgId");

                    b.HasIndex("VendorId");

                    b.ToTable("Ms_VendImgs", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsVendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("Barcode")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<byte?>("CreditPeriodType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DtReg")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dtReg");

                    b.Property<DateTime?>("DtRegRenew")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dtRegRenew");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EtaxCustType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Business  tax Reg Required,Person   NationalID not required,Foreigner  Name and ID  required");

                    b.Property<decimal?>("Evaluation")
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("ForAdjustOnly")
                        .HasColumnType("bit");

                    b.Property<string>("HomePage")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<byte?>("InvoiceCopies")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreditEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPricIncludTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsServerEntity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxExempted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PrePaidPercent")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TaxExemptionNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxRefNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("VendID")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("VendJob")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("VendorCatId")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendorTypeId")
                        .HasColumnType("int");

                    b.HasKey("VendorId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("VendorCatId");

                    b.HasIndex("VendorTypeId");

                    b.ToTable("MS_Vendor", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsVendorBranch", b =>
                {
                    b.Property<int>("VendBranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendBranchId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("VendBranchCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendBranchName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendBranchName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendBranchId");

                    b.HasIndex("VendorId");

                    b.ToTable("Ms_VendorBranches", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsVendorCategory", b =>
                {
                    b.Property<int>("VendorCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorCatId"), 1L, 1);

                    b.Property<string>("CatCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ParentVendorCatId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendorCatLevel")
                        .HasColumnType("int");

                    b.Property<int?>("VendorCatParent")
                        .HasColumnType("int");

                    b.HasKey("VendorCatId");

                    b.ToTable("MS_VendorCategory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsVendorContact", b =>
                {
                    b.Property<int>("VendContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendContactId"), 1L, 1);

                    b.Property<int?>("AccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId3")
                        .HasColumnType("int");

                    b.Property<string>("Bank1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Bank2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactAddress2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactAddress3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactEmail1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactEmail2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactEmail3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPhone1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone3")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone4")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone5")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<string>("Idno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IDNo");

                    b.Property<bool?>("Isprimary")
                        .HasColumnType("bit");

                    b.Property<string>("PassPortNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendContactId");

                    b.HasIndex("VendorId");

                    b.ToTable("Ms_VendorContacts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsVendorType", b =>
                {
                    b.Property<int>("VendorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorTypeId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrentTrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorTypeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorTypeDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendorTypeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("VendorTypeLevelType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("VendorTypeParent")
                        .HasColumnType("int");

                    b.HasKey("VendorTypeId");

                    b.ToTable("Ms_VendorTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsVendorUser", b =>
                {
                    b.Property<int>("VendUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendUserId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendUserId");

                    b.HasIndex("UserId");

                    b.HasIndex("VendorId");

                    b.ToTable("Ms_VendorUsers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsVwAssetExcelExport", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AssetCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("InstallMentCount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsProduction")
                        .HasColumnType("bit");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RemainInstallments")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("Ms_Vw_AssetExcelExport");
                });

            modelBuilder.Entity("DAL.Models.MsVwBankTran", b =>
                {
                    b.Property<string>("BoxFrom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("BoxTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("BoxTranDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxTranId")
                        .HasColumnType("int");

                    b.Property<string>("Desca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCA")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Desce")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCE")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Valu")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("valu");

                    b.ToView("Ms_VW_BankTran");
                });

            modelBuilder.Entity("DAL.Models.MsVwCustomerExcelExport", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("Ms_Vw_CustomerExcelExport");
                });

            modelBuilder.Entity("DAL.Models.MsVwItemBatchesQtyInStore", b =>
                {
                    b.Property<int>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemBatchCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchName1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("PartCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("QtyInNotebook")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyPartiation")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("StorePartId")
                        .HasColumnType("int");

                    b.ToView("Ms_VW_ItemBatchesQtyInStores");
                });

            modelBuilder.Entity("DAL.Models.MsVwItemBatchStore", b =>
                {
                    b.Property<int>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.ToView("Ms_VW_ItemBatchStores");
                });

            modelBuilder.Entity("DAL.Models.MsVwItemCardExcelExport", b =>
                {
                    b.Property<string>("BarCode1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode10")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode11")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode12")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode13")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode14")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode15")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode4")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode5")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode6")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode7")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode8")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode9")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("BeforLastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BoxTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("BoxTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("BrandsCode")
                        .HasColumnType("int");

                    b.Property<string>("BrandsDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("BreakTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("BreakTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("CannotDevide")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosingCode")
                        .HasColumnType("int");

                    b.Property<string>("ClosingDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CoverTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("CoverTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CutterTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("CutterTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("DefaultBarCode")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Disabled")
                        .HasColumnType("bit");

                    b.Property<int?>("DistributionCode")
                        .HasColumnType("int");

                    b.Property<string>("DistributionDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ExpirPeriod")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FaceTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("FaceTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("GofferTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("GofferTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("GradeTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("GradeTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("GramTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("GramTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("IndustryCode")
                        .HasColumnType("int");

                    b.Property<string>("IndustryDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsAttributeItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultPurchas")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultSale")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDimension")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExpir")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSerialItem")
                        .HasColumnType("bit");

                    b.Property<int>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ItemCatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastSalePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("LotNumberExpiry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ManualPurchasePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<long?>("MaxTversion")
                        .HasColumnType("bigint")
                        .HasColumnName("MaxTVersion");

                    b.Property<int?>("PadingTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("PadingTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("Period")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price10")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price7")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price8")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price9")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("ProdDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ProductsTypesCode")
                        .HasColumnType("int");

                    b.Property<string>("ProductsTypesDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("PurNotReceived")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("QtyInBox")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInNotebook")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInWithoutCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutWithoutBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyPartiation")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("RequestedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReservedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SaleNotDelivered")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SalesOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("SizeTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("SizeTypeDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Ttype")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("TType")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("Tversion")
                        .HasColumnType("bigint")
                        .HasColumnName("TVersion");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UnitNam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("UnittRate")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("Ms_Vw_ItemCardExcelExport");
                });

            modelBuilder.Entity("DAL.Models.MsVwItemStore", b =>
                {
                    b.Property<int>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.ToView("Ms_VW_ItemStores");
                });

            modelBuilder.Entity("DAL.Models.MsVwLetterDocSearch", b =>
                {
                    b.Property<string>("BodySn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BodySN");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeliverTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("DeliverTrNo")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCurrentBuyer")
                        .HasColumnType("bit");

                    b.Property<int?>("IsTaxInvHold")
                        .HasColumnType("int");

                    b.Property<int?>("LetterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LetterTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LetterTrNo")
                        .HasColumnType("int");

                    b.Property<bool?>("LetterType")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MororName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MotorSearialId")
                        .HasColumnType("int")
                        .HasColumnName("MotorSearialID");

                    b.Property<string>("MotorSn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MotorSN");

                    b.Property<int?>("MotorSntrNo")
                        .HasColumnType("int")
                        .HasColumnName("MotorSNTrNo");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.ToView("Ms_Vw_letterDocSearch");
                });

            modelBuilder.Entity("DAL.Models.MsVwLetterSearchresult", b =>
                {
                    b.Property<string>("BodySn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BodySN");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeliverTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("DeliverTrNo")
                        .HasColumnType("int");

                    b.Property<int?>("LetterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LetterTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LetterTrNo")
                        .HasColumnType("int");

                    b.Property<bool?>("LetterType")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MororName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MotorSearialId")
                        .HasColumnType("int")
                        .HasColumnName("MotorSearialID");

                    b.Property<string>("MotorSn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MotorSN");

                    b.Property<int?>("MotorSntrNo")
                        .HasColumnType("int")
                        .HasColumnName("MotorSNTrNo");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.ToView("Ms_Vw_letterSearchresult");
                });

            modelBuilder.Entity("DAL.Models.MsVwLetterTaxSearch", b =>
                {
                    b.Property<string>("BodySn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BodySN");

                    b.Property<string>("BuyerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LetterNormalTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LetterNormalTrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LetterTaxTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LetterTaxTrNo")
                        .HasColumnType("int");

                    b.Property<string>("MotorSn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MotorSN");

                    b.Property<decimal?>("TaxValu")
                        .HasColumnType("numeric(22,2)");

                    b.Property<string>("TempDesca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("Ms_Vw_LetterTaxSearch");
                });

            modelBuilder.Entity("DAL.Models.MsVwQtyInStore", b =>
                {
                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<string>("LotNumberExpiry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("Period")
                        .HasColumnType("int");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ProdDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("PurNotReceived")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInNotebook")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInWithoutCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutWithoutBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyPartiation")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RequestedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReservedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SaleNotDelivered")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SalesOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("StorePartId")
                        .HasColumnType("int");

                    b.ToView("Ms_VW_QtyInStores");
                });

            modelBuilder.Entity("DAL.Models.MsVwVendorExcelExport", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("Ms_Vw_VendorExcelExport");
                });

            modelBuilder.Entity("DAL.Models.MsWeightCard", b =>
                {
                    b.Property<int>("ScaleCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScaleCardId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<string>("ClosingDoc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ClosingDocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId1")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId2")
                        .HasColumnType("int");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("InOrOut")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("SourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Weight1Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Weight1Time")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Weight2Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Weight2Time")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("WeightQty1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeightQty2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeightQtyDiff")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeightQtyDiscount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WheightDiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ScaleCardId");

                    b.ToTable("Ms_WeightCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.MsWeightcardItem", b =>
                {
                    b.Property<int>("WeightItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeightItemId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ScaleQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ScaleQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("WeightItemId");

                    b.HasIndex("ScaleCardId");

                    b.ToTable("Ms_WeightcardItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.Name", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Names");
                });

            modelBuilder.Entity("DAL.Models.Ou", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adderss")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("adderss");

                    b.Property<string>("Emaia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("emaia");

                    b.Property<byte[]>("Img")
                        .HasColumnType("image")
                        .HasColumnName("img");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<long?>("Taxnumber")
                        .HasColumnType("bigint")
                        .HasColumnName("taxnumber");

                    b.HasKey("Id");

                    b.ToTable("ou", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PayNoteSearch", b =>
                {
                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BankNoticId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BankNoticeTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BankNoticeTrNo")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("BoxCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("Cc")
                        .HasColumnType("int")
                        .HasColumnName("cc");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Desca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCA")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value10")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value10BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value1BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value2BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value3BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value4BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value5BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value6BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value7")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value7BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value8")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value8BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value9")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value9BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.ToView("PayNoteSearch");
                });

            modelBuilder.Entity("DAL.Models.PrintBoxType", b =>
                {
                    b.Property<int>("BoxTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoxTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BoxTypeId");

                    b.ToTable("Print_BoxType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintBreakType", b =>
                {
                    b.Property<int>("BreakTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BreakTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BreakTypeId");

                    b.ToTable("Print_BreakType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintClosing", b =>
                {
                    b.Property<int>("ClosingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClosingId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ClosingId");

                    b.ToTable("Print_Closing", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintConnectionType", b =>
                {
                    b.Property<int>("ConnectTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConnectTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ConnectTypeId");

                    b.ToTable("Print_ConnectionType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintCoverType", b =>
                {
                    b.Property<int>("CoverTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoverTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CoverTypeId");

                    b.ToTable("Print_CoverType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintCutterTypeId", b =>
                {
                    b.Property<int>("CutterTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CutterTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CutterTypeId");

                    b.ToTable("Print_CutterTypeId", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintDistribution", b =>
                {
                    b.Property<int>("DistributId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistributId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("DistributId");

                    b.ToTable("Print_Distribution", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintEditType", b =>
                {
                    b.Property<int>("EditTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EditTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EditTypeId");

                    b.ToTable("Print_EditType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintFaceType", b =>
                {
                    b.Property<int>("FaceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaceTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("FaceTypeId");

                    b.ToTable("Print_FaceType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintGofferType", b =>
                {
                    b.Property<int>("GofferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GofferId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("GofferId");

                    b.ToTable("Print_GofferType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintGradeType", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("GradId");

                    b.ToTable("Print_GradeType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintGramType", b =>
                {
                    b.Property<int>("GramTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GramTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(13,10)");

                    b.HasKey("GramTypeId");

                    b.ToTable("Print_GramType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintIndustry", b =>
                {
                    b.Property<int>("IndistryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IndistryId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("IndistryId");

                    b.ToTable("Print_Industry", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintJobOrderCreationType", b =>
                {
                    b.Property<int>("CreateTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreateTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CreateTypeId");

                    b.ToTable("Print_JobOrderCreationType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintPadingType", b =>
                {
                    b.Property<int>("PadingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PadingTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("PadingTypeId");

                    b.ToTable("Print_PadingType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintPricing", b =>
                {
                    b.Property<int>("PrinPriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrinPriceId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrentEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CutterHeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CutterLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CutterMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CutterWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("EditPrinQoutId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Forms")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("GofferMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InOrderHeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InOrderLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InOrderWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ItemPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Layers")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("OutOrderHeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OutOrderLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OutOrderWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OuterBoxesCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Palets")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaperPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Parts")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PartsBySheet")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PartsCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PrinQoutDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PrinQoutId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProdWeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Profit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProfitPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PurpuraMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Scrap")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ScrapPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SheetsQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Slofan")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPrepare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfitPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalSales")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalWeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Transportation")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Zincs")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("PrinPriceId");

                    b.ToTable("Print_Pricing", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintPricingDetail", b =>
                {
                    b.Property<int>("PrinPriceIdDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrinPriceIdDetailId"), 1L, 1);

                    b.Property<decimal?>("Factor")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("GofferId")
                        .HasColumnType("int");

                    b.Property<decimal?>("GramFactor")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("GramTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Height")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("KnifeLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("KnifeWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("Layer")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LayerPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Materialgram")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OperationPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("PartSerial")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PrinPriceId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Slofan")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SolfanPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDimension")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("PrinPriceIdDetailId");

                    b.HasIndex("PrinPriceId");

                    b.ToTable("Print_PricingDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintQoutation", b =>
                {
                    b.Property<int>("PrinQoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrinQoutId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BoxCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BoxTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrentEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CutterMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("DistributId")
                        .HasColumnType("int");

                    b.Property<int?>("EditPrinQoutId")
                        .HasColumnType("int");

                    b.Property<int?>("EditTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("GofferId")
                        .HasColumnType("int");

                    b.Property<decimal?>("GofferMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsDraw")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsSample")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("OuterBoxesCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PartsCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PurpuraMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SalesOfferReqId")
                        .HasColumnType("int");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<byte?>("SizeSource")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StockingId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("PrinQoutId");

                    b.ToTable("Print_Qoutation", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintQoutationDetail", b =>
                {
                    b.Property<int>("PrinQoutDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrinQoutDetailId"), 1L, 1);

                    b.Property<decimal?>("BoxCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BoxTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CutterHeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CutterLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CutterMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CutterWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DistributId")
                        .HasColumnType("int");

                    b.Property<int?>("EditTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("GofferId")
                        .HasColumnType("int");

                    b.Property<decimal?>("GofferMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InOrderHeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InOrderLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InOrderWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsDraw")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSample")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Layers")
                        .HasColumnType("int");

                    b.Property<decimal?>("OutOrderHeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OutOrderLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OutOrderWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OuterBoxesCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PartsCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PrinQoutId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurpuraMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int");

                    b.Property<byte?>("SizeSource")
                        .HasColumnType("tinyint");

                    b.Property<int?>("StockingId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("PrinQoutDetailId");

                    b.HasIndex("PrinQoutId");

                    b.ToTable("Print_QoutationDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintQoutationDetailsItem", b =>
                {
                    b.Property<int>("PrintQoutItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrintQoutItemId"), 1L, 1);

                    b.Property<decimal?>("Height")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PrinQoutDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("TotalDimension")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("PrintQoutItemId");

                    b.HasIndex("PrinQoutDetailId");

                    b.ToTable("Print_QoutationDetailsItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintSector", b =>
                {
                    b.Property<int>("SectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectorId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("SectorId");

                    b.ToTable("Print_Sectors", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintSizeType", b =>
                {
                    b.Property<int>("SizeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("SizeTypeId");

                    b.ToTable("Print_SizeType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintStickyType", b =>
                {
                    b.Property<int>("StickyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StickyTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StickyTypeId");

                    b.ToTable("Print_StickyType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PrintStocking", b =>
                {
                    b.Property<int>("StockingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockingId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockingId");

                    b.ToTable("Print_Stocking", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdAttributeValue", b =>
                {
                    b.Property<int>("AttribValuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttribValuId"), 1L, 1);

                    b.Property<int?>("AttributId")
                        .HasColumnType("int");

                    b.Property<string>("AttributValuName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AttributValuName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AttributValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("HeightCentimeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HeightMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HeightMillimeters")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LengthCentimeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LengthMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LengthMillimeters")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("WidthCentimeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WidthMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WidthMillimeters")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AttribValuId");

                    b.HasIndex("AttributId");

                    b.ToTable("Prod_AttributeValue", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdBasicUnit", b =>
                {
                    b.Property<int>("BasUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BasUnitId"), 1L, 1);

                    b.Property<string>("AutoDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("CannotDevide")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EtaxUnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsKarat")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentUnit")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitNam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("UnitNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("UnittRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("BasUnitId");

                    b.HasIndex("ParentUnit");

                    b.ToTable("Prod_BasicUnits", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdBillOfMaterial", b =>
                {
                    b.Property<int>("BillOfMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillOfMaterialId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Bomcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BOMCode");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsReserved")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsScrapCost")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsService")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("OverflowQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OverflowQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ScrapCostPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ScrapQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ScrapQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("BillOfMaterialId");

                    b.ToTable("Prod_BillOfMaterial", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdBillOfMaterialItem", b =>
                {
                    b.Property<int>("BillItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillItemsId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CostPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaterialProductPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProductQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProductQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ProductionUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProductionUnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ScrapQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ScrapQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("BillItemsId");

                    b.HasIndex("BillOfMaterialId");

                    b.ToTable("Prod_BillOfMaterialItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdBillOfMaterialSecondaryItem", b =>
                {
                    b.Property<int>("BillSecondaryItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillSecondaryItemsId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProductCostPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProductQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProductQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ProductionUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProductionUnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("SecondaryProductPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("BillSecondaryItemsId");

                    b.HasIndex("BillOfMaterialId");

                    b.ToTable("Prod_BillOfMaterialSecondaryItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdEmpEquipDistrib", b =>
                {
                    b.Property<int>("EmpEquipDistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpEquipDistId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TimeTo")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpEquipDistId");

                    b.ToTable("Prod_EmpEquipDistrib", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdEmpEquipDistribDetail", b =>
                {
                    b.Property<int>("EmpEquipDistDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpEquipDistDetailId"), 1L, 1);

                    b.Property<int?>("EmpEquipDistId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpEquipDistDetailId");

                    b.HasIndex("EmpEquipDistId");

                    b.ToTable("Prod_EmpEquipDistribDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdEmpJobOrderDistrib", b =>
                {
                    b.Property<int>("EmpJobOrderDistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpJobOrderDistId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TimeTo")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpJobOrderDistId");

                    b.ToTable("Prod_EmpJobOrderDistrib", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdEmpJobOrderDistribDetail", b =>
                {
                    b.Property<int>("EmpJobOrderDistDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpJobOrderDistDetailId"), 1L, 1);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpJobOrderDistId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("EmpJobOrderDistDetailId");

                    b.HasIndex("EmpJobOrderDistId");

                    b.ToTable("Prod_EmpJobOrderDistribDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdEquipment", b =>
                {
                    b.Property<int>("EquipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipId"), 1L, 1);

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EquipCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EquipName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EquipName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("IsScale")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Jdesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("JDesc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("MaxHeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MaxLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MaxWeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MaxWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("MinLaborCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinWeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("NumberAvailable")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyPerUnit")
                        .HasColumnType("numeric(25,4)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("SpeedByHour")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("StandByTime")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("StandardDailyCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("StandardDailyWorkHours")
                        .HasColumnType("decimal(5,2)");

                    b.Property<byte?>("StandardHolyDays")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("StandardHourlyCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("StandardMonthlyCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TechnicalSpecs")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("TimeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("EquipId");

                    b.ToTable("Prod_Equipments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdEquipProfile", b =>
                {
                    b.Property<int>("EquipProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipProfileId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ProdileDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ProfileCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("EquipProfileId");

                    b.HasIndex("EquipId");

                    b.ToTable("Prod_EquipProfile", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdItemAttribute", b =>
                {
                    b.Property<int>("AttributId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttributId"), 1L, 1);

                    b.Property<string>("AttributCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AttributName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AttributName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("DataType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("Dimension")
                        .HasColumnType("tinyint")
                        .HasComment("0 without,1 length,2 width,3 Height");

                    b.Property<decimal?>("IncrementalValu")
                        .HasColumnType("decimal(38,10)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFixedMenuValues")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOptionalWithAlarm")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaxValu")
                        .HasColumnType("decimal(38,10)");

                    b.Property<decimal?>("MinValu")
                        .HasColumnType("decimal(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("AttributId");

                    b.ToTable("Prod_ItemAttributes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdItemAttributesBatche", b =>
                {
                    b.Property<int>("ItemAtrribBatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemAtrribBatchId"), 1L, 1);

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscountValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("HeightCentimeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("HeightMeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("HeightMillimeters")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsOpened")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsScrap")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStandard")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTempItem")
                        .HasColumnType("bit");

                    b.Property<string>("ItemBatchCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchName1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchName2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LengthCentimeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LengthMeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LengthMillimeters")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MultiplyValues")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ParentBatchId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("QtyInBox")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("UseBatchPrice")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Wheight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WidthCentimeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WidthMeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WidthMillimeters")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ItemAtrribBatchId")
                        .HasName("PK_Prod_ItemAttributesBatched");

                    b.ToTable("Prod_ItemAttributesBatche", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdItemAttributesBatchesDetail", b =>
                {
                    b.Property<int>("ItemAtrributBatchValuesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemAtrributBatchValuesId"), 1L, 1);

                    b.Property<int?>("AttribValuId")
                        .HasColumnType("int");

                    b.Property<string>("AttribValueDesc")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("AttributId")
                        .HasColumnType("int");

                    b.Property<int>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.HasKey("ItemAtrributBatchValuesId");

                    b.HasIndex("ItemAtrribBatchId");

                    b.ToTable("Prod_ItemAttributesBatchesDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdItemAttributsJoin", b =>
                {
                    b.Property<int>("ProdItemAtrribId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdItemAtrribId"), 1L, 1);

                    b.Property<int?>("AttributId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("ProdItemAtrribId")
                        .HasName("PK_Prod_ItemAttributs");

                    b.HasIndex("AttributId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Prod_ItemAttributsJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdItemBatchPartition", b =>
                {
                    b.Property<int>("ItemPatchPartitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemPatchPartitionId"), 1L, 1);

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ItemMax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurNotReceived")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurchaseNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchaseOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInNotebook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyInWithoutCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyIunit2Notebook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2Notebook")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyIunit2Partiation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("QtyIUnit2Partiation")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("QtyOutWithoutBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyPartiation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(38,10)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RequestedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReservedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SalesNotDelivered")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SalesOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Ttype")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("TType")
                        .IsFixedLength()
                        .HasComment("i for inserted, u for updated")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("Tversion")
                        .HasColumnType("bigint")
                        .HasColumnName("TVersion")
                        .HasComment("number of updates on the table");

                    b.Property<decimal?>("VarianceQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WithoutCost")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ItemPatchPartitionId");

                    b.HasIndex("ItemAtrribBatchId");

                    b.ToTable("Prod_ItemBatchPartition", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdItemcardExpense", b =>
                {
                    b.Property<int>("ProdExpensId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdExpensId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpenseValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsPercent")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("PercentOf")
                        .HasColumnType("tinyint");

                    b.HasKey("ProdExpensId");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Prod_ItemcardExpenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrder", b =>
                {
                    b.Property<int>("JobOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobOrderId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustomerCharged")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("FatteningType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Fattening, 2 Feeding");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("InDirectExpensesAccountId")
                        .HasColumnType("int");

                    b.Property<bool?>("Installation")
                        .HasColumnType("bit");

                    b.Property<decimal?>("InstallationPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsDeliveredGoStock")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredMaterial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredProducts")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredScrap")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsService")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderTypeId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderTypeId");

                    b.Property<int?>("MaintainTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("NetExpenses")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("OrderSource")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OrderStatus")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OrderType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PaidDocId")
                        .HasColumnType("int");

                    b.Property<byte?>("Priority")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("ProducedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<string>("RefOrder")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("SerReqId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalEquipCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalEquipCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensesCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalGoStock")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalGoStockCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJobsCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJobsCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJpbOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalMaterialCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProducedMeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProductCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProductsPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPurchInvCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalScrap")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalScrapCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTasksCose")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobOrderId");

                    b.ToTable("Prod_JobOrder", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderClosing", b =>
                {
                    b.Property<int>("JorderClosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JOrderClosId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JorderClosId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<byte?>("ClosingType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JorderClosId");

                    b.ToTable("Prod_JobOrderClosing", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderEmpCostDoc", b =>
                {
                    b.Property<int>("JorderEmpDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JOrderEmpDocId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JorderEmpDocId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ShiftId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<byte?>("TimingType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("JorderEmpDocId");

                    b.ToTable("Prod_JobOrderEmpCostDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderEmpCostDocDetail", b =>
                {
                    b.Property<int>("JorderEmpDocDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JOrderEmpDocDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JorderEmpDocDetailId"), 1L, 1);

                    b.Property<decimal?>("CostHour")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExecutTime")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("JorderEmpDocId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEmpDocId");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("JorderEmpDocDetailId");

                    b.HasIndex("JorderEmpDocId");

                    b.ToTable("Prod_JobOrderEmpCostDocDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderEquipCostDoc", b =>
                {
                    b.Property<int>("JorderEquipDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JOrderEquipDocId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JorderEquipDocId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<byte?>("TimingType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("JorderEquipDocId");

                    b.ToTable("Prod_JobOrderEquipCostDoc", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderEquipCostDocDetail", b =>
                {
                    b.Property<int>("JorderEquipDocDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JOrderEquipDocDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JorderEquipDocDetailId"), 1L, 1);

                    b.Property<decimal?>("CostHour")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExecutTime")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("JorderEquipDocId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEquipDocId");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("JorderEquipDocDetailId");

                    b.HasIndex("JorderEquipDocId");

                    b.ToTable("Prod_JobOrderEquipCostDocDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderEquipment", b =>
                {
                    b.Property<int>("JobEquipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobEquipId"), 1L, 1);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEquipDocDetailId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEquipDocDetailId");

                    b.Property<int?>("JorderEquipDocId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEquipDocId");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RealNumber")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RequestedNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("StandardHourlyCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TaskEquipJoinId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobEquipId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderEquipment", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderExpense", b =>
                {
                    b.Property<int>("JobExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobExpenseId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<bool?>("BitOnClient")
                        .HasColumnType("bit")
                        .HasColumnName("bitOnClient");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpensValue")
                        .HasColumnType("decimal(25,3)");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobExpenseId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderExpenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderGoStock", b =>
                {
                    b.Property<int>("JobGoStockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("jobGoStockId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobGoStockId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobGoStockId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderGoStock", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderJob", b =>
                {
                    b.Property<int>("JobJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobJobId"), 1L, 1);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEmpDocDetailId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEmpDocDetailId");

                    b.Property<int?>("JorderEmpDocId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEmpDocId");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RealNumber")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RequestedNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskJobJoinId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobJobId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderJobs", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderMaterial", b =>
                {
                    b.Property<int>("JobMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("jobMaterialId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobMaterialId"), 1L, 1);

                    b.Property<int?>("AnWeightRateDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("AnWeightRateId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("RequestedMeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobMaterialId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderMaterials", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderProduct", b =>
                {
                    b.Property<int>("JobProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("jobProductId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobProductId"), 1L, 1);

                    b.Property<int?>("AnWeightRateDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("AnWeightRateId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("DescriptionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpensesCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpensesCostInPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProduced")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ItemCostInPrcent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("JobsCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("JobsCostInPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MachineCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MachineCostInPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyAfter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBefore")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("ScrapCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ScrapCostInPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobProductId");

                    b.HasIndex("ItemAtrribBatchId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderProducts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderPurchaseInvoice", b =>
                {
                    b.Property<int>("JobPurchasInvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobPurchasInvId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobPurchasInvId");

                    b.HasIndex("JobOrderId");

                    b.HasIndex("PurInvId");

                    b.ToTable("Prod_JobOrderPurchaseInvoices", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderScrap", b =>
                {
                    b.Property<int>("JobScrapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("jobScrapId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobScrapId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobScrapId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderScrap", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderService", b =>
                {
                    b.Property<int>("JobServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobServiceId"), 1L, 1);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("JorderEmpDocDetailId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEmpDocDetailId");

                    b.Property<int?>("JorderEmpDocId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEmpDocId");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("ServiceValue")
                        .HasColumnType("decimal(25,3)");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobServiceId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderServices", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderTask", b =>
                {
                    b.Property<int>("JobTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobTaskId"), 1L, 1);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JobTaskId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderTasks", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderType", b =>
                {
                    b.Property<int>("JorderTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JOrderTypeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JorderTypeId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<byte?>("AnimalOrFood")
                        .HasColumnType("tinyint")
                        .HasComment("1 food,2 animal");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("ExpensesCostInPercent")
                        .HasColumnType("bit");

                    b.Property<int?>("FinishedItemRecBookId")
                        .HasColumnType("int");

                    b.Property<int?>("FinishedItemRecJournalBookId")
                        .HasColumnType("int");

                    b.Property<int?>("FinishedItemRecJournalTermId")
                        .HasColumnType("int");

                    b.Property<int?>("FinishedItemRecTermId")
                        .HasColumnType("int");

                    b.Property<int?>("FinishedItemStorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("GoStockItemRecBookId")
                        .HasColumnType("int");

                    b.Property<int?>("GoStockItemRecJournalBookId")
                        .HasColumnType("int");

                    b.Property<int?>("GoStockItemRecJournalTermId")
                        .HasColumnType("int");

                    b.Property<int?>("GoStockItemRecTermId")
                        .HasColumnType("int");

                    b.Property<int?>("GoStockItemStorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("InDirectExpensesAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("IndirectCostPrcent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("IndirectJobsCostPrcent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("IndirectMachinesCostPrcent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("IndirectMaterialCostPrcent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("ItemCostInPrcent")
                        .HasColumnType("bit");

                    b.Property<byte?>("JobOrderMadeFor")
                        .HasColumnType("tinyint")
                        .HasComment("0 store, 1 customer");

                    b.Property<bool?>("JobsCostInPercent")
                        .HasColumnType("bit");

                    b.Property<bool?>("MachineCostInPercent")
                        .HasColumnType("bit");

                    b.Property<int?>("MaterialItemDelBookId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemDelJournalBookId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemDelJournalTermId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemDelTermId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemStorePartId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ScrapItemRecBookId")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapItemRecJournalBookId")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapItemRecJournalTermId")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapItemRecTermId")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapItemStorePartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("JorderTypeId");

                    b.ToTable("Prod_JobOrderType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderWorkFlow", b =>
                {
                    b.Property<int>("JobOrderDepartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobOrderDepartId"), 1L, 1);

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("JobOrderDepartId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("Prod_JobOrderWorkFlow", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJoinTaskEquipment", b =>
                {
                    b.Property<int>("TaskEquipJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskEquipJoinId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RequestedNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("TaskEquipJoinId");

                    b.HasIndex("TaskId");

                    b.ToTable("Prod_JoinTaskEquipments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdJoinTaskJob", b =>
                {
                    b.Property<int>("TaskJobJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskJobJoinId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RequestedNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("TaskJobJoinId");

                    b.HasIndex("TaskId");

                    b.ToTable("Prod_JoinTaskJob", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdProductionLine", b =>
                {
                    b.Property<int>("ProLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProLineId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdLinCode")
                        .HasColumnType("int");

                    b.Property<string>("ProdLinDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ProdLinName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ProdLinName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("StandardQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("ProLineId");

                    b.ToTable("Prod_ProductionLine", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdProductionLineDetail", b =>
                {
                    b.Property<int>("ProdLineDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdLineDetailId"), 1L, 1);

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProLineId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.HasKey("ProdLineDetailId");

                    b.HasIndex("ProLineId");

                    b.ToTable("Prod_ProductionLineDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdProductionOrder", b =>
                {
                    b.Property<int>("ProductionOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductionOrderId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("OrderStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ProductionOrderId");

                    b.ToTable("Prod_ProductionOrder", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdProductionOrderDetail", b =>
                {
                    b.Property<int>("ProdOrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdOrderDetailId"), 1L, 1);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ProLineId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductionOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeDetaiId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("ProdOrderDetailId");

                    b.HasIndex("ProductionOrderId");

                    b.ToTable("Prod_ProductionOrderDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdRecipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RecipeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("RecipeId");

                    b.ToTable("Prod_Recipe", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdRecipeDetail", b =>
                {
                    b.Property<int>("RecipeDetaiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeDetaiId"), 1L, 1);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("ProLineId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("RecipeDetaiId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Prod_RecipeDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdSetting", b =>
                {
                    b.Property<int>("ProdSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdSettingId"), 1L, 1);

                    b.Property<int?>("AccompanyproductsAccId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CostingAdjustmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("DailyWorkHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("DirectEquipmentAccId")
                        .HasColumnType("int");

                    b.Property<int?>("DirectServiceAccId")
                        .HasColumnType("int");

                    b.Property<int?>("DirectWorkersAccId")
                        .HasColumnType("int");

                    b.Property<bool?>("EmpDataSource")
                        .HasColumnType("bit")
                        .HasComment("1 production,2 Hr");

                    b.Property<int?>("FinishedProdValAccId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyStandardWorkDays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OtherCostsAccId")
                        .HasColumnType("int");

                    b.Property<int?>("OutSourceCost")
                        .HasColumnType("int");

                    b.Property<int?>("ScrapAccId")
                        .HasColumnType("int");

                    b.Property<byte?>("StandardCostPriority1")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("StandardCostPriority2")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("StandardCostPriority3")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UndercostOperationAccId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("ProdSettingId");

                    b.ToTable("Prod_Settings", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("OperationType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TaskCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TaskDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TaskName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TaskName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("TaskId");

                    b.ToTable("Prod_Tasks", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrder", b =>
                {
                    b.Property<int>("WorkOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkOrderId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustomerCharged")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocBarCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeliveredMaterial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredProducts")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredScrap")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetExpenses")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PackageCount")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalEquipCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalEquipCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensesCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalGoStockCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJpbOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalMaterialCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalProductCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalScrap")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalScrapCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("WorkOrderId");

                    b.ToTable("Prod_WorkOrder", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderEquipment", b =>
                {
                    b.Property<int>("WorkOrderEquipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkOrderEquipId"), 1L, 1);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JorderEquipDocDetailId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEquipDocDetailId");

                    b.Property<int?>("JorderEquipDocId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEquipDocId");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RealNumber")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RequestedNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("StandardHourlyCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TaskEquipJoinId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderEquipId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderEquipment", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderExpense", b =>
                {
                    b.Property<int>("WorkOrderExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkOrderExpenseId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<bool?>("BitOnClient")
                        .HasColumnType("bit")
                        .HasColumnName("bitOnClient");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpensValue")
                        .HasColumnType("decimal(25,3)");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderExpenseId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderExpenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderItemRecQualityDoc", b =>
                {
                    b.Property<int>("WorkOrderRecQualityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkOrderRecQualityId"), 1L, 1);

                    b.Property<int?>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderRecQualityId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderItemRecQualityDocs", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderMaterial", b =>
                {
                    b.Property<int>("WorkOrderMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkOrderMaterialId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("RequestedMeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderMaterialId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderMaterials", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderProdItem", b =>
                {
                    b.Property<int>("WorkOrderProdItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkOrderProdItemId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("DoublCheckQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DoublCheckQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DoubleCleanQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecutedQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemRecQualityDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MissedQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MissedQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NormalCleanQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NormalQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NormalQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceDoubleClean")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceNormal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RejectedQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RejectedQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("RequestedMeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalDoubleClean")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalNormal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderProdItemId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderProdItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderScrap", b =>
                {
                    b.Property<int>("WorkOrderScrapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkOrderScrapId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderScrapId");

                    b.ToTable("Prod_WorkOrderScrap", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderService", b =>
                {
                    b.Property<int>("WorkOrderServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkOrderServiceId"), 1L, 1);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JorderEmpDocDetailId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEmpDocDetailId");

                    b.Property<int?>("JorderEmpDocId")
                        .HasColumnType("int")
                        .HasColumnName("JOrderEmpDocId");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("ServiceValue")
                        .HasColumnType("decimal(25,3)");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("WorkOrderServiceId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Prod_WorkOrderServices", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjAccount", b =>
                {
                    b.Property<int>("ProjectAccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectAccId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(25,2)");

                    b.HasKey("ProjectAccId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_Accounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjEstimateItem", b =>
                {
                    b.Property<int>("ProjectEstimateItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectEstimateItemId"), 1L, 1);

                    b.Property<string>("AttributeCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AttributeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("EstimateCost")
                        .HasColumnType("numeric(25,2)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SuggestPrice")
                        .HasColumnType("numeric(25,2)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ProjectEstimateItemId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_EstimateItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjExpense", b =>
                {
                    b.Property<int>("ProjectExpensId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectExpensId"), 1L, 1);

                    b.Property<decimal?>("EstimatePercent")
                        .HasColumnType("numeric(10,4)");

                    b.Property<decimal?>("EstimateValue")
                        .HasColumnType("numeric(25,2)");

                    b.Property<int?>("ExpensesId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RealPercent")
                        .HasColumnType("numeric(10,4)");

                    b.Property<decimal?>("RealValue")
                        .HasColumnType("numeric(25,2)");

                    b.HasKey("ProjectExpensId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_Expenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjFund", b =>
                {
                    b.Property<int>("ProjectFundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectFundId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FundName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FundName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("FundPercent")
                        .HasColumnType("numeric(10,4)");

                    b.Property<decimal?>("FundValue")
                        .HasColumnType("numeric(25,2)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ProjectFundId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_Fund", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjDocument", b =>
                {
                    b.Property<int>("ProjDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjDocumentId"), 1L, 1);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AttachSerial")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<byte[]>("Fdata")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FData");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FSId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IssuePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OwnShipBondId")
                        .HasColumnType("int");

                    b.Property<string>("PaperNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("SearchTags")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ShelvId")
                        .HasColumnType("int");

                    b.HasKey("ProjDocumentId");

                    b.HasIndex("OwnShipBondId");

                    b.HasIndex("ProjectId");

                    b.HasIndex(new[] { "Fsid" }, "UQ__Proj_Pro__9C4B07173ED718FB")
                        .IsUnique();

                    b.ToTable("Proj_ProjDocuments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProject", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<decimal?>("ActualExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ActualExpensePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<decimal?>("BaseMentArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BasementMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BuildDegreeId")
                        .HasColumnType("int");

                    b.Property<int?>("BuildFinishLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("BuildStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("BuildTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BuildingArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BuildingMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("CalcAllMeters")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanRentUnits")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanSaleUnits")
                        .HasColumnType("bit");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<bool?>("CommissionIsPercent")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CommissionValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CompanyShare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CompanySharePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Description2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EastBoundary")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<long?>("ElectricityCounter")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("ExpectedExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FirstFloorUnitCount")
                        .HasColumnType("int");

                    b.Property<int?>("FloorUnitCount")
                        .HasColumnType("int");

                    b.Property<int?>("FloorsCount")
                        .HasColumnType("int");

                    b.Property<byte?>("FundSource")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("GardenArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("GardenMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("LandId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LandMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("LandNo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Landarea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("LastFloorUnitCount")
                        .HasColumnType("int");

                    b.Property<string>("NorthBoundary")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("PaidCapital")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidCapitalPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ParentProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ParkArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ParkMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PostalCodId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("ProjectExpectedStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ProjectManagerId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ProjectName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("ProjectStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("ProjectStopped")
                        .HasColumnType("bit");

                    b.Property<int?>("ProjectStoppedbyUserId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProjectValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RemainExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RemainExpensePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RentCaseId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RoofArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RoofMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("SouthBoundary")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("StreetNo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SubRegionClassId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<long?>("WaterCounter")
                        .HasColumnType("bigint");

                    b.Property<string>("WestBoundary")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("ProjectId");

                    b.ToTable("Proj_Projects", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjectItem", b =>
                {
                    b.Property<int>("ProjectItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectItemsId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ProjectItemsId");

                    b.ToTable("Proj_ProjectItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjectItemEmpJoin", b =>
                {
                    b.Property<int>("ProjItemEmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjItemEmpId"), 1L, 1);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjItemsJoinId")
                        .HasColumnType("int");

                    b.HasKey("ProjItemEmpId");

                    b.HasIndex("EmpId");

                    b.HasIndex("ProjItemsJoinId");

                    b.ToTable("Proj_ProjectItemEmpJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjectItemsJoin", b =>
                {
                    b.Property<int>("ProjItemsJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjItemsJoinId"), 1L, 1);

                    b.Property<decimal?>("ActualItemExpenseValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ActualItemPercentExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpectItemPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpectItemValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("FinishPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectItemsId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ProjItemsJoinId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectItemsId");

                    b.ToTable("Proj_ProjectItemsJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjectItemsVendor", b =>
                {
                    b.Property<int>("ProjectItemsVendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectItemsVendorId"), 1L, 1);

                    b.Property<int?>("ProjectItemsId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.Property<byte?>("VendorRate")
                        .HasColumnType("tinyint");

                    b.HasKey("ProjectItemsVendorId");

                    b.HasIndex("ProjectItemsId");

                    b.HasIndex("VendorId");

                    b.ToTable("Proj_ProjectItemsVendors", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjExploitJoin", b =>
                {
                    b.Property<int>("ProjExploitJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjExploitJoinId"), 1L, 1);

                    b.Property<int?>("BuildExploitId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ProjExploitJoinId");

                    b.HasIndex("BuildExploitId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjExploitJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjInsurance", b =>
                {
                    b.Property<int>("ProjInsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjInsuranceId"), 1L, 1);

                    b.Property<int?>("BuildInsurStatId")
                        .HasColumnType("int");

                    b.Property<int?>("InsurCovTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InsuranceValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ProjInsuranceId");

                    b.HasIndex("BuildInsurStatId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjInsurance", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjInsuranceUnit", b =>
                {
                    b.Property<int>("ProjInsuranceUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjInsuranceUnitId"), 1L, 1);

                    b.Property<int?>("InsurCaseId")
                        .HasColumnType("int");

                    b.Property<int?>("InsurCovTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InsuranceValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitInsurstatId")
                        .HasColumnType("int");

                    b.HasKey("ProjInsuranceUnitId");

                    b.HasIndex("InsurCaseId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("UnitInsurstatId");

                    b.ToTable("Proj_ProjInsuranceUnit", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjItemEmpTaskJoin", b =>
                {
                    b.Property<int>("ProjItemEmpTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjItemEmpTaskId"), 1L, 1);

                    b.Property<decimal?>("ActualItemExpenseValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ActualItemPercentExpense")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpectItemPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpectItemValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("FinishPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ProjItemEmpId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("ProjItemEmpTaskId");

                    b.HasIndex("ProjItemEmpId");

                    b.HasIndex("TaskId");

                    b.ToTable("Proj_ProjItemEmpTaskJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjOccupTypeJoin", b =>
                {
                    b.Property<int>("ProjOccupTypeJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjOccupTypeJoinId"), 1L, 1);

                    b.Property<int?>("BuildOccupTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ProjOccupTypeJoinId");

                    b.HasIndex("BuildOccupTypeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjOccupTypeJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjOwnerJoin", b =>
                {
                    b.Property<int>("ProjOwnerJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjOwnerJoinId"), 1L, 1);

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("SharePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ShareValue")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ProjOwnerJoinId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjOwnerJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjParkingJoin", b =>
                {
                    b.Property<int>("ProjParkJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjParkJoinId"), 1L, 1);

                    b.Property<int?>("ParkingId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ProjParkJoinId");

                    b.HasIndex("ParkingId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjParkingJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjPermitActivityJoin", b =>
                {
                    b.Property<int>("ProjPermitActivityJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjPermitActivityJoinId"), 1L, 1);

                    b.Property<int?>("BuildPermitActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ProjPermitActivityJoinId");

                    b.HasIndex("BuildPermitActivityId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjPermitActivityJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjPerspectiveJoin", b =>
                {
                    b.Property<int>("ProjPerspectiveJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjPerspectiveJoinId"), 1L, 1);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuildPerspectiveId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Fdata")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FData");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FSId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ProjPerspectiveJoinId");

                    b.HasIndex("BuildPerspectiveId");

                    b.HasIndex("ProjectId");

                    b.HasIndex(new[] { "Fsid" }, "UQ__Proj_Pro__9C4B07178AD73A3B")
                        .IsUnique();

                    b.ToTable("Proj_ProjPerspectiveJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjPicture", b =>
                {
                    b.Property<int>("ProjPictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjPictureId"), 1L, 1);

                    b.Property<string>("AttachPath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<byte[]>("Fdata")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FData");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FSId")
                        .HasDefaultValueSql("(newid())")
                        .HasComment("");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ProjPictureId");

                    b.HasIndex("ProjectId");

                    b.HasIndex(new[] { "Fsid" }, "UQ__Proj_Pro__9C4B071785FAAD21")
                        .IsUnique();

                    b.ToTable("Proj_ProjPicture", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnit", b =>
                {
                    b.Property<int>("ProjUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjUnitId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("BaseMentArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BasementMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BuildingArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BuildingMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("CalcAllMeters")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanRentUnits")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanSaleUnits")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("CommissionIsPercent")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CommissionValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ContractDocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<long?>("ElectricityCounter")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("EstimatedUnitArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("GardenArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("GardenMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("MaxRents")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("ParkArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ParkMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ParkingId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<bool?>("ProjectStopped")
                        .HasColumnType("bit");

                    b.Property<int?>("RentCaseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RentDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("RentDocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Rented")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReserveDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ReserveDocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Reserved")
                        .HasColumnType("bit");

                    b.Property<decimal?>("RoofArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RoofMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RoomCount")
                        .HasColumnType("int");

                    b.Property<bool?>("Sold")
                        .HasColumnType("bit");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnFinLevelId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitDegreeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UnitExpectedStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitInsurstatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("UnitOrderInFloor")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UnitStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnitStatId")
                        .HasColumnType("int");

                    b.Property<int?>("UnittypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<long?>("WaterCounter")
                        .HasColumnType("bigint");

                    b.HasKey("ProjUnitId")
                        .HasName("PK_Proj_ProjUnits_1");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_ProjUnits", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitDocument", b =>
                {
                    b.Property<int>("ProjUnitDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjUnitDocumentId"), 1L, 1);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AttachSerial")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<byte[]>("Fdata")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FData");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FSId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IssuePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OwnShipBondId")
                        .HasColumnType("int");

                    b.Property<string>("PaperNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("SearchTags")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ShelvId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitDocumentId");

                    b.HasIndex("OwnShipBondId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex(new[] { "Fsid" }, "UQ__Proj_Pro__9C4B07170092463A")
                        .IsUnique();

                    b.ToTable("Proj_ProjUnitDocument", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitExploitJoin", b =>
                {
                    b.Property<int>("ProjUnitExploitJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjUnitExploitJoinId"), 1L, 1);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UnitExploitId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitExploitJoinId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("UnitExploitId");

                    b.ToTable("Proj_ProjUnitExploitJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitInstallTemp", b =>
                {
                    b.Property<int>("ProjUnitInstallTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjUnitInstallTempId"), 1L, 1);

                    b.Property<int?>("InstallTempId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitInstallTempId");

                    b.HasIndex("InstallTempId");

                    b.HasIndex("ProjUnitId");

                    b.ToTable("Proj_ProjUnitInstallTemp", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitOccupTypeJoin", b =>
                {
                    b.Property<int>("ProjUnitOccupTypeJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjUnitOccupTypeJoinId"), 1L, 1);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UnitOccuTypeId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitOccupTypeJoinId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("UnitOccuTypeId");

                    b.ToTable("Proj_ProjUnitOccupTypeJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitOwnerJoin", b =>
                {
                    b.Property<int>("ProjUnitOwnerJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjUnitOwnerJoinId"), 1L, 1);

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsMainOwner")
                        .HasColumnType("bit");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("SharePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ShareValue")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ProjUnitOwnerJoinId");

                    b.HasIndex("ProjUnitId");

                    b.ToTable("Proj_ProjUnitOwnerJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitPermitActivityJoin", b =>
                {
                    b.Property<int>("ProjUnitPermitActivityJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjUnitPermitActivityJoinId"), 1L, 1);

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UnitPermitActivId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitPermitActivityJoinId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("UnitPermitActivId");

                    b.ToTable("Proj_ProjUnitPermitActivityJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitPerspectiveJoin", b =>
                {
                    b.Property<int>("ProjUnitPerspectiveJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjUnitPerspectiveJoinId"), 1L, 1);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Fdata")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FData");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FSId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UnitPerspectiveId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitPerspectiveJoinId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("UnitPerspectiveId");

                    b.HasIndex(new[] { "Fsid" }, "UQ__Proj_Pro__9C4B07177DDE556F")
                        .IsUnique();

                    b.ToTable("Proj_ProjUnitPerspectiveJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitPicture", b =>
                {
                    b.Property<int>("ProjUnitPictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjUnitPictureId"), 1L, 1);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Fdata")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FData");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FSId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitPictureId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex(new[] { "Fsid" }, "UQ__Proj_Pro__9C4B07174432347E")
                        .IsUnique();

                    b.ToTable("Proj_ProjUnitPicture", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitService", b =>
                {
                    b.Property<int>("ProjUnitServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjUnitServiceId"), 1L, 1);

                    b.Property<bool?>("Installed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MeterCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PerUnitOrMeter")
                        .HasColumnType("bit");

                    b.Property<byte?>("PeriodRepeat")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServiceValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServiceValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitServId")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitServiceId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("ReservId");

                    b.HasIndex("UnitServId");

                    b.ToTable("Proj_ProjUnitService", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitSubUnit", b =>
                {
                    b.Property<int>("SubUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubUnitId"), 1L, 1);

                    b.Property<bool?>("CalcByMeter")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("MeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MetersCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("SubUnittypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("SubUnitId");

                    b.HasIndex("ProjUnitId");

                    b.HasIndex("SubUnittypeId");

                    b.ToTable("Proj_ProjUnitSubUnits", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjRealItem", b =>
                {
                    b.Property<int>("ProjectRealItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectRealItemId"), 1L, 1);

                    b.Property<string>("AttributeCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AttributeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RealCost")
                        .HasColumnType("numeric(25,2)");

                    b.Property<decimal?>("SuggestPrice")
                        .HasColumnType("numeric(25,2)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ProjectRealItemId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Proj_RealItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjReInstallment", b =>
                {
                    b.Property<int>("ReInstallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReInstallId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DepositRectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DepositVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscountVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallTempDetailId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsContract")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NewEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("NewInstallVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("NewStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalNotPaidInstallVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ReInstallId");

                    b.ToTable("Proj_ReInstallment", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjReserveUnitDocument", b =>
                {
                    b.Property<int>("ReservDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservDocId"), 1L, 1);

                    b.Property<string>("AttachPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AttachSerial")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<byte[]>("Fdata")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FData");

                    b.Property<Guid>("Fsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FSId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IssuePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OwnShipBondId")
                        .HasColumnType("int");

                    b.Property<string>("PaperNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<string>("SearchTags")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ShelvId")
                        .HasColumnType("int");

                    b.HasKey("ReservDocId");

                    b.HasIndex("ReservId");

                    b.HasIndex(new[] { "Fsid" }, "UQ__Proj_Res__9C4B0717908FFF11")
                        .IsUnique();

                    b.ToTable("Proj_ReserveUnitDocuments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjReserveUnitOwner", b =>
                {
                    b.Property<int>("ReservOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservOwnerId"), 1L, 1);

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ConcessionDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ConcessionDocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsConcession")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMainOwner")
                        .HasColumnType("bit");

                    b.Property<int?>("OriginalResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("OriginalResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("OriginalResourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("SharePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ShareValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitConcessionId")
                        .HasColumnType("int");

                    b.HasKey("ReservOwnerId");

                    b.HasIndex("ReservId");

                    b.ToTable("Proj_ReserveUnitOwners", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjReserveUnitSeller", b =>
                {
                    b.Property<int>("ReservSellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservSellerId"), 1L, 1);

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsMainOwner")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("SharePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ShareValue")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ReservSellerId");

                    b.HasIndex("ReservId");

                    b.ToTable("Proj_ReserveUnitSellers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjReservInstallment", b =>
                {
                    b.Property<int>("ReservInstallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservInstallId"), 1L, 1);

                    b.Property<int?>("DelayDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DelayFine")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DeletReason")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("InstallTempDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InstallValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidBankDeposit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidCash")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidCheques")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PayTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjUnitServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Serial")
                        .HasColumnType("int");

                    b.Property<int?>("UnitServId")
                        .HasColumnType("int");

                    b.HasKey("ReservInstallId");

                    b.HasIndex("ReservId");

                    b.ToTable("Proj_ReservInstallments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTender", b =>
                {
                    b.Property<int>("TenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("ConsultantId")
                        .HasColumnType("int");

                    b.Property<byte?>("ConsultantType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<byte?>("OwnerType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PmId")
                        .HasColumnType("int");

                    b.Property<byte?>("PmType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("SepcConsultantType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecConsultantId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<byte?>("TenderStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TenderId");

                    b.ToTable("Proj_Tenders", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContract", b =>
                {
                    b.Property<int>("TenderContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderContractId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<byte?>("ContractSituation")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ContractStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DownPayment")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DownPaymentAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DownPaymentPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FinalDeliverDate1")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<byte?>("OwnerType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReviewReasonId")
                        .HasColumnType("int");

                    b.Property<byte?>("ReviewStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderQoutationId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAddsValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalAddsValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDiscs")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDiscsValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("TenderContractId")
                        .HasName("PK_Proj_TenderSituation");

                    b.ToTable("Proj_TenderContract", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractAdd", b =>
                {
                    b.Property<int>("TenderContractAddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderContractAddId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AddPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("AddToExtract")
                        .HasColumnType("bit");

                    b.Property<decimal?>("AddValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("AffectContract")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanExceedValu")
                        .HasColumnType("bit");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PercentNum")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TenderContractId")
                        .HasColumnType("int");

                    b.HasKey("TenderContractAddId");

                    b.HasIndex("TenderContractId");

                    b.ToTable("Proj_TenderContractAdds", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractDetail", b =>
                {
                    b.Property<int>("TenderContractDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderContractDetailId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ItemCardCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("ItemStatusDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ParentTenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TenderContractId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderItemId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderOfferDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("TenderContractDetailId");

                    b.HasIndex("TenderContractId");

                    b.ToTable("Proj_TenderContractDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractDiscount", b =>
                {
                    b.Property<int>("TenderContractDiscId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderContractDiscId"), 1L, 1);

                    b.Property<bool?>("Accomulative")
                        .HasColumnType("bit");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool?>("AffectContract")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanExceedValu")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CurrentPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("DiscFromExtract")
                        .HasColumnType("bit");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TenderContractId")
                        .HasColumnType("int");

                    b.HasKey("TenderContractDiscId");

                    b.HasIndex("TenderContractId");

                    b.ToTable("Proj_TenderContractDiscounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorContract", b =>
                {
                    b.Property<int>("ContractorContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractorContractId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConsultAgreeDate")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("ContractSituation")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ContractStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractorId")
                        .HasColumnType("int");

                    b.Property<byte?>("ContractorType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CustomerAgreeDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DownPayment")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DownPaymentAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DownPaymentPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FinalDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<byte?>("OwnerType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReviewReasonId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderContractId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderQoutationId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAddsValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalAddsValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDiscs")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDiscsValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ContractorContractId");

                    b.ToTable("Proj_TenderContractorContract", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorContractAdd", b =>
                {
                    b.Property<int>("ContractorContractAddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractorContractAddId"), 1L, 1);

                    b.Property<bool?>("Accomulative")
                        .HasColumnType("bit");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AddPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("AddToExitract")
                        .HasColumnType("bit");

                    b.Property<decimal?>("AddValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AddValuAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessPartnerAccId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractorContractId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrentPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CurrentValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CurrentValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CustAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpAccountId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VendAccountId")
                        .HasColumnType("int");

                    b.HasKey("ContractorContractAddId");

                    b.HasIndex("ContractorContractId");

                    b.ToTable("Proj_TenderContractorContractAdds", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorContractDetail", b =>
                {
                    b.Property<int>("ContractorContractDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractorContractDetailId"), 1L, 1);

                    b.Property<int?>("ContractorContractId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ItemCardCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("ItemStatusDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ParentTenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TenderContractId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderItemId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderOfferDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ContractorContractDetailId");

                    b.HasIndex("ContractorContractId");

                    b.ToTable("Proj_TenderContractorContractDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorContractDiscount", b =>
                {
                    b.Property<int>("ContractorContractDiscId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractorContractDiscId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool?>("AffectContract")
                        .HasColumnType("bit");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessPartnerAccId")
                        .HasColumnType("int");

                    b.Property<bool?>("CanExceedValu")
                        .HasColumnType("bit");

                    b.Property<int?>("ContractorContractId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustAccountId")
                        .HasColumnType("int");

                    b.Property<bool?>("DiscFromExtract")
                        .HasColumnType("bit");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscValuAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpAccountId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PercentNum")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("VendAccountId")
                        .HasColumnType("int");

                    b.HasKey("ContractorContractDiscId");

                    b.HasIndex("ContractorContractId");

                    b.ToTable("Proj_TenderContractorContractDiscounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorContractSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ContractorContractId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SalesInvDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("ProjTenderContractorContractSearch");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorExitract", b =>
                {
                    b.Property<int>("ContractorExitractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractorExitractId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConsultAgreeDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ContractorAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractorContractId")
                        .HasColumnType("int");

                    b.Property<string>("ContractorHelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ContractorId")
                        .HasColumnType("int");

                    b.Property<byte?>("ContractorType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CustomerAgreeDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FinalDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("OwnerAccountId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerHelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<byte?>("OwnerType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("PlanStatus")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReviewReasonId")
                        .HasColumnType("int");

                    b.Property<byte?>("ReviewStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderQoutationId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAddsValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalAddsValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDiscs")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDiscsValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ContractorExitractId");

                    b.ToTable("Proj_TenderContractorExitract", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorExitractAdd", b =>
                {
                    b.Property<int>("ContractorExitractAddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractorExitractAddId"), 1L, 1);

                    b.Property<bool?>("Accomulative")
                        .HasColumnType("bit");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AddPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AddValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AddValuAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessPartnerAccId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractorExitractId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpAccountId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PreviousValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PreviousValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VendAccountId")
                        .HasColumnType("int");

                    b.HasKey("ContractorExitractAddId");

                    b.HasIndex("ContractorExitractId");

                    b.ToTable("Proj_TenderContractorExitractAdds", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorExitractDetail", b =>
                {
                    b.Property<int>("ContractorExitractDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractorExitractDetailId"), 1L, 1);

                    b.Property<decimal?>("ContractQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ContractQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ContractorExitractId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrentQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CurrentQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CurrentValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DistQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DistQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ItemCardCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ParentTenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrevQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PrevQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PrevReturn")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PreviousRais")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProfitValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisBeforPrevReturn")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RemainQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RemainQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("TenderCat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TenderDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TenderItemPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TenderPlanDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TenderTotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPriceDist")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalSubDist")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkValue")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ContractorExitractDetailId");

                    b.HasIndex("ContractorExitractId");

                    b.ToTable("Proj_TenderContractorExitractDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorExitractDiscount", b =>
                {
                    b.Property<int>("ContractorExitractDiscId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractorExitractDiscId"), 1L, 1);

                    b.Property<bool?>("Accomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("AccomulativePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccomulativeValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccomulativeValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessPartnerAccId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractorExitractId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscValuAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpAccountId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PreviousValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PreviousValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("VendAccountId")
                        .HasColumnType("int");

                    b.HasKey("ContractorExitractDiscId");

                    b.HasIndex("ContractorExitractId");

                    b.ToTable("Proj_TenderContractorExitractDiscounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorExitractSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ContractorExitractId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SalesInvDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("ProjTenderContractorExitractSearch");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SalesInvDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("TenderContractId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("ProjTenderContractSearch");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderExecutionExitract", b =>
                {
                    b.Property<int>("ExecutExitractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExecutExitractId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FinalDeliverDate1")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<byte?>("OwnerType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("PlanStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PmId")
                        .HasColumnType("int");

                    b.Property<byte?>("PmType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReviewReasonId")
                        .HasColumnType("int");

                    b.Property<byte?>("ReviewStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderPlanId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderQoutationId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ExecutExitractId");

                    b.ToTable("Proj_TenderExecutionExitract", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderExecutionExitractDetail", b =>
                {
                    b.Property<int>("ExecutExitractDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExecutExitractDetailId"), 1L, 1);

                    b.Property<decimal?>("CurrentQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CurrentQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DistQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DistQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ExecutExitractId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCardCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ParentTenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrevQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PrevQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PrevReturn")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PreviousRais")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProfitPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProfitValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisBeforPrevReturn")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RemainQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RemainQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("TenderCat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TenderDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TenderItemPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TenderPlanDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TenderTotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPriceDist")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalSubDist")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalSubItem")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ExecutExitractDetailId");

                    b.HasIndex("ExecutExitractId");

                    b.ToTable("Proj_TenderExecutionExitractDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderExecutionExitractSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int>("ExecutExitractId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SalesInvDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("ProjTenderExecutionExitractSearch");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderItem", b =>
                {
                    b.Property<int>("TenderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderItemId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("TenderItemCateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TenderItemId");

                    b.ToTable("Proj_TenderItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderItemsCategory", b =>
                {
                    b.Property<int>("TenderItemCateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderItemCateId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TenderItemCateId");

                    b.ToTable("Proj_TenderItemsCategory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOffer", b =>
                {
                    b.Property<int>("TenderOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderOfferId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("OfferStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<byte?>("OwnerType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReviewReasonId")
                        .HasColumnType("int");

                    b.Property<byte?>("ReviewStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderQoutationId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TenderOfferId");

                    b.ToTable("Proj_TenderOffer", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOfferDetail", b =>
                {
                    b.Property<int>("TenderOfferDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderOfferDetailId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ItemCardCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("ItemStatusDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ParentTenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TenderDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderItemId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderQoutDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("TenderOfferDetailId");

                    b.HasIndex("TenderOfferId");

                    b.ToTable("Proj_TenderOfferDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOfferSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SalesInvDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("TenderOfferId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("ProjTenderOfferSearch");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOwnerExitract", b =>
                {
                    b.Property<int>("OwnerExitractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerExitractId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConsultAgreeDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CustomerAgreeDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FinalDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<byte?>("OwnerType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("PlanStatus")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReviewReasonId")
                        .HasColumnType("int");

                    b.Property<byte?>("ReviewStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderContractId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderQoutationId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAddsValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalAddsValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDiscs")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDiscsValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("OwnerExitractId");

                    b.ToTable("Proj_TenderOwnerExitract", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOwnerExitractAdd", b =>
                {
                    b.Property<int>("OwnerExitractAddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerExitractAddId"), 1L, 1);

                    b.Property<bool?>("Accomulative")
                        .HasColumnType("bit");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AddPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AddValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AddValuAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessPartnerAccId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpAccountId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OwnerExitractId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PreviousValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PreviousValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VendAccountId")
                        .HasColumnType("int");

                    b.HasKey("OwnerExitractAddId");

                    b.HasIndex("OwnerExitractId");

                    b.ToTable("Proj_TenderOwnerExitractAdds", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOwnerExitractDetail", b =>
                {
                    b.Property<int>("OwnerExitractDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerExitractDetailId"), 1L, 1);

                    b.Property<decimal?>("ContractQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ContractQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CurrentQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CurrentQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CurrentValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DistQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DistQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ItemCardCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("OwnerExitractId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentTenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrevQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PrevQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PrevReturn")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PreviousRais")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProfitValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisBeforPrevReturn")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RaisValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RemainQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RemainQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("TenderCat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TenderDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TenderItemPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TenderPlanDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TenderTotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPriceDist")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalSubDist")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkValue")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("OwnerExitractDetailId");

                    b.HasIndex("OwnerExitractId");

                    b.ToTable("Proj_TenderOwnerExitractDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOwnerExitractDiscount", b =>
                {
                    b.Property<int>("OwnerExitractDiscId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerExitractDiscId"), 1L, 1);

                    b.Property<bool?>("Accomulative")
                        .HasColumnType("bit");

                    b.Property<decimal?>("AccomulativePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccomulativeValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccomulativeValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessPartnerAccId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscValuAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("EmpAccountId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OwnerExitractId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PreviousValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PreviousValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("VendAccountId")
                        .HasColumnType("int");

                    b.HasKey("OwnerExitractDiscId");

                    b.HasIndex("OwnerExitractId");

                    b.ToTable("Proj_TenderOwnerExitractDiscounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOwnerExitractSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("OwnerExitractId")
                        .HasColumnType("int");

                    b.Property<string>("SalesInvDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("ProjTenderOwnerExitractSearch");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderPlan", b =>
                {
                    b.Property<int>("TenderPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderPlanId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FinalDeliverDate1")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<byte?>("OwnerType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("PlanStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PmId")
                        .HasColumnType("int");

                    b.Property<byte?>("PmType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReviewReasonId")
                        .HasColumnType("int");

                    b.Property<byte?>("ReviewStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderQoutationId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("TenderPlanId");

                    b.ToTable("Proj_TenderPlan", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderPlanDetail", b =>
                {
                    b.Property<int>("TenderPlanDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderPlanDetailId"), 1L, 1);

                    b.Property<DateTime?>("ActualDeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ItemCardCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("LateDays")
                        .HasColumnType("int");

                    b.Property<int?>("ParentTenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TenderDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderItemId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderPlanId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WorkPercent")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("TenderPlanDetailId");

                    b.HasIndex("TenderPlanId");

                    b.ToTable("Proj_TenderPlanDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderPlanDistribution", b =>
                {
                    b.Property<int>("TenderPlanDistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderPlanDistId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FinalDeliverDate1")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("PlanStatus")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReviewReasonId")
                        .HasColumnType("int");

                    b.Property<byte?>("ReviewStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderPlanId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderQoutationId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TenderPlanDistId");

                    b.ToTable("Proj_TenderPlanDistribution", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderPlanDistributionDetail", b =>
                {
                    b.Property<int>("TenderPlanJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderPlanJoinId"), 1L, 1);

                    b.Property<DateTime?>("EstimateDeliverDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ItemCardCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TenderDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderPlanDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderPlanDistId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("TenderPlanJoinId");

                    b.HasIndex("TenderPlanDistId");

                    b.ToTable("Proj_TenderPlanDistributionDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderPlanSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SalesInvDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("TenderPlanId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("ProjTenderPlanSearch");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderQoutation", b =>
                {
                    b.Property<int>("TenderQoutationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderQoutationId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<byte?>("OwnerType")
                        .HasColumnType("tinyint")
                        .HasComment("1 Customer ,2 Vendor,3 Employee, 4 Account, 5 Business partner");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte?>("QoutationStatus")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReviewReasonId")
                        .HasColumnType("int");

                    b.Property<byte?>("ReviewStatus")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalCostAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfitAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValueAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TenderQoutationId");

                    b.ToTable("Proj_TenderQoutation", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderQoutationDetail", b =>
                {
                    b.Property<int>("TenderQoutDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderQoutDetailId"), 1L, 1);

                    b.Property<decimal?>("AnalyzCat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AnalyzQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AnalyzQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AnalyzTotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AnalyzTotalQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AnalyzTotalQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AnalyzTotalUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ItemCardCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("ItemStatusDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ParentTenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProfitPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProfitValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("TenderCat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TenderDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderItemId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderQoutationId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TenderQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TenderQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TenderTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("TenderQoutDetailId");

                    b.HasIndex("TenderQoutationId");

                    b.ToTable("Proj_TenderQoutationDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderQoutationSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SalesInvDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("TenderQoutationId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("ProjTenderQoutationSearch");
                });

            modelBuilder.Entity("DAL.Models.ProjTendersDetail", b =>
                {
                    b.Property<int>("TenderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderDetailId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("EstimateDeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ItemCardCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("ItemStatusDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ParentTenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TenderId")
                        .HasColumnType("int");

                    b.Property<int?>("TenderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("TenderDetailId");

                    b.HasIndex("TenderId");

                    b.ToTable("Proj_TendersDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjTenderSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<byte?>("ConsultantType")
                        .HasColumnType("tinyint");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("OwnerType")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("PmType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("SepcConsultantType")
                        .HasColumnType("tinyint");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.Property<byte?>("TenderStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("ProjTenderSearch");
                });

            modelBuilder.Entity("DAL.Models.ProjTendersReviewReason", b =>
                {
                    b.Property<int>("ReviewReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewReasonId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ReviewReasonId");

                    b.ToTable("Proj_TendersReviewReasons", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjUnitConcession", b =>
                {
                    b.Property<int>("UnitConcessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitConcessionId"), 1L, 1);

                    b.Property<decimal?>("ActualSalesPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commission")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ConcessionFee")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallTempDetailId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaidInstallments")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidBeforeConcession")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnitConcessionId");

                    b.ToTable("Proj_UnitConcession", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjUnitHistoryLog", b =>
                {
                    b.Property<int>("ProjUnitHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjUnitHistoryId"), 1L, 1);

                    b.Property<string>("LogActionDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("TableEntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("TableEntityIdName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("ProjUnitHistoryId");

                    b.ToTable("Proj_UnitHistoryLog", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjUnitReplacement", b =>
                {
                    b.Property<int>("UnitReplacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitReplacId"), 1L, 1);

                    b.Property<decimal?>("ActualSalesPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DepositRectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DepositVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallTempDetailId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NewInstallVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OldActualSalesPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("OldProjUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalNotPaidInstallVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("UnitReplacId");

                    b.ToTable("Proj_UnitReplacement", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjUnitReservation", b =>
                {
                    b.Property<int>("ReservId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservId"), 1L, 1);

                    b.Property<decimal?>("ActualSalesPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("CommissionPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CommissionValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ContractBookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ContractTrNo")
                        .HasColumnType("int");

                    b.Property<int?>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Cost3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustomerBalace")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("FeesPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("FeesValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FinishMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("FinishValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("GaragCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("InstallId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallTempId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsContract")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCustBalancInstall")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRental")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LeavePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LeaveValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaidInstallments")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PaidInCash")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PayStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProjUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("RoundType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((0))")
                        .HasComment("0 without,1=10,2=100,3=1000,4=10000");

                    b.Property<int?>("SalesEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalInstallments")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalUnitArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("UnitArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ReservId");

                    b.ToTable("Proj_UnitReservation", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjUnitReservationGuarantor", b =>
                {
                    b.Property<int>("GuarantorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuarantorId"), 1L, 1);

                    b.Property<int?>("AccountId1")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId2")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId3")
                        .HasColumnType("int");

                    b.Property<string>("Bank1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Bank2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankAccNo3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactAddress2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactAddress3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactEmail1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactEmail2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactEmail3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPhone1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone3")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone4")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactPhone5")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId3")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Idno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IDNo");

                    b.Property<bool?>("Isprimary")
                        .HasColumnType("bit");

                    b.Property<string>("PassPortNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.HasKey("GuarantorId");

                    b.HasIndex("ReservId");

                    b.ToTable("Proj_UnitReservationGuarantors", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ProjUnitReservationHistory", b =>
                {
                    b.Property<int>("PeriodIncreasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodIncreasId"), 1L, 1);

                    b.Property<int?>("ExtendPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("ExtendSubPeriod")
                        .HasColumnType("int");

                    b.Property<byte?>("ExtendType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("IncreaseValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsRental")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NextTrDateFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("NextTrDateTo")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PrevTrDateFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PrevTrDateTo")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ReservId")
                        .HasColumnType("int");

                    b.HasKey("PeriodIncreasId");

                    b.ToTable("Proj_UnitReservationHistory", (string)null);
                });

            modelBuilder.Entity("DAL.Models.PurInvVendSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PurInvId")
                        .HasColumnType("int");

                    b.Property<string>("PurOrderDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("PurInvVendSearch");
                });

            modelBuilder.Entity("DAL.Models.PurOrderVendor", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("PurOrderVendor");
                });

            modelBuilder.Entity("DAL.Models.PurRequestVendor", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PurOrderReqId")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("PurRequestVendor");
                });

            modelBuilder.Entity("DAL.Models.QualityCategory", b =>
                {
                    b.Property<int>("QualityCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QualityCatId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DamagDegree")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("QualityCatId")
                        .HasName("PK_Prod_QualityCategory");

                    b.ToTable("Quality_Categories", (string)null);
                });

            modelBuilder.Entity("DAL.Models.QualityItemDeliverDetail", b =>
                {
                    b.Property<int>("ItemDeliverDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemDeliverDetailId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("DoublCheckQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DoublCheckQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DoubleCleanQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecutedQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemDeliverId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemRecQualityDetailId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("MissedMachinQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MissedMachinQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MissedQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MissedQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NormalCleanQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NormalQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NormalQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceDoubleClean")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceNormal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ProdItemRecDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("QualityCatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RejectedQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RejectedQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ReturnQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReturnQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDoubleClean")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalNormal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ItemDeliverDetailId");

                    b.HasIndex("ItemDeliverId");

                    b.ToTable("Quality_ItemDeliverDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.QualityItemDelivery", b =>
                {
                    b.Property<int>("ItemDeliverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemDeliverId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocBarCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("NotificationSent")
                        .HasColumnType("bit");

                    b.Property<int?>("PackageCount")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("ItemDeliverId");

                    b.ToTable("Quality_ItemDelivery", (string)null);
                });

            modelBuilder.Entity("DAL.Models.QualityItemDeliveryPackage", b =>
                {
                    b.Property<int>("ItemDeliceryPackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemDeliceryPackId"), 1L, 1);

                    b.Property<long?>("AlterSerial")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ItemDeliverId")
                        .HasColumnType("int");

                    b.Property<int?>("PackageSerial")
                        .HasColumnType("int");

                    b.HasKey("ItemDeliceryPackId");

                    b.HasIndex("ItemDeliverId");

                    b.ToTable("Quality_ItemDeliveryPackages", (string)null);
                });

            modelBuilder.Entity("DAL.Models.QualityItemRecCheck", b =>
                {
                    b.Property<int>("ItemRecQualityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemRecQualityId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocBarCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("NotificationSent")
                        .HasColumnType("bit");

                    b.Property<int?>("PackageCount")
                        .HasColumnType("int");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProdItemRecId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ItemRecQualityId")
                        .HasName("PK_prod_ItemRecQualityCheck");

                    b.ToTable("Quality_ItemRecCheck", (string)null);
                });

            modelBuilder.Entity("DAL.Models.QualityItemRecCheckDetail", b =>
                {
                    b.Property<int>("ItemRecQualityDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemRecQualityDetailId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("DoublCheckQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DoublCheckQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecutedQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("MissedQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MissedQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NormalQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NormalQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceDoubleClean")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceNormal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("QualityCatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RejectedQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("RejectedQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("TotalDoubleClean")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalNormal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ItemRecQualityDetailId");

                    b.HasIndex("ItemRecQualityId");

                    b.ToTable("Quality_ItemRecCheckDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.QualityItemReceivType", b =>
                {
                    b.Property<int>("ItemRecTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemRecTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ItemRecTypeId")
                        .HasName("PK_Prod_ItemReceivTypes");

                    b.ToTable("Quality_ItemReceivTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.QualityItemRecieve", b =>
                {
                    b.Property<int>("ProdItemRecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdItemRecId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPos")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ItemRecTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool?>("NotificationSent")
                        .HasColumnType("bit");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ProdItemRecId")
                        .HasName("PK_Prod_ItemRecieve");

                    b.ToTable("Quality_ItemRecieve", (string)null);
                });

            modelBuilder.Entity("DAL.Models.QualityItemRecieveDetail", b =>
                {
                    b.Property<int>("ProdItemRecDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdItemRecDetailId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("ExecutedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExecutedQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ItemCardDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemCardDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("MissedQtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MissedQuantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ProdItemRecId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ProdItemRecDetailId")
                        .HasName("PK_Prod_ItemRecieveDetails");

                    b.HasIndex("ProdItemRecId");

                    b.ToTable("Quality_ItemRecieveDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.QualityItemRecPackage", b =>
                {
                    b.Property<int>("ItemRecPackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemRecPackId"), 1L, 1);

                    b.Property<long?>("AlterSerial")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<int?>("PackageSerial")
                        .HasColumnType("int");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("ItemRecPackId");

                    b.HasIndex("ItemRecQualityId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Quality_ItemRecPackages", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ReciNotSearch", b =>
                {
                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BankAccNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("BankNoticId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BankNoticeTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BankNoticeTrNo")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("BoxCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("Cc")
                        .HasColumnType("int")
                        .HasColumnName("cc");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("CheckType")
                        .HasColumnType("tinyint");

                    b.Property<string>("ClientAccNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Desca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESCA")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsKembiala")
                        .HasColumnType("bit");

                    b.Property<int?>("KeeperId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KeeperTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("KeeperTrNo")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("RectId")
                        .HasColumnType("int");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value10")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value10BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value1BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value2BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value3BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value4BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value5BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value6BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value7")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value7BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value8")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value8BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value9")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Value9BeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("ReciNotSearch");
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrder", b =>
                {
                    b.Property<int>("RepairId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId")
                        .HasColumnType("int");

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipId")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit")
                        .HasComment("True Closed ;  False  Not Closed");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeToLeav")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int")
                        .HasComment("ItemCardId");

                    b.HasKey("RepairId");

                    b.ToTable("Repair_JobOrder", (string)null);
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrderComment", b =>
                {
                    b.Property<int>("RepairCommentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairCommentsId"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("EmpIdComBy")
                        .HasColumnType("int");

                    b.Property<int?>("RepairId")
                        .HasColumnType("int");

                    b.HasKey("RepairCommentsId");

                    b.HasIndex("RepairId");

                    b.ToTable("Repair_JobOrderComments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrderEmp", b =>
                {
                    b.Property<int>("RepairEmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairEmpId"), 1L, 1);

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RepairId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ServiceValue")
                        .HasColumnType("decimal(25,3)");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("RepairEmpId");

                    b.HasIndex("RepairId");

                    b.ToTable("Repair_JobOrderEmps", (string)null);
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrderItem", b =>
                {
                    b.Property<int>("RepairItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairItemsId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RepairId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RequestedMeter")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("RepairItemsId");

                    b.HasIndex("RepairId");

                    b.ToTable("Repair_JobOrderItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrderScrapItem", b =>
                {
                    b.Property<int>("RepairScrapItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairScrapItemId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("BatchNumberFifoOrLifo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverageUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<decimal?>("FifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCostUnit");

                    b.Property<bool?>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemPatchPartitionId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostUnit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<decimal?>("LifocostUnit")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCostUnit");

                    b.Property<int?>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceAfterRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PriceEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RepairId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitIdEstimat")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitRateEstimat")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("RepairScrapItemId");

                    b.HasIndex("RepairId");

                    b.ToTable("Repair_JobOrderScrapItems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrederExpense", b =>
                {
                    b.Property<int>("RepairExpensesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairExpensesId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BillOfMaterialId")
                        .HasColumnType("int");

                    b.Property<bool?>("BitOnClient")
                        .HasColumnType("bit")
                        .HasColumnName("bitOnClient");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpensValue")
                        .HasColumnType("decimal(25,3)");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Months")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RepairId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeBeforFormat")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte?>("TimeUnit")
                        .HasColumnType("tinyint")
                        .HasComment("1 Minutes, 2 Hours,3 Days, 4 Months");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("RepairExpensesId");

                    b.HasIndex("RepairId");

                    b.ToTable("Repair_JobOrederExpenses", (string)null);
                });

            modelBuilder.Entity("DAL.Models.RetPurVendSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("DocTrNoPurchasInv")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("retPurVendSearch");
                });

            modelBuilder.Entity("DAL.Models.RetSaleSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<string>("SalesInvDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("retSaleSearch");
                });

            modelBuilder.Entity("DAL.Models.ReturnSalesReqSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("ReqsalesId")
                        .HasColumnType("int");

                    b.Property<string>("SalesInvDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("ReturnSalesReqSearch");
                });

            modelBuilder.Entity("DAL.Models.SalesInvCustSearch", b =>
                {
                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustBranchName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Desc1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Desc2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("InvId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsHold")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPos")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PayMethodDatafield")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("PayMethodPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PayMethodValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SalesOfferDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SalesInvCustSearch");
                });

            modelBuilder.Entity("DAL.Models.SalesOfferCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SalesOfferCust");
                });

            modelBuilder.Entity("DAL.Models.SalesOrderCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SalesOrderCust");
                });

            modelBuilder.Entity("DAL.Models.SearchAdjustMent", b =>
                {
                    b.Property<string>("AdjustSourceName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AdjustSourceType")
                        .IsRequired()
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("varchar(19)");

                    b.Property<string>("AdjustType")
                        .IsRequired()
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("varchar(31)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("SearchAdjustMent");
                });

            modelBuilder.Entity("DAL.Models.SearchAssetSetting", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchAssetSettings");
                });

            modelBuilder.Entity("DAL.Models.SearchAssetTermination", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AssetCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("DeprValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("InstallMentCount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsProduction")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastDeprDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RemainInstallments")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchAssetTermination");
                });

            modelBuilder.Entity("DAL.Models.SearchAttendanceDoc", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PeriodName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PeriodName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("SubPeriodCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalVacsDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalVacsHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalWorkDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalWorkHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchAttendanceDoc");
                });

            modelBuilder.Entity("DAL.Models.SearchBankNotice", b =>
                {
                    b.Property<decimal?>("BankExpenses")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BankNoticDetailId")
                        .HasColumnType("int");

                    b.Property<int>("BankNoticId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("Canceled")
                        .HasColumnType("bit");

                    b.Property<string>("Cc")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("cc");

                    b.Property<string>("Cc2")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cc2");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("CollectDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("IsCollected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKembiala")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTransferred")
                        .HasColumnType("bit");

                    b.Property<string>("KeeperDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int?>("KeeperId")
                        .HasColumnType("int");

                    b.Property<string>("KeeperNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaderDire")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<string>("RecDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<int?>("RefNo")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalCheques")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<byte?>("TranType")
                        .HasColumnType("tinyint");

                    b.Property<string>("TranTypeDesc")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("TransferredAte")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("SearchBankNotice");
                });

            modelBuilder.Entity("DAL.Models.SearchBoxTransferNote", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<bool?>("IsBox")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm1")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StrCustm2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm2")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchBoxTransferNote");
                });

            modelBuilder.Entity("DAL.Models.SearchDeliveRetVend", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("DeliverId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("SearchDeliveRetVend");
                });

            modelBuilder.Entity("DAL.Models.SearchDepreciationDoc", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<DateTime?>("EndingDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FinancialIntervalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FinancialYearNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("FinancialYearNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialYearsCode")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MonthNameA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("MonthNameE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("StartingFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalDeprVal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchDepreciationDoc");
                });

            modelBuilder.Entity("DAL.Models.SearchEmpActivity", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PeriodName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PeriodName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("SubPeriodCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalVacsDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalVacsHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalWorkDays")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalWorkHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchEmpActivity");
                });

            modelBuilder.Entity("DAL.Models.SearchEmpDocument", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchEmpDocuments");
                });

            modelBuilder.Entity("DAL.Models.SearchEmpLoan", b =>
                {
                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("InstallmentValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Installments")
                        .HasColumnType("int");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("LastInstallmentValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("LoanCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("LoanValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.ToView("SearchEmpLoan");
                });

            modelBuilder.Entity("DAL.Models.SearchEmpLoanRequest", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("EmpLoanBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("InstallmentValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Installments")
                        .HasColumnType("int");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("LastInstallmentValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LoanValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchEmpLoanRequest");
                });

            modelBuilder.Entity("DAL.Models.SearchEmpMovePromotion", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("NewTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchEmpMovePromotion");
                });

            modelBuilder.Entity("DAL.Models.SearchEmpVacation", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchEmpVacation");
                });

            modelBuilder.Entity("DAL.Models.SearchItemStockAdjustment", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<bool?>("IsReevaluation")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStockOpenning")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PartCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartDescE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("StockAdjustId")
                        .HasColumnType("int");

                    b.Property<decimal?>("StockTotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchItemStockAdjustment");
                });

            modelBuilder.Entity("DAL.Models.SearchJobOrderEmpCostDoc", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("JobOrderDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchJobOrderEmpCostDoc");
                });

            modelBuilder.Entity("DAL.Models.SearchJobOrderEquipCostDoc", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("JobOrderDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchJobOrderEquipCostDoc");
                });

            modelBuilder.Entity("DAL.Models.SearchJurnalEntry", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<bool?>("IsOpenning")
                        .HasColumnType("bit");

                    b.Property<string>("JurnalDesc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("JurnalId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchJurnalEntry");
                });

            modelBuilder.Entity("DAL.Models.SearchKeeper", b =>
                {
                    b.Property<string>("BankDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Cc")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("cc");

                    b.Property<string>("Cc2")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cc2");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("CheckType")
                        .HasColumnType("tinyint");

                    b.Property<string>("ClientAccNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CollectDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsCollected")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKembiala")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<int>("KeeperId")
                        .HasColumnType("int");

                    b.Property<string>("KeeperNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("RecTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("RecTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchKeepers");
                });

            modelBuilder.Entity("DAL.Models.SearchLeavePermision", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("HoursCount")
                        .HasColumnType("numeric(18,5)");

                    b.Property<DateTime?>("Jcode")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("JCode");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchLeavePermision");
                });

            modelBuilder.Entity("DAL.Models.SearchLeavPermissionRequest", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("HoursCount")
                        .HasColumnType("numeric(18,5)");

                    b.Property<DateTime?>("Jcode")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("JCode");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchLeavPermissionRequest");
                });

            modelBuilder.Entity("DAL.Models.SearchPassPort", b =>
                {
                    b.Property<DateTime?>("AcceptAgeFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("AcceptAgeTo")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CityCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CustSerial")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("EmbassyDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("Execluded")
                        .HasColumnType("bit");

                    b.Property<string>("FirmName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirmOwnerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullNameen")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IdexpiryDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("IDExpiryDate");

                    b.Property<DateTime?>("IdissueDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("IDIssueDate");

                    b.Property<string>("Idmage1")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("IDmage1");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("KidsNo")
                        .HasColumnType("tinyint");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("MaritalStatus")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MilitaryService")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name2en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name3en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name4en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name6")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name6en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name7")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name7en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nameen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassOwnerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PassPortExpiry")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassPortImage")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("PassportExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassportIssuePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassportNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Phone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Phone3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SeasonCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<string>("SeasonName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SeasonName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TaxRefNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TestMandatory")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("WfpassPortId")
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortId");

                    b.ToView("SearchPassPorts");
                });

            modelBuilder.Entity("DAL.Models.SearchPettycash", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("PettycashId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalFilteredPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchPettycash");
                });

            modelBuilder.Entity("DAL.Models.SearchPrintPricing", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CutterHeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CutterLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CutterMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CutterWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<decimal?>("Forms")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("GofferMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InOrderHeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InOrderLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InOrderWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ItemBatchCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchName1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchName2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("ItemPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Layers")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("OutOrderHeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OutOrderLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OutOrderWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OuterBoxesCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Palets")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PartsBySheet")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PartsCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PrinPriceId")
                        .HasColumnType("int");

                    b.Property<int?>("PrinQoutId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurpuraMetricLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPrepare")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProfit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalSales")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Transportation")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Zincs")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("SearchPrintPricing");
                });

            modelBuilder.Entity("DAL.Models.SearchPrintQoutation", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<bool?>("IsDraw")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSample")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("OuterBoxesCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PartsCount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PrinQoutId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchPrintQoutation");
                });

            modelBuilder.Entity("DAL.Models.SearchProductionOrder", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("ProductionOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitNam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("UnittRate")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("SearchProductionOrder");
                });

            modelBuilder.Entity("DAL.Models.SearchReqOfQoutation", b =>
                {
                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AnalyticalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AnalyticalCodeName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("AnalyticalCodeName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CodeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("CodeLevelType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Commodity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<decimal?>("Equipment")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PortOfDischarge")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PortOfLoading")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Recommendation")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Shipper")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("Stopped")
                        .HasColumnType("bit");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TargetRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("TruckingFrom")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TruckingTo")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("SearchReqOfQoutation");
                });

            modelBuilder.Entity("DAL.Models.SearchRewardAndPenalty", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("ExecutDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsReward")
                        .HasColumnType("bit");

                    b.Property<bool?>("Jcode")
                        .HasColumnType("bit")
                        .HasColumnName("JCode");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SalaryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchRewardAndPenalty");
                });

            modelBuilder.Entity("DAL.Models.SearchSalaryIssueDoc", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("NetValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("SubPeriodCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchSalaryIssueDoc");
                });

            modelBuilder.Entity("DAL.Models.SearchSalesOfferRequest", b =>
                {
                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("SalesOfferReqId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchSalesOfferRequest");
                });

            modelBuilder.Entity("DAL.Models.SearchServiceRequest", b =>
                {
                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AnalyticalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AnalyticalCodeName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("AnalyticalCodeName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("BrandName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CapcityDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CloseReason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CodeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("CodeLevelType")
                        .HasColumnType("tinyint");

                    b.Property<string>("CountryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<byte?>("ExemptionPercnt")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("InWarranty")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MaintenanceTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ModelNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductsTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("QoutationPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("RegionNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ReqResourceName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("RequestStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("SerialNo1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SerialNo2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Stopped")
                        .HasColumnType("bit");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VistitDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("WarrantyEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Wname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WName1")
                        .UseCollation("Arabic_CI_AI");

                    b.ToView("SearchServiceRequest");
                });

            modelBuilder.Entity("DAL.Models.SearchShippingDeclaration", b =>
                {
                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AnalyticalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AnalyticalCodeName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("AnalyticalCodeName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("BillOfLading")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CodeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("CodeLevelType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Consignee")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContainersDry")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ContainersDRY");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("FreightPayableAt")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GrossWeightTons")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("NetWeightTons")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PortOfDischarge")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PortOfLoading")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ReqOfQoutationDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<DateTime?>("ReqOfQoutationTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Shipper")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("Stopped")
                        .HasColumnType("bit");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VesselName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.ToView("SearchShippingDeclaration");
                });

            modelBuilder.Entity("DAL.Models.SearchStockTransferNote", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PartFrom")
                        .HasColumnType("int");

                    b.Property<int?>("PartTo")
                        .HasColumnType("int");

                    b.Property<string>("PartitionFrom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartitionTo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<int>("TranId")
                        .HasColumnType("int");

                    b.ToView("SearchStockTransferNote");
                });

            modelBuilder.Entity("DAL.Models.SearchStockTransferNoteRequest", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<bool>("Executed")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PartFrom")
                        .HasColumnType("int");

                    b.Property<int?>("PartTo")
                        .HasColumnType("int");

                    b.Property<string>("PartitionFrom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartitionTo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<int>("TranReqId")
                        .HasColumnType("int");

                    b.ToView("SearchStockTransferNoteRequest");
                });

            modelBuilder.Entity("DAL.Models.SearchTermination", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("ServiceEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchTermination");
                });

            modelBuilder.Entity("DAL.Models.SearchTrip", b =>
                {
                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Agent")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Approver")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ArrivedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CityCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeparturDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeparturTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DepartureBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("Guid")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Names")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OperatorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Others")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("PersonsCount")
                        .HasColumnType("tinyint");

                    b.Property<string>("Program")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<string>("TourGuideName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TourLeaderName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<bool?>("Visa")
                        .HasColumnType("bit");

                    b.ToView("SearchTrips");
                });

            modelBuilder.Entity("DAL.Models.SearchVacationDoc", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("NetDaysCount")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchVacationDoc");
                });

            modelBuilder.Entity("DAL.Models.SearchVacationEdit", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("NetDaysCount")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchVacationEdit");
                });

            modelBuilder.Entity("DAL.Models.SearchVacationRequest", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("DayCount")
                        .HasColumnType("int");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("NetDaysCount")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("SearchVacationRequest");
                });

            modelBuilder.Entity("DAL.Models.SearchVehicleJobOrder", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("BodyNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("ContainerNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ContainersCount")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("DriverCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DriverLicense")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DriverName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DriverName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("EndCounter")
                        .HasColumnType("bigint");

                    b.Property<string>("GarageCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("GarageName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("GarageName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("LicenseDescription")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("RegNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("StartCounter")
                        .HasColumnType("bigint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TimeToLeav")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VehicleCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("VehicleJobOrderName1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VehicleJobOrderName2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VehicleName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VehicleName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VheicleJobOrderTypeName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("VjorderId")
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    b.Property<string>("VorderTypeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VOrderTypeCode")
                        .UseCollation("Arabic_CI_AI");

                    b.ToView("SearchVehicleJobOrder");
                });

            modelBuilder.Entity("DAL.Models.SearchVehicleMovement", b =>
                {
                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AnCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AnName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetTime")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("SearchVehicleMovement");
                });

            modelBuilder.Entity("DAL.Models.SearchVehicleRenalContract", b =>
                {
                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<long?>("AllowanceCounter")
                        .HasColumnType("bigint");

                    b.Property<string>("BodyNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<long?>("ConsumedCounter")
                        .HasColumnType("bigint");

                    b.Property<int?>("ContractDays")
                        .HasColumnType("int");

                    b.Property<long?>("CounterNo")
                        .HasColumnType("bigint");

                    b.Property<string>("CustId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CustID")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("CustomerCarLicenseExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CustomerCarLicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CustomerCarLicenseIssuePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerCarLicenseNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CustomerDateOfBirth")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("CustomerInternationalLicense")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CustomerPassPortIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CustomerPassPortIssuePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerPassPortNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("DailyCounter")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DayPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DeliveryCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<decimal?>("DriverCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DriverName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DriverName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<long?>("EndCounter")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpectedStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<long?>("ExtraCounter")
                        .HasColumnType("bigint");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("FirstDriverCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("FirstDriverDateOfBirth")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FirstDriverDriverLicense")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstDriverId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("FirstDriverID");

                    b.Property<string>("FirstDriverLicenseDescription")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("FirstDriverLicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FirstDriverLicenseLegalPlaceas")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("FirstDriverLicenseRenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("FuelCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("FuelIn")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("FuelOut")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("GetOutDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("HotelCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("HotelName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("HotelName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("HotelRoom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("InsuranceValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaintenanceCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MotorNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("OwnerAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PassPort")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("PaymentMethod")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Profit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("RealStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("RegNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SecondDriverCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SecondDriverName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SecondDriverName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("StartCounter")
                        .HasColumnType("bigint");

                    b.Property<long?>("StartCounterNo")
                        .HasColumnType("bigint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<string>("ThirdDriverCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ThirdDriverName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ThirdDriverName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalCostBeforeCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPaidReciept")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPayment")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPurchInv")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalSalesInv")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Vat")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("VAT");

                    b.Property<string>("VehicleCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("VehicleName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VehicleName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("VisaAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("VisaApproved")
                        .HasColumnType("bit");

                    b.Property<string>("VisaCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("VisaExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("VisaNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("YearModel")
                        .HasColumnType("int");

                    b.ToView("SearchVehicleRenalContract");
                });

            modelBuilder.Entity("DAL.Models.SearchWeightCard", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Weight1Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Weight2Date")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("WeightQty1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeightQty2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeightQtyDiff")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("SearchWeightCard");
                });

            modelBuilder.Entity("DAL.Models.SrAccomodation", b =>
                {
                    b.Property<int>("AccomodationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccomodationId"), 1L, 1);

                    b.Property<byte?>("AccomodationType")
                        .HasColumnType("tinyint")
                        .HasComment("1 RO,2 BB,3 HB,4 FB");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.HasKey("AccomodationId");

                    b.HasIndex("HotelId");

                    b.HasIndex("TripId");

                    b.ToTable("Sr_Accomodation", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrBrand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BrandId");

                    b.ToTable("Sr_Brands", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrComplaint", b =>
                {
                    b.Property<int>("ComId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ComID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComId"), 1L, 1);

                    b.Property<string>("Add1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComDesc")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ComName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ComName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ComSolution")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ComId");

                    b.ToTable("Sr_Complaints", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrContainerType", b =>
                {
                    b.Property<int>("ContainerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContainerTypeId"), 1L, 1);

                    b.Property<string>("ContainerCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Height")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("UseDesc")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("VehicleShapeId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleTypId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("ContainerTypeId");

                    b.ToTable("Sr_ContainerTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrDriver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DriverCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DriverLicense")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ID");

                    b.Property<string>("LicenseDescription")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("LicenseIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("LicenseLegalPlace")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("LicenseRenewalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PassPort")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("DriverId");

                    b.ToTable("Sr_Drivers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrEmpServicType", b =>
                {
                    b.Property<int>("SrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SR_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SrId"), 1L, 1);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("SrTypId")
                        .HasColumnType("int")
                        .HasColumnName("SrTypID");

                    b.HasKey("SrId");

                    b.HasIndex("EmpId");

                    b.HasIndex("SrTypId");

                    b.ToTable("Sr_EmpServicTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrExtension", b =>
                {
                    b.Property<int>("ExtensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtensionId"), 1L, 1);

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<byte?>("Number")
                        .HasColumnType("tinyint")
                        .HasComment("single, double, Trible");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.HasKey("ExtensionId");

                    b.HasIndex("CityId");

                    b.HasIndex("HotelId");

                    b.HasIndex("TripId");

                    b.ToTable("Sr_Extension", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrFlateRate", b =>
                {
                    b.Property<int>("FlatRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlatRateId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("HourCostRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("HourPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("FlatRateId");

                    b.ToTable("Sr_FlateRate", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrFlight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"), 1L, 1);

                    b.Property<DateTime?>("Arrival")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("CityIdfrom")
                        .HasColumnType("int")
                        .HasColumnName("CityIDFrom");

                    b.Property<int?>("CityIdto")
                        .HasColumnType("int")
                        .HasColumnName("CityIDTo");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Departure")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FlightCompany")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PlaceFrom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PlaceTo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.HasKey("FlightId");

                    b.HasIndex("TripId");

                    b.ToTable("Sr_Flight", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrGarage", b =>
                {
                    b.Property<int>("GarageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GarageId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("GarageCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("GarageId");

                    b.ToTable("Sr_Garage", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrHarbor", b =>
                {
                    b.Property<int>("HarborId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HarborId"), 1L, 1);

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("HarborCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("HarborId");

                    b.ToTable("Sr_Harbors", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrHotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Bbcost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("BBCost");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("DoubleRoomCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DoubleRoomCount")
                        .HasColumnType("int");

                    b.Property<int?>("ElevatorNum")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Fbcost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FBCost");

                    b.Property<decimal?>("Hbcost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("HBCost");

                    b.Property<string>("HotelCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("QuadRoomCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("QuadRoomCount")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("RoomSingleCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RoomSingleCount")
                        .HasColumnType("int");

                    b.Property<bool?>("RoomsWithWc")
                        .HasColumnType("bit")
                        .HasColumnName("RoomsWithWC");

                    b.Property<decimal?>("SpecialRoomCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("SpecialRoomCount")
                        .HasColumnType("int");

                    b.Property<byte?>("Stars")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("SuitRoomCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("SuitRoomCount")
                        .HasColumnType("int");

                    b.Property<bool?>("SupportBb")
                        .HasColumnType("bit")
                        .HasColumnName("SupportBB");

                    b.Property<bool?>("SupportFb")
                        .HasColumnType("bit")
                        .HasColumnName("SupportFB");

                    b.Property<bool?>("SupportHb")
                        .HasColumnType("bit")
                        .HasColumnName("SupportHB");

                    b.Property<bool?>("SupportRo")
                        .HasColumnType("bit")
                        .HasColumnName("SupportRO");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("TribleRoomCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TribleRoomCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("HotelId")
                        .HasName("PK_Sr_Hoterls");

                    b.HasIndex("CityId");

                    b.ToTable("Sr_Hotels", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrJobAdditionalCost", b =>
                {
                    b.Property<int>("AddCostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddCostId"), 1L, 1);

                    b.Property<decimal?>("AdCostValue")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("AddCostDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.HasKey("AddCostId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobAdditionalCost", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrJobComment", b =>
                {
                    b.Property<int>("JobComentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobComentId"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("EmpIdComBy")
                        .HasColumnType("int");

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.HasKey("JobComentId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobComments", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrJobExtrnalExpen", b =>
                {
                    b.Property<int>("JobExpensId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobExpensId"), 1L, 1);

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Expdescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("EXPDescription");

                    b.Property<decimal?>("Expvalue")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("EXPValue");

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsibleEmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalHours")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("JobExpensId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobExtrnalExpens", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrJobFile", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"), 1L, 1);

                    b.Property<byte[]>("Binary")
                        .HasMaxLength(4000)
                        .HasColumnType("binary(4000)")
                        .HasColumnName("binary")
                        .IsFixedLength();

                    b.Property<string>("FileDesc")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FileName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.HasKey("FileId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobFiles", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrJobOrder", b =>
                {
                    b.Property<int>("JorderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JorderId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustId")
                        .HasColumnType("int");

                    b.Property<bool?>("CustSatisfy")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Expense")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("FreeService")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("NetValue")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("OtherCosts")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int?>("ReciptionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SparePrts")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int?>("SrTypId")
                        .HasColumnType("int")
                        .HasColumnName("SrTypID");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Wages")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("JorderId");

                    b.HasIndex("ReciptionId");

                    b.HasIndex("SrTypId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Sr_JobOrder", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrJobSpart", b =>
                {
                    b.Property<int>("JobSpareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobSpareId"), 1L, 1);

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Spdescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SPDescription");

                    b.Property<decimal?>("Spvalue")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("SPValue");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.HasKey("JobSpareId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobSparts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrJobSwage", b =>
                {
                    b.Property<int>("JobStechId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobSTechId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobStechId"), 1L, 1);

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("HourlyCostRate")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int?>("JorderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalHours")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Wdescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("WDescription");

                    b.Property<decimal?>("Wvalue")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("WValue");

                    b.HasKey("JobStechId");

                    b.HasIndex("JorderId");

                    b.ToTable("Sr_JobSWages", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrMalfunction", b =>
                {
                    b.Property<int>("MalFunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MalFunctionId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("MalFunctionId");

                    b.ToTable("Sr_Malfunctions", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrProductsType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ProductTypeId");

                    b.ToTable("Sr_ProductsTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrProgram", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Days")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Mtscruze")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MTSCruze");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("Number")
                        .HasColumnType("tinyint")
                        .HasComment("single, double, Trible");

                    b.Property<string>("ProgramCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("ProgramId");

                    b.ToTable("Sr_Programs", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrReceptionImage", b =>
                {
                    b.Property<int>("RecImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecImgId"), 1L, 1);

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("ImgDesc")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ReciptionId")
                        .HasColumnType("int");

                    b.HasKey("RecImgId");

                    b.HasIndex("ReciptionId");

                    b.ToTable("Sr_ReceptionImages", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrReciption", b =>
                {
                    b.Property<int>("ReciptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReciptionId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CustId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MileAge")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int?>("RecevedBy")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Vid")
                        .HasColumnType("int")
                        .HasColumnName("VID");

                    b.HasKey("ReciptionId");

                    b.ToTable("Sr_Reciption", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrReciptionDetail", b =>
                {
                    b.Property<int>("RecipDetlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipDetlId"), 1L, 1);

                    b.Property<int?>("ComId")
                        .HasColumnType("int")
                        .HasColumnName("ComID");

                    b.Property<string>("CustRequest")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ReciptionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte?>("Serial")
                        .HasColumnType("tinyint");

                    b.HasKey("RecipDetlId");

                    b.HasIndex("ComId");

                    b.HasIndex("ReciptionId");

                    b.ToTable("Sr_ReciptionDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrReqOfQoutation", b =>
                {
                    b.Property<int>("RoqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoqId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commodity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Equipment")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PortOfDischarge")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PortOfLoading")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Recommendation")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("Shipper")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TargetRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("TruckingFrom")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TruckingTo")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ValidityDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("RoqId");

                    b.ToTable("Sr_ReqOfQoutation", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrServiceDistribution", b =>
                {
                    b.Property<int>("SerDistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerDistId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("VisitDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("SerDistId");

                    b.ToTable("Sr_ServiceDistribution", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrServiceDistributionDetail", b =>
                {
                    b.Property<int>("SerDistDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerDistDetailId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId1")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId10")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId11")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId12")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId13")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId14")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId15")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId2")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId3")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId4")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId5")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId6")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId7")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId8")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId9")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EstimateEndTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("EstimateStartTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RealEndTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("RealStartTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("SerDistId")
                        .HasColumnType("int");

                    b.Property<int?>("SerReqId")
                        .HasColumnType("int");

                    b.HasKey("SerDistDetailId");

                    b.HasIndex("SerDistId");

                    b.ToTable("Sr_ServiceDistributionDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrServiceRequest", b =>
                {
                    b.Property<int>("SerReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerReqId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CapcityId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CloseReason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<string>("Complain")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("InWarranty")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<byte?>("ItemStatus")
                        .HasColumnType("tinyint")
                        .HasComment("1 Good,2 Weak, Perfect 3");

                    b.Property<int?>("MaintainTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ModelNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QoutationPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<int?>("ReqResourcId")
                        .HasColumnType("int");

                    b.Property<byte?>("RequestStatus")
                        .HasColumnType("tinyint")
                        .HasComment("1 opened,2 closed");

                    b.Property<string>("SerialNo1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SerialNo2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("VistitDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("WarrantyEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("Wid")
                        .HasColumnType("int")
                        .HasColumnName("WId");

                    b.HasKey("SerReqId");

                    b.ToTable("Sr_ServiceRequest", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrServiceRequestResource", b =>
                {
                    b.Property<int>("ReqResourcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReqResourcId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ReqResourcId");

                    b.ToTable("Sr_ServiceRequestResources", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrServiceType", b =>
                {
                    b.Property<int>("SrTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SrTypID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SrTypId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SrCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SrDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SrName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SrName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SrTypId");

                    b.ToTable("Sr_ServiceTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrShippingDeclaration", b =>
                {
                    b.Property<int>("ShipDeclarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipDeclarId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<string>("BillOfLading")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<string>("Consignee")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContainersDry")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ContainersDRY");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("FreightPayableAt")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GrossWeightTons")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MarksAndNumbers")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("NetWeightTons")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notify")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PortOfDischarge")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PortOfLoading")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("RoqId")
                        .HasColumnType("int");

                    b.Property<string>("Shipper")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ValidityDays")
                        .HasColumnType("int");

                    b.Property<string>("VesselName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ShipDeclarId");

                    b.ToTable("Sr_ShippingDeclaration", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"), 1L, 1);

                    b.Property<int?>("ComId")
                        .HasColumnType("int")
                        .HasColumnName("ComID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("TaskCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaskDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TaskName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TaskName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TaskId");

                    b.HasIndex("ComId");

                    b.ToTable("Sr_Tasks", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrTaskEmp", b =>
                {
                    b.Property<int>("TskTech")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TskTech"), 1L, 1);

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpRole")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("TskTech");

                    b.HasIndex("EmpId");

                    b.HasIndex("TaskId");

                    b.ToTable("Sr_TaskEmp", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrTaskItem", b =>
                {
                    b.Property<int>("TskItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TskItemId"), 1L, 1);

                    b.Property<string>("HowUse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("TskItemId");

                    b.HasIndex("ItemCardId");

                    b.HasIndex("TaskId");

                    b.ToTable("Sr_TaskItem", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrTrafficLine", b =>
                {
                    b.Property<int>("TrafficLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrafficLineId"), 1L, 1);

                    b.Property<int?>("CityIdfrom")
                        .HasColumnType("int")
                        .HasColumnName("CityIDFrom");

                    b.Property<int?>("CityIdto")
                        .HasColumnType("int")
                        .HasColumnName("CityIDTo");

                    b.Property<bool?>("CostbyContainer")
                        .HasColumnType("bit");

                    b.Property<bool?>("CostbyVehicl")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("EstimatCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FromHarborId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Km")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("KM");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("PricebyContainer")
                        .HasColumnType("bit");

                    b.Property<bool?>("PricebyVehicl")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ToHarborId")
                        .HasColumnType("int");

                    b.Property<string>("TrafficCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrafficFrom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrafficTo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("TrafficLineId");

                    b.ToTable("Sr_TrafficLines", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrTrafficLinePriceList", b =>
                {
                    b.Property<int>("TrafficLineVeiclId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrafficLineVeiclId"), 1L, 1);

                    b.Property<int?>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price10")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price7")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price8")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price9")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("TrafficLineVeiclId");

                    b.HasIndex("ContainerTypeId");

                    b.HasIndex("TrafficLineId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Sr_TrafficLinePriceList", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrTransportation", b =>
                {
                    b.Property<int>("TransPortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransPortId"), 1L, 1);

                    b.Property<DateTime?>("Arrival")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("CityIdfrom")
                        .HasColumnType("int")
                        .HasColumnName("CityIDFrom");

                    b.Property<int?>("CityIdto")
                        .HasColumnType("int")
                        .HasColumnName("CityIDTo");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Departure")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PlaceFrom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PlaceTo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("TransPortId");

                    b.HasIndex("TripId");

                    b.ToTable("Sr_Transportation", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrTrip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Agent")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ApprovedByEmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("Approver")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ArrivedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeparturDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeparturTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DepartureBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("Guid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Names")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OperatorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Others")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("PersonsCount")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Program")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("TourGuideEmpId")
                        .HasColumnType("int");

                    b.Property<string>("TourGuideName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TourLeaderEmpId")
                        .HasColumnType("int");

                    b.Property<string>("TourLeaderName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("Visa")
                        .HasColumnType("bit");

                    b.HasKey("TripId")
                        .HasName("PK_St_Trips");

                    b.ToTable("Sr_Trips", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrTripAccomDetail", b =>
                {
                    b.Property<int>("TripAccomDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripAccomDetailId"), 1L, 1);

                    b.Property<int?>("AccomodationId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassPortNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PersonCount")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RoomNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TripAccomDetailId");

                    b.HasIndex("AccomodationId");

                    b.ToTable("Sr_TripAccomDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrTripProgramJoin", b =>
                {
                    b.Property<int>("TripProgramJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripProgramJoinId"), 1L, 1);

                    b.Property<string>("Days")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mtscruze")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MTSCruze");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("Number")
                        .HasColumnType("tinyint")
                        .HasComment("single, double, Trible");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.HasKey("TripProgramJoinId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("TripId");

                    b.ToTable("Sr_TripProgramJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("ItemCardId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"), 1L, 1);

                    b.Property<string>("BodyNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<long?>("CounterNo")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DayCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("DriverId1")
                        .HasColumnType("int");

                    b.Property<int?>("DriverId2")
                        .HasColumnType("int");

                    b.Property<int?>("GarageId")
                        .HasColumnType("int");

                    b.Property<bool?>("InWarranty")
                        .HasColumnType("bit");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<int?>("InvItemCardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCompanyCar")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("MotorNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("RegNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("StartCounterNo")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Stopped")
                        .HasColumnType("bit");

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("VehicleCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("VehicleShapeId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleTypId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.Property<byte?>("VtypeConcrete")
                        .HasColumnType("tinyint")
                        .HasColumnName("VTypeConcrete")
                        .HasComment("1 car,2 pump");

                    b.Property<int?>("Wid")
                        .HasColumnType("int")
                        .HasColumnName("WId");

                    b.Property<int?>("YearModel")
                        .HasColumnType("int");

                    b.HasKey("VehicleId")
                        .HasName("PK_Sr_Vehicles_1");

                    b.HasIndex("GarageId");

                    b.HasIndex("VehicleShapeId");

                    b.HasIndex("VehicleTypId");

                    b.HasIndex("Wid");

                    b.ToTable("Sr_Vehicles", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleItemCard", b =>
                {
                    b.Property<int>("VehclItemPart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehclItemPart"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemCardIdIsVehicl")
                        .HasColumnType("int");

                    b.HasKey("VehclItemPart");

                    b.HasIndex("ItemCardId");

                    b.ToTable("Sr_VehicleItemCard", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleJobOrder", b =>
                {
                    b.Property<int>("VjorderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VjorderId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId")
                        .HasColumnType("int");

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<string>("ContainerNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ContainersCount")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId1")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId21")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<long?>("EndCounter")
                        .HasColumnType("bigint");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("GarageId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit")
                        .HasComment("True Closed ;  False  Not Closed");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemNewName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<bool?>("ShipExecuted")
                        .HasColumnType("bit");

                    b.Property<long?>("StartCounter")
                        .HasColumnType("bigint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeToLeav")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int")
                        .HasComment("ItemCardId");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.Property<int?>("VorderTypeId")
                        .HasColumnType("int")
                        .HasColumnName("VOrderTypeId");

                    b.HasKey("VjorderId");

                    b.HasIndex("VehicleId");

                    b.HasIndex("VorderTypeId");

                    b.ToTable("Sr_VehicleJobOrder", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleJobOrderDetail", b =>
                {
                    b.Property<int>("VjorderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VJOrderDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VjorderDetailId"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ContainerWeight")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ContainersCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DamadeDesc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDamade")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Km")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("KM");

                    b.Property<int?>("PersonsCount")
                        .HasColumnType("int");

                    b.Property<string>("PlaceToEnd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlaceToStart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Representative")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("representative");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TimeStart")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrafficLineId")
                        .HasColumnType("int");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.Property<int?>("VjorderId")
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    b.Property<decimal?>("WaitTime")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("VjorderDetailId");

                    b.HasIndex("DriverId");

                    b.HasIndex("VjorderId");

                    b.ToTable("Sr_VehicleJobOrderDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleMovement", b =>
                {
                    b.Property<int>("VehiclMovId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiclMovId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AccountTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("AdvancExpenseBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AdvancExpenseWithCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<decimal?>("BankTransfer")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DbtableId")
                        .HasColumnType("int")
                        .HasColumnName("DBTableId")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<string>("DbtableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DBTableName")
                        .HasComment("to attach any document in database to receiptnote");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InvDueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetTime")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPriceVisa")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("RectSourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxValue1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TaxValue3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TaxesId1")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId2")
                        .HasColumnType("int");

                    b.Property<int?>("TaxesId3")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalExpensesTaxes1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensesTaxes2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensesTaxes3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemTax3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VehiclMovId");

                    b.ToTable("Sr_VehicleMovement", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleMovementDetail", b =>
                {
                    b.Property<int>("VehiclMovDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiclMovDetailId"), 1L, 1);

                    b.Property<decimal?>("DayCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("NetTime")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TimeStart")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("VehiclMovId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int")
                        .HasComment("ItemCardId");

                    b.HasKey("VehiclMovDetailId");

                    b.HasIndex("VehiclMovId");

                    b.ToTable("Sr_VehicleMovementDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleRenalContract", b =>
                {
                    b.Property<int>("VrentContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VRentContractId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrentContractId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<long?>("AllowanceCounter")
                        .HasColumnType("bigint");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<long?>("ConsumedCounter")
                        .HasColumnType("bigint");

                    b.Property<int?>("ContractDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<long?>("DailyCounter")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DayPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DeliveryCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscAmount4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DriverCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("DriverId1")
                        .HasColumnType("int");

                    b.Property<int?>("DriverId2")
                        .HasColumnType("int");

                    b.Property<int?>("DriverId3")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<long?>("EndCounter")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpectedStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("ExpenValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ExpenValueWithCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<long?>("ExtraCounter")
                        .HasColumnType("bigint");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FuelCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("FuelIn")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("FuelOut")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("GetOutDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("HotelRoom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("InsuranceValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InsuranceValue2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("InvTotal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("MaintenanceCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetDue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetPriceBeforCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NotPaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("PaymentMethod")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("PriceAfterTax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Profit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("RealStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Repaid")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<long?>("StartCounter")
                        .HasColumnType("bigint");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalCostBeforeCurr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPaidReciept")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPayment")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPurchInv")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalSalesInv")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Vat")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("VAT");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int")
                        .HasComment("ItemCardId");

                    b.Property<decimal?>("VisaAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("VisaApproved")
                        .HasColumnType("bit");

                    b.Property<string>("VisaCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("VisaExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("VisaNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VrentContractId");

                    b.ToTable("Sr_VehicleRenalContract", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleRentPayJoin", b =>
                {
                    b.Property<int>("RentPayJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentPayJoinId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("PayId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VrentContractId")
                        .HasColumnType("int")
                        .HasColumnName("VRentContractId");

                    b.HasKey("RentPayJoinId");

                    b.HasIndex("PayId");

                    b.HasIndex("VrentContractId");

                    b.ToTable("Sr_VehicleRentPayJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleRentPurchJoin", b =>
                {
                    b.Property<int>("RentPurchJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentPurchJoinId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("PurInvId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VrentContractId")
                        .HasColumnType("int")
                        .HasColumnName("VRentContractId");

                    b.HasKey("RentPurchJoinId");

                    b.HasIndex("PurInvId");

                    b.HasIndex("VrentContractId");

                    b.ToTable("Sr_VehicleRentPurchJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleRentRecJoin", b =>
                {
                    b.Property<int>("RentRecJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentRecJoinId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VrentContractId")
                        .HasColumnType("int")
                        .HasColumnName("VRentContractId");

                    b.HasKey("RentRecJoinId");

                    b.HasIndex("RectId");

                    b.HasIndex("VrentContractId");

                    b.ToTable("Sr_VehicleRentRecJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleRentSalesInvJoin", b =>
                {
                    b.Property<int>("RentSaleJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentSaleJoinId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("InvId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("VrentContractId")
                        .HasColumnType("int")
                        .HasColumnName("VRentContractId");

                    b.HasKey("RentSaleJoinId");

                    b.HasIndex("InvId");

                    b.HasIndex("VrentContractId");

                    b.ToTable("Sr_VehicleRentSalesInvJoin", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleShape", b =>
                {
                    b.Property<int>("VehicleShapeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleShapeId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShapeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("VehicleShapeId");

                    b.ToTable("Sr_VehicleShapes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVehicleType", b =>
                {
                    b.Property<int>("VehicleTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleTypId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TypeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("VehicleTypId");

                    b.ToTable("Sr_VehicleTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrVheicleJobOrderType", b =>
                {
                    b.Property<int>("VorderTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VOrderTypeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VorderTypeId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AddAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("GetAccountIdFromAn")
                        .HasColumnType("bit")
                        .HasColumnName("GetAccountIdFromAN");

                    b.Property<bool?>("GetCostCenterIdFromAn")
                        .HasColumnType("bit")
                        .HasColumnName("GetCostCenterIdFromAN");

                    b.Property<bool?>("GetCustomerFromAn")
                        .HasColumnType("bit");

                    b.Property<bool?>("GetItemFromAn")
                        .HasColumnType("bit");

                    b.Property<bool?>("GetVendorFromAn")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAncodeMandatory")
                        .HasColumnType("bit")
                        .HasColumnName("IsANCOdeMandatory");

                    b.Property<bool?>("IsCustomerMandatory")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDriverMandatory")
                        .HasColumnType("bit");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("VorderTypeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VOrderTypeCode")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("VorderTypeId");

                    b.ToTable("Sr_VheicleJobOrderType", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SrWarranty", b =>
                {
                    b.Property<int>("Wid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Wid"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("Exemption")
                        .HasColumnType("bit");

                    b.Property<byte?>("ExemptionPercnt")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Wcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("WCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Wconditions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("WConditions")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("Wdistance")
                        .HasColumnType("int")
                        .HasColumnName("WDistance");

                    b.Property<byte?>("Wmethod")
                        .HasColumnType("tinyint")
                        .HasColumnName("WMethod")
                        .HasComment("0 periodic,1 distance, 2 both");

                    b.Property<string>("Wname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Wname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("WperiodMonths")
                        .HasColumnType("int")
                        .HasColumnName("WPeriodMonths");

                    b.Property<bool?>("Wuse")
                        .HasColumnType("bit")
                        .HasColumnName("WUse");

                    b.HasKey("Wid");

                    b.ToTable("Sr_Warranty", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockArchive", b =>
                {
                    b.Property<int>("StockArchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockArchId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockArchId");

                    b.ToTable("Stock_Archives", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockBroker", b =>
                {
                    b.Property<int>("StockBrokersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockBrokersId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockBrokersId");

                    b.ToTable("Stock_Brokers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockCapitalUpdate", b =>
                {
                    b.Property<int>("StockCapitalUpdatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockCapitalUpdatId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CurrentCapital")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("UpdateValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockCapitalUpdatId");

                    b.HasIndex("StockId");

                    b.ToTable("Stock_CapitalUpdate", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockCashTransfer", b =>
                {
                    b.Property<int>("StockCashTransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockCashTransferId"), 1L, 1);

                    b.Property<int?>("AccountIdFrom")
                        .HasColumnType("int");

                    b.Property<int?>("AccountIdTo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("FromStockPortfolioId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StockTranTypId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("ToStockPortfolioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockCashTransferId");

                    b.ToTable("Stock_CashTransfer", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockCashWithdrawalReason", b =>
                {
                    b.Property<int>("StockCashWithdrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockCashWithdrId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockCashWithdrId");

                    b.ToTable("Stock_CashWithdrawalReasons", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockCategory", b =>
                {
                    b.Property<int>("StockCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockCatId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockCatId");

                    b.ToTable("Stock_Categories", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockDealer", b =>
                {
                    b.Property<int>("StockDealersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockDealersId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("BrokerPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("FAX");

                    b.Property<decimal?>("MarketFixedPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("MarketOtherPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Phone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockDealersId");

                    b.ToTable("Stock_Dealers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockMarket", b =>
                {
                    b.Property<int>("StockMarketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockMarketId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockMarketId");

                    b.ToTable("Stock_Markets", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockOpenningBalance", b =>
                {
                    b.Property<int>("StockOpenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockOpenId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("FollowCash")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StockPortfolioId")
                        .HasColumnType("int");

                    b.Property<int?>("StockTranTypId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockOpenId");

                    b.ToTable("Stock_OpenningBalance", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockOpenningBalanceDetail", b =>
                {
                    b.Property<int>("StockOpenDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("StockCurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.Property<int?>("StockOpenId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPriceLocal")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("StockOpenDetailId");

                    b.HasIndex("StockOpenId");

                    b.ToTable("Stock_OpenningBalanceDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockPortfolio", b =>
                {
                    b.Property<int>("StockPortfolioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockPortfolioId"), 1L, 1);

                    b.Property<decimal?>("CashBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("FollowOtherPortfolio")
                        .HasColumnType("bit");

                    b.Property<decimal?>("InvestBoxBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("ManagedByOthers")
                        .HasColumnType("bit");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("PortfolioNo")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("StockBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StockBrokersId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockPortfolioId");

                    b.ToTable("Stock_Portfolio", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockPortfolioAccount", b =>
                {
                    b.Property<int>("StockPortAccountsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockPortAccountsId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool?>("Auto")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CurrentBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("NoTranEffect")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OpenningBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StockPortfolioId")
                        .HasColumnType("int");

                    b.HasKey("StockPortAccountsId");

                    b.HasIndex("AccountId");

                    b.HasIndex("StockPortfolioId");

                    b.ToTable("Stock_PortfolioAccounts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockPortfolioStock", b =>
                {
                    b.Property<int>("StockPortJoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockPortJoinId"), 1L, 1);

                    b.Property<decimal?>("CostAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.Property<int?>("StockPortfolioId")
                        .HasColumnType("int");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("StockPortJoinId");

                    b.HasIndex("StockId");

                    b.HasIndex("StockPortfolioId");

                    b.ToTable("Stock_PortfolioStocks", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockPortfolioStockArchive", b =>
                {
                    b.Property<int>("StockArchivesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockArchivesId"), 1L, 1);

                    b.Property<int?>("StockArchId")
                        .HasColumnType("int");

                    b.Property<int?>("StockPortJoinId")
                        .HasColumnType("int");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("StockArchivesId");

                    b.HasIndex("StockArchId");

                    b.HasIndex("StockPortJoinId");

                    b.ToTable("Stock_PortfolioStockArchives", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockRecCustSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("CostExecuted")
                        .HasColumnType("bit");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("ReceiptrQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm4");

                    b.Property<string>("StrCustm5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm5");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("stockRecCustSearch");
                });

            modelBuilder.Entity("DAL.Models.StockRecSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("CostExecuted")
                        .HasColumnType("bit");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("ReceiptrQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("RetInvTrNo")
                        .HasColumnType("int");

                    b.Property<string>("RetSaleDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(49)
                        .IsUnicode(false)
                        .HasColumnType("varchar(49)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm4");

                    b.Property<string>("StrCustm5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm5");

                    b.Property<bool?>("SystemIssuedOnly")
                        .HasColumnType("bit");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("StockRecSearch");
                });

            modelBuilder.Entity("DAL.Models.StockRecVendSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<bool?>("CostExecuted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("ReceiptrQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("StockRecId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm4");

                    b.Property<string>("StrCustm5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm5");

                    b.Property<bool?>("SystemIssuedOnly")
                        .HasColumnType("bit");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("StockRecVendSearch");
                });

            modelBuilder.Entity("DAL.Models.StockSalesPurchase", b =>
                {
                    b.Property<int>("StockSalPurchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockSalPurchId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("FollowCash")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StockPortfolioId")
                        .HasColumnType("int");

                    b.Property<int?>("StockTranTypId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockSalPurchId");

                    b.ToTable("Stock_SalesPurchase", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockSalesPurchaseDetail", b =>
                {
                    b.Property<int>("StockSalPurchDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockSalPurchDetailId"), 1L, 1);

                    b.Property<int?>("DealNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DealTime")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("FixedCommision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("NetValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OtherCommision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("StockDealersId")
                        .HasColumnType("int");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.Property<int?>("StockSalPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("StockTranTypId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("StockSalPurchDetailId");

                    b.HasIndex("StockSalPurchId");

                    b.ToTable("Stock_SalesPurchaseDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockSector", b =>
                {
                    b.Property<int>("StockSectorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockSectorsId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockSectorsId");

                    b.ToTable("Stock_Sectors", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockShareholdersName", b =>
                {
                    b.Property<int>("StockholderNamesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockholderNamesId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockholderNamesId");

                    b.ToTable("Stock_ShareholdersNames", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockStock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EstablishDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FinancialEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("IslamicCompatibility")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastMemberDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Listed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MarketListDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("NextMemberDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("PaidCapital")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Phone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("SharePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StockCatId")
                        .HasColumnType("int");

                    b.Property<int?>("StockCurrentNo")
                        .HasColumnType("int");

                    b.Property<int?>("StockIssuesNo")
                        .HasColumnType("int");

                    b.Property<int?>("StockMarketId")
                        .HasColumnType("int");

                    b.Property<decimal?>("StockNameValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("StockPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StockSectorsId")
                        .HasColumnType("int");

                    b.Property<int?>("StockTreasuryNo")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SymbolAr")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("WebSite")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZakatOnInvest")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StockId");

                    b.HasIndex("StockCatId");

                    b.HasIndex("StockMarketId");

                    b.HasIndex("StockSectorsId");

                    b.ToTable("Stock_Stocks", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockTransfer", b =>
                {
                    b.Property<int>("StockTransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockTransferId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("FromStockPortfolioId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StockTranTypId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<int?>("ToStockPortfolioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockTransferId");

                    b.ToTable("Stock_Transfer", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockTransferDetail", b =>
                {
                    b.Property<int>("StockTransferDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockTransferDetailId"), 1L, 1);

                    b.Property<decimal?>("CostAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ProfitLoss")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.Property<int?>("StockTranTypId")
                        .HasColumnType("int");

                    b.Property<int>("StockTransferId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("StockTransferDetailId");

                    b.HasIndex("StockTransferId");

                    b.ToTable("Stock_TransferDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.StockTranType", b =>
                {
                    b.Property<int>("StockTranTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockTranTypId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<byte?>("CashEffect1")
                        .HasColumnType("tinyint")
                        .HasComment("1 Plus, 2 Minus, 3 Without");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("StockEffect")
                        .HasColumnType("tinyint")
                        .HasComment("1 Plus, 2 Minus, 3 Without");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("StockTranTypId");

                    b.ToTable("Stock_TranTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysAnalyticalCode", b =>
                {
                    b.Property<int>("Aid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Aid"), 1L, 1);

                    b.Property<int?>("AccomulatAid")
                        .HasColumnType("int")
                        .HasColumnName("AccomulatAId");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField11")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField12")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField13")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField14")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField15")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField16")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField17")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField18")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField19")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField20")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField21")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField22")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField23")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField24")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField25")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField26")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField27")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField28")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField29")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField30")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("AnDate1")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("AnDate2")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("AnDate3")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("BspartnerId")
                        .HasColumnType("int")
                        .HasColumnName("BSPartnerId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CodeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("CodeLevelType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsNotify1")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotify2")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotify3")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NotifyDate1")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("NotifyDate2")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("NotifyDate3")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ParentAid")
                        .HasColumnType("int")
                        .HasColumnName("ParentAId");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<bool?>("Stopped")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Aid");

                    b.ToTable("Sys_AnalyticalCodes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysAnalyticalCodeProccess", b =>
                {
                    b.Property<int>("AnprocessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ANProcessId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnprocessId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks10")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks5")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks6")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks7")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks8")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks9")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("AnprocessId");

                    b.HasIndex("Aid");

                    b.ToTable("sys_AnalyticalCodeProccess", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysAnalyticalCodeUpdate", b =>
                {
                    b.Property<int>("AnupdateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ANUpdateId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnupdateId"), 1L, 1);

                    b.Property<string>("AddField1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("AnUpdateTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commodity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("Equipment")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PortOfDischarge")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PortOfLoading")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Recommendation")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Shipper")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TargetRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("TruckingFrom")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TruckingTo")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ValidityDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("numeric(38,10)");

                    b.HasKey("AnupdateId");

                    b.HasIndex("Aid");

                    b.ToTable("sys_AnalyticalCodeUpdates", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysAnalyticalCodeUpdateType", b =>
                {
                    b.Property<int>("AnUpdateTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnUpdateTypeId"), 1L, 1);

                    b.Property<int?>("CarCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("AnUpdateTypeId");

                    b.ToTable("sys_AnalyticalCodeUpdateTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysBasket", b =>
                {
                    b.Property<int>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BasketId"), 1L, 1);

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<string>("DocName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("FromUser")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("WachDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("BasketId");

                    b.ToTable("Sys_Basket", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysBook", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<bool?>("AutoSerial")
                        .HasColumnType("bit");

                    b.Property<string>("BookNameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BookNameAR");

                    b.Property<string>("BookNameEn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BookNameEN");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("EndNum")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<byte?>("PostType")
                        .HasColumnType("tinyint");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StartNum")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<bool?>("SystemIssuedOnly")
                        .HasColumnType("bit");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("Sys_Books", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysCity", b =>
                {
                    b.Property<int>("SysCityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SysCityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SysCityId"), 1L, 1);

                    b.Property<string>("CityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cityName")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Latitude")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("latitude")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Longitude")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("longitude")
                        .UseCollation("Arabic_BIN");

                    b.HasKey("SysCityId");

                    b.ToTable("Sys_City", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysConfigsm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<string>("Keeey")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("keeey");

                    b.Property<string>("Namesrvices")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("namesrvices");

                    b.Property<string>("Pasth")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("pasth");

                    b.Property<string>("Sender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sender");

                    b.HasKey("Id");

                    b.ToTable("sys_configsms", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysCounter", b =>
                {
                    b.Property<int>("CounterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CounterId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("Counter")
                        .HasColumnType("int");

                    b.Property<string>("TrIdName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("CounterId");

                    b.ToTable("Sys_Counter", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysCountry", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_BIN");

                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("CountryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Latitude")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("latitude")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("Longitude")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("longitude")
                        .UseCollation("Arabic_BIN");

                    b.HasKey("CountryCode");

                    b.ToTable("Sys_Countries", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysFinancialInterval", b =>
                {
                    b.Property<int>("FinancialIntervalsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialIntervalsId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("EndToHijri")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("EndingDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FinancialIntervalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<string>("MonthNameA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("MonthNameE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("StartingFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("StartingFromHijri")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StopReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("StoppedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("FinancialIntervalsId");

                    b.HasIndex("FinancialYearId");

                    b.ToTable("Sys_FinancialIntervals", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysFinancialYear", b =>
                {
                    b.Property<int>("FinancialYearsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialYearsId"), 1L, 1);

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ClosingDateHijri")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("EndTo")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("EndToHijri")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("FinancialYearNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("FinancialYearNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialYearsCode")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<int?>("NoOfIntervals")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartingFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("StartingFromHijri")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StopReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("StoppedByUserId")
                        .HasColumnType("int");

                    b.Property<byte?>("SubPeriodsType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("YearState")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("YearType")
                        .HasColumnType("bit");

                    b.HasKey("FinancialYearsId");

                    b.ToTable("Sys_FinancialYears", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysFinancialYearsClosing", b =>
                {
                    b.Property<int>("ClosingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClosingId"), 1L, 1);

                    b.Property<int?>("ClosingAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ClosingCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ClosingDateHejri")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrentYear")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("FinancialYearsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTransfer")
                        .HasColumnType("bit");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ClosingId");

                    b.ToTable("Sys_FinancialYearsClosing", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysFlexList", b =>
                {
                    b.Property<int>("FlexListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlexListId"), 1L, 1);

                    b.Property<bool?>("AllLanguages")
                        .HasColumnType("bit");

                    b.Property<string>("Culture")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("FieldCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FlexCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FlexName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FlexName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NamingId")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FlexListId");

                    b.ToTable("sys_FlexLists", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysLog", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LogId"), 1L, 1);

                    b.Property<string>("FieldDetail")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FieldName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FieldNameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("LogAction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("NewValue")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("OldValue")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("RowIndex")
                        .HasColumnType("int");

                    b.Property<string>("ScreenName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ScreenNameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TablDetailName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TablName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.ToTable("SysLog", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysNaming", b =>
                {
                    b.Property<int>("NamingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NamingId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CtrlLocationX")
                        .HasColumnType("int");

                    b.Property<int?>("CtrlLocationY")
                        .HasColumnType("int");

                    b.Property<string>("CtrlName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CtrlNewText")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CtrlOriginalText")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CtrlParent")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("CtrlParentIsTpl")
                        .HasColumnType("bit")
                        .HasColumnName("CtrlParentIsTPL");

                    b.Property<string>("CtrlParentType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CtrlTextBefore")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CtrlType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Culture")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FlexMasterCardTable")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("HasFlexFields")
                        .HasColumnType("bit");

                    b.Property<bool?>("Hidden")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAllUsers")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDropDown")
                        .HasColumnType("bit");

                    b.Property<bool?>("MustSelect")
                        .HasColumnType("bit");

                    b.Property<string>("Screen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SelectedField")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NamingId");

                    b.ToTable("Sys_Naming", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysNotification", b =>
                {
                    b.Property<int>("NotiFyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotiFyId"), 1L, 1);

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("NextNotify")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("NotifyMessage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("NotifyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TableEntityDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("NotiFyId");

                    b.ToTable("Sys_Notifications", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysNotificationType", b =>
                {
                    b.Property<int>("NotifyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotifyTypeId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("NotifyInDays")
                        .HasColumnType("int");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("NotifyTypeId");

                    b.ToTable("Sys_NotificationTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysRemotBranchesLog", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LogId"), 1L, 1);

                    b.Property<bool?>("IsMasterFile")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LogTimStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("LogType")
                        .HasColumnType("tinyint")
                        .HasComment("1 insert,2 update,3 delete");

                    b.Property<bool?>("RemotExecuted")
                        .HasColumnType("bit");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.ToTable("Sys_RemotBranchesLog", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysRemoteBranchesLogDetaile", b =>
                {
                    b.Property<long>("LogDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LogDetailId"), 1L, 1);

                    b.Property<string>("FieldName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FieldNewValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FieldOldValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("LogId")
                        .HasColumnType("bigint");

                    b.Property<byte?>("LogType")
                        .HasColumnType("tinyint")
                        .HasComment("1 insert,2 update,3 delete,4 print, preview");

                    b.HasKey("LogDetailId");

                    b.HasIndex("LogId");

                    b.ToTable("SysRemoteBranchesLogDetaile", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysRemotLogDetail", b =>
                {
                    b.Property<long>("LogDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LogDetailId"), 1L, 1);

                    b.Property<string>("FieldName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FieldNewValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FieldOldValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("LogId")
                        .HasColumnType("bigint");

                    b.Property<byte?>("LogType")
                        .HasColumnType("tinyint")
                        .HasComment("1 insert,2 update,3 delete,4 print, preview");

                    b.HasKey("LogDetailId");

                    b.HasIndex("LogId");

                    b.ToTable("Sys_RemotLogDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.SysRemotTranLog", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LogId"), 1L, 1);

                    b.Property<bool?>("IsMasterFile")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LogTimStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("smalldatetime");

                    b.Property<byte?>("LogType")
                        .HasColumnType("tinyint")
                        .HasComment("1 insert,2 update,3 delete");

                    b.Property<bool?>("RemotExecuted")
                        .HasColumnType("bit");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.ToTable("Sys_RemotTranLog", (string)null);
                });

            modelBuilder.Entity("DAL.Models.TrOpenningBalance", b =>
                {
                    b.Property<int>("TrOpenningBalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Tr_OpenningBalanceId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrOpenningBalanceId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("numeric(38,1)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ExplainId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCreditor")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalDebitor")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TrOpenningBalanceId");

                    b.ToTable("Tr_OpenningBalance", (string)null);
                });

            modelBuilder.Entity("DAL.Models.TrOpenningBalanceDetail", b =>
                {
                    b.Property<int>("OpeningBalanceDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OpeningBalanceDetailsId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Creditor")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Debitor")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TrOpenningBalanceId")
                        .HasColumnType("int")
                        .HasColumnName("Tr_OpenningBalanceId");

                    b.HasKey("OpeningBalanceDetailsId");

                    b.HasIndex("TrOpenningBalanceId");

                    b.ToTable("Tr_OpenningBalanceDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.VdeliverSalesInvfilter", b =>
                {
                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DeliverQtyOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("InvTrNo")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StrCustm4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm4");

                    b.Property<string>("StrCustm5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("strCustm5");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VDeliverSalesInvfilter");
                });

            modelBuilder.Entity("DAL.Models.VHrActualAttend", b =>
                {
                    b.Property<DateTime?>("ActualDate")
                        .HasColumnType("date")
                        .HasColumnName("Actual_Date");

                    b.Property<bool?>("DayType")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceEmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShiftDay")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("ShiftName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.ToView("vHR_Actual_Attend");
                });

            modelBuilder.Entity("DAL.Models.VHrAttend", b =>
                {
                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<int?>("DevId")
                        .HasColumnType("int")
                        .HasColumnName("Dev_id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("mode");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.ToView("vHr_Attend");
                });

            modelBuilder.Entity("DAL.Models.VHrAttend2", b =>
                {
                    b.Property<DateTime?>("ActualDate")
                        .HasColumnType("date")
                        .HasColumnName("Actual_Date");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<bool?>("DayType")
                        .HasColumnType("bit");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Ip")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ip");

                    b.Property<TimeSpan?>("LogInTime")
                        .HasColumnType("time")
                        .HasColumnName("LogIn_Time");

                    b.Property<TimeSpan?>("LogOutTime")
                        .HasColumnType("time")
                        .HasColumnName("LogOut_Time");

                    b.Property<string>("Namedev")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("namedev");

                    b.Property<string>("ShiftDay")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("ShiftName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.ToView("vHr_Attend2");
                });

            modelBuilder.Entity("DAL.Models.VHrAttendAll", b =>
                {
                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<decimal?>("Countearly")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countearly");

                    b.Property<decimal?>("Countearlypure")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countearlypure");

                    b.Property<decimal?>("Countleate")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countleate");

                    b.Property<decimal?>("Countovertim")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countovertim");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<int?>("DevId")
                        .HasColumnType("int")
                        .HasColumnName("Dev_id");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Ip")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ip");

                    b.Property<TimeSpan?>("LogInTime")
                        .HasColumnType("time")
                        .HasColumnName("LogIn_Time");

                    b.Property<int?>("LogOutRol")
                        .HasColumnType("int")
                        .HasColumnName("LogOut_Rol");

                    b.Property<TimeSpan?>("LogOutTime")
                        .HasColumnType("time")
                        .HasColumnName("LogOut_Time");

                    b.Property<int?>("LoginRol")
                        .HasColumnType("int")
                        .HasColumnName("Login_Rol");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Namedev")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("namedev");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.ToView("vHr_Attend_All");
                });

            modelBuilder.Entity("DAL.Models.VHrAttendAll2", b =>
                {
                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<decimal?>("Countearly")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countearly");

                    b.Property<decimal?>("Countearlypure")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countearlypure");

                    b.Property<decimal?>("Countleate")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countleate");

                    b.Property<decimal?>("Countovertim")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countovertim");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<TimeSpan?>("LogInTime")
                        .HasColumnType("time")
                        .HasColumnName("LogIn_Time");

                    b.Property<TimeSpan?>("LogOutTime")
                        .HasColumnType("time")
                        .HasColumnName("LogOut_Time");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.ToView("vHr_Attend_All_2");
                });

            modelBuilder.Entity("DAL.Models.VHrAttendAll3", b =>
                {
                    b.Property<DateTime?>("ActualLogOutDate")
                        .HasColumnType("date")
                        .HasColumnName("Actual_LogOutDate");

                    b.Property<DateTime?>("ActualLoginDate")
                        .HasColumnType("date")
                        .HasColumnName("Actual_LoginDate");

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<int?>("DevId")
                        .HasColumnType("int")
                        .HasColumnName("Dev_id");

                    b.Property<string>("Ip")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ip");

                    b.Property<TimeSpan?>("LogInTime")
                        .HasColumnType("time")
                        .HasColumnName("LogIn_Time");

                    b.Property<DateTime?>("LogOutDate")
                        .HasColumnType("date");

                    b.Property<int?>("LogOutRol")
                        .HasColumnType("int")
                        .HasColumnName("LogOut_Rol");

                    b.Property<TimeSpan?>("LogOutTime")
                        .HasColumnType("time")
                        .HasColumnName("LogOut_Time");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("date");

                    b.Property<int?>("LoginRol")
                        .HasColumnType("int")
                        .HasColumnName("Login_Rol");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Namedev")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("namedev");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.ToView("vHr_Attend_All3");
                });

            modelBuilder.Entity("DAL.Models.VHrAttendAllChangeshift", b =>
                {
                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<int?>("DevId")
                        .HasColumnType("int")
                        .HasColumnName("Dev_id");

                    b.Property<string>("Ip")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ip");

                    b.Property<TimeSpan?>("LogInTime")
                        .HasColumnType("time")
                        .HasColumnName("LogIn_Time");

                    b.Property<int?>("LogOutRol")
                        .HasColumnType("int")
                        .HasColumnName("LogOut_Rol");

                    b.Property<TimeSpan?>("LogOutTime")
                        .HasColumnType("time")
                        .HasColumnName("LogOut_Time");

                    b.Property<int?>("LoginRol")
                        .HasColumnType("int")
                        .HasColumnName("Login_Rol");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Namedev")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("namedev");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.ToView("vHr_Attend_All_changeshift");
                });

            modelBuilder.Entity("DAL.Models.VHrAttendLogin", b =>
                {
                    b.Property<DateTime?>("ActualLoginDate")
                        .HasColumnType("date")
                        .HasColumnName("Actual_LoginDate");

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<decimal?>("Countearly")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countearly");

                    b.Property<decimal?>("Countleate")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countleate");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<TimeSpan?>("LogInTime")
                        .HasColumnType("time")
                        .HasColumnName("LogIn_Time");

                    b.Property<string>("Moderol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("moderol");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.ToView("vHr_Attend_Login");
                });

            modelBuilder.Entity("DAL.Models.VHrAttendLogintt", b =>
                {
                    b.Property<DateTime?>("ActualDate")
                        .HasColumnType("date")
                        .HasColumnName("Actual_Date");

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("LogOutDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("LogOut_DateTime");

                    b.Property<TimeSpan?>("LogOutTime")
                        .HasColumnType("time")
                        .HasColumnName("LogOut_Time");

                    b.Property<string>("Moderol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("moderol");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.ToView("vHr_Attend_Logintt");
                });

            modelBuilder.Entity("DAL.Models.VHrAttendLogOut", b =>
                {
                    b.Property<DateTime?>("ActualDate")
                        .HasColumnType("date")
                        .HasColumnName("Actual_Date");

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<decimal?>("Countearlypure")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countearlypure");

                    b.Property<decimal?>("Countovertim")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countovertim");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("LogOutDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("LogOut_DateTime");

                    b.Property<TimeSpan?>("LogOutTime")
                        .HasColumnType("time")
                        .HasColumnName("LogOut_Time");

                    b.Property<string>("Moderol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("moderol");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.ToView("vHr_Attend_LogOut");
                });

            modelBuilder.Entity("DAL.Models.VHrAttendLogoutlll", b =>
                {
                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<decimal?>("Countearlypure")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countearlypure");

                    b.Property<decimal?>("Countovertim")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countovertim");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<TimeSpan?>("LogOutTime")
                        .HasColumnType("time")
                        .HasColumnName("LogOut_Time");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.ToView("vHr_Attend_Logoutlll");
                });

            modelBuilder.Entity("DAL.Models.VHrAttendMorePasm", b =>
                {
                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<int?>("Countx")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<int?>("DevId")
                        .HasColumnType("int")
                        .HasColumnName("Dev_id");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("mode");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.ToView("vHr_Attend_MorePasm");
                });

            modelBuilder.Entity("DAL.Models.VHrAttendShiftChange", b =>
                {
                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<TimeSpan?>("LogInTime")
                        .HasColumnType("time")
                        .HasColumnName("LogIn_Time");

                    b.Property<int?>("LogOutRol")
                        .HasColumnType("int")
                        .HasColumnName("LogOut_Rol");

                    b.Property<TimeSpan?>("LogOutTime")
                        .HasColumnType("time")
                        .HasColumnName("LogOut_Time");

                    b.Property<int?>("LoginRol")
                        .HasColumnType("int")
                        .HasColumnName("Login_Rol");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.ToView("vHr_Attend_Shift_Change");
                });

            modelBuilder.Entity("DAL.Models.Vhrattendtest", b =>
                {
                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<TimeSpan?>("LogInTime")
                        .HasColumnType("time")
                        .HasColumnName("LogIn_Time");

                    b.Property<TimeSpan?>("LogOutTime")
                        .HasColumnType("time")
                        .HasColumnName("LogOut_Time");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.ToView("vhrattendtest");
                });

            modelBuilder.Entity("DAL.Models.VShiftDay", b =>
                {
                    b.Property<bool?>("DayType")
                        .HasColumnType("bit");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShiftCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShiftDay")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.ToView("vShiftDays");
                });

            modelBuilder.Entity("DAL.Models.VwAccountClassification", b =>
                {
                    b.Property<long?>("AccountCatCode")
                        .HasColumnType("bigint");

                    b.Property<string>("AccountCatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AccountCatDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("AccountClassType")
                        .HasColumnType("tinyint");

                    b.Property<string>("ClassLevel")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)");

                    b.Property<long?>("Code")
                        .HasColumnType("bigint");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("VW_AccountClassification");
                });

            modelBuilder.Entity("DAL.Models.VwAllAccountsTransaction", b =>
                {
                    b.Property<byte?>("AccCashFlow")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccTotaCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccTotalDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("AccountBranching")
                        .HasColumnType("tinyint");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("AccountCurrencyId")
                        .HasColumnType("int");

                    b.Property<byte?>("AccountGroup")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("AccountNature")
                        .HasColumnType("tinyint");

                    b.Property<string>("AnalizCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AnalizName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("AnalizName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceCurrencyAfterCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceCurrencyAfterDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceLocalAfterCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceLocalAfterDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("BookNameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BookNameAR");

                    b.Property<bool?>("CalcMethod")
                        .HasColumnType("bit");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("ChrtAccountCode")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DetailedJournalDescription")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("DetailedTableEntityId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Idname")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("IDname");

                    b.Property<bool?>("IsHelpAcc")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOpenning")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOpenningTerm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PostQueId")
                        .HasColumnType("int");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(303)
                        .HasColumnType("nvarchar(303)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength()
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(33)
                        .IsUnicode(false)
                        .HasColumnType("varchar(33)");

                    b.Property<string>("SourceCode")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SourceName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_AllAccountsTransactions");
                });

            modelBuilder.Entity("DAL.Models.VwAllAnalyticalCodTransaction", b =>
                {
                    b.Property<long?>("AccountCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AccountNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CodeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("CodeLevelType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CostCenterCode")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("CostCenterNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CostCenterNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<int?>("DetailedTableEntityId")
                        .HasColumnType("int");

                    b.Property<string>("DocRemarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasMaxLength(29)
                        .IsUnicode(false)
                        .HasColumnType("varchar(29)");

                    b.Property<string>("DocTypeName1")
                        .IsRequired()
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)");

                    b.Property<string>("DocTypeName2")
                        .IsRequired()
                        .HasMaxLength(29)
                        .IsUnicode(false)
                        .HasColumnType("varchar(29)");

                    b.Property<decimal?>("DocValue")
                        .HasColumnType("numeric(38,6)");

                    b.Property<int?>("ManualTrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpenBalancCredCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenBalancCredCrncyCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenBalancDepCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenBalancDepCrncyCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ParentAid")
                        .HasColumnType("int")
                        .HasColumnName("ParentAId");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<bool?>("Stopped")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.ToView("VW_AllAnalyticalCodTransactions");
                });

            modelBuilder.Entity("DAL.Models.VwAllAnalyticalCodTransactionsDetail", b =>
                {
                    b.Property<long?>("AccountCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AccountNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField11")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField14")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CodeLevel")
                        .HasColumnType("int");

                    b.Property<byte?>("CodeLevelType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CostCenterCode")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("CostCenterNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CostCenterNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<int?>("DetailedTableEntityId")
                        .HasColumnType("int");

                    b.Property<string>("DocRemarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<string>("DocTypeName1")
                        .IsRequired()
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)");

                    b.Property<string>("DocTypeName2")
                        .IsRequired()
                        .HasMaxLength(29)
                        .IsUnicode(false)
                        .HasColumnType("varchar(29)");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ManualTrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("OpenBalancCredCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenBalancCredCrncyCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenBalancDepCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenBalancDepCrncyCostCentr")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ParentAid")
                        .HasColumnType("int")
                        .HasColumnName("ParentAId");

                    b.Property<int?>("PostQueId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyBeforRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("RemarksE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<bool?>("Stopped")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("UnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_AllAnalyticalCodTransactionsDetails");
                });

            modelBuilder.Entity("DAL.Models.VwAllCostCenterTransaction", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceCurrencyAfterCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceCurrencyAfterDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceLocalAfterCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceLocalAfterDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("BookNameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BookNameAR");

                    b.Property<int?>("CostCenterCode")
                        .HasColumnType("int");

                    b.Property<decimal?>("CostCenterCurrTrancCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CostCenterCurrTrancDepit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CostCenterCurrTrancDepitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("CostCenterNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("CostCenterTotaCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CostCenterTotaCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CostCenterTotalDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CostCenterTotalDebitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("HelpCostCenterType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("IsHelpCostCenter")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOpenning")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PostQueId")
                        .HasColumnType("int");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_AllCostCenterTransactions");
                });

            modelBuilder.Entity("DAL.Models.VwAllDailyTransactionsForReview", b =>
                {
                    b.Property<string>("AnalizCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AnalizName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("AnalizName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("BookNameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BookNameAR");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("DocTypeAr")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("DocTypeAR");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("Idname")
                        .IsRequired()
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("IDname");

                    b.Property<bool?>("IsOpenningTerm")
                        .HasColumnType("bit");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(33)
                        .IsUnicode(false)
                        .HasColumnType("varchar(33)");

                    b.Property<string>("SourceCode")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SourceName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_AllDailyTransactionsForReview");
                });

            modelBuilder.Entity("DAL.Models.VwAllJobOrder", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustomerCharged")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("Installation")
                        .HasColumnType("bit");

                    b.Property<decimal?>("InstallationPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetExpenses")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("OrderSource")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OrderStatus")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("OrderType")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Priority")
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalEquipCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensesCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalGoStock")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJobsCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJpbOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProductsPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPurchInvCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalScrap")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTasksCose")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_AllJobOrders");
                });

            modelBuilder.Entity("DAL.Models.VwAllJobOrderDocument", b =>
                {
                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<decimal?>("Docval")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("docval");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.ToView("vw_AllJobOrderDocuments");
                });

            modelBuilder.Entity("DAL.Models.VwAllLetOfGtransaction", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoverValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<decimal?>("Expenses")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("LetEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("LetOfGrnteeId")
                        .HasColumnType("int");

                    b.Property<int>("LetOfGrnteeTranId")
                        .HasColumnType("int");

                    b.Property<string>("LetterOfGuaranteeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LetterOfGuaranteeName1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LetterOfGuaranteeName2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("StatusName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("TypeName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ValueBeforeRate")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_AllLetOfGTransactions");
                });

            modelBuilder.Entity("DAL.Models.VwAllRepairOrder", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RepairId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_AllRepairOrders");
                });

            modelBuilder.Entity("DAL.Models.VwAllSrJobOrderMotor", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int>("JorderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_AllSrJobOrderMotors");
                });

            modelBuilder.Entity("DAL.Models.VwAllVehicleJobOrdersDoc", b =>
                {
                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("DocRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)");

                    b.Property<string>("DocTypeName1")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("DocTypeName2")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<decimal?>("DocValue")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("VjorderId")
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    b.ToView("VW_AllVehicleJobOrdersDocs");
                });

            modelBuilder.Entity("DAL.Models.VwAttendTime", b =>
                {
                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<decimal?>("Countearly")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countearly");

                    b.Property<decimal?>("Countearlypure")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countearlypure");

                    b.Property<decimal?>("Countleate")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countleate");

                    b.Property<decimal?>("Countovertim")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("countovertim");

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<int?>("DevId")
                        .HasColumnType("int")
                        .HasColumnName("Dev_id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("mode");

                    b.Property<string>("Moderol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("moderol");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("NewAttend")
                        .HasColumnType("datetime");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.Property<TimeSpan?>("Timeat")
                        .HasColumnType("time")
                        .HasColumnName("timeat");

                    b.ToView("VW_AttendTime");
                });

            modelBuilder.Entity("DAL.Models.VwCustomerCategory", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("VW_CustomerCategory");
                });

            modelBuilder.Entity("DAL.Models.VwDailyTransaction", b =>
                {
                    b.Property<string>("AnalizCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AnalizName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("AnalizName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_BIN");

                    b.Property<string>("BookNameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BookNameAR");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("DocTypeAr")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("DocTypeAR");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<string>("Idname")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("IDname");

                    b.Property<bool?>("IsOpenningTerm")
                        .HasColumnType("bit");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(303)
                        .HasColumnType("nvarchar(303)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("varchar(22)");

                    b.Property<string>("SourceCode")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SourceName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_DailyTransactions");
                });

            modelBuilder.Entity("DAL.Models.VwEmpAttendanceTran", b =>
                {
                    b.Property<int>("AttendDocDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("AttendDocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DeviceEmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Jcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCode")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Jname2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JName2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("PayDayDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PeriodCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("PeriodEndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PeriodName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PeriodName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("PeriodStrtDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("PeriodTablDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodTableId")
                        .HasColumnType("int");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SubPeriodCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SubPeriodName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SubPeriodName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("TotalVacsHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalWorkHours")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_EmpAttendanceTran");
                });

            modelBuilder.Entity("DAL.Models.VwGetAdjustMentsByCust", b =>
                {
                    b.Property<int>("AdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("CurrencyId")
                        .HasColumnType("tinyint");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_GetAdjustMentsByCust");
                });

            modelBuilder.Entity("DAL.Models.VwGetAdjustMentsByVend", b =>
                {
                    b.Property<int>("AdjustId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("CurrencyId")
                        .HasColumnType("tinyint");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("VW_GetAdjustMentsByVend");
                });

            modelBuilder.Entity("DAL.Models.VwGetAdjustMentsRank", b =>
                {
                    b.Property<int>("AdjustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdjustId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetAdjustMentsRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetAllBatch", b =>
                {
                    b.Property<bool?>("AllPatchesSamePrice")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BatchHieght")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchLength")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BatchWidth")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("FirstPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsAttributeItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDimension")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpened")
                        .HasColumnType("bit");

                    b.Property<bool>("IsScrap")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStandard")
                        .HasColumnType("bit");

                    b.Property<int>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemBatchCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchName1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchName2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("MultiplyValues")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool>("UseBatchPrice")
                        .HasColumnType("bit");

                    b.ToView("VW_GetAllBatches");
                });

            modelBuilder.Entity("DAL.Models.VwGetAnalyticalCodeRank", b =>
                {
                    b.Property<int>("Aid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Aid"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.ToView("VW_GetAnalyticalCodeRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetAssetRank", b =>
                {
                    b.Property<string>("AssetCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.ToView("VW_GetAssetRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetAssetSettingsRank", b =>
                {
                    b.Property<int>("AssetSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetSetId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetAssetSettingsRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetAssetTerminationRank", b =>
                {
                    b.Property<int>("AssetTerminatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetTerminatId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetAssetTerminationRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetAttendanceDocRank", b =>
                {
                    b.Property<int>("AttendDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendDocId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetAttendanceDocRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetBankNoticeRank", b =>
                {
                    b.Property<int>("BankNoticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankNoticId"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetBankNoticeRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetBomrank", b =>
                {
                    b.Property<int>("BillOfMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillOfMaterialId"), 1L, 1);

                    b.Property<string>("Bomcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BOMCode");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.ToView("VW_GetBOMRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetBoxTransferNoteRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("BoxTranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoxTranId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetBoxTransferNoteRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetCurrencyRank", b =>
                {
                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.ToView("VW_GetCurrencyRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetCustomersRank", b =>
                {
                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.ToView("VW_GetCustomersRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetDeliverSalesInvoiceByCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("DeliverId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("IsCust")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCostAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalLastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetDeliverSalesInvoiceByCust");
                });

            modelBuilder.Entity("DAL.Models.VwGetDeliverSalesInvoiceByVend", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("DeliverId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("IsCust")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCostAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalLastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetDeliverSalesInvoiceByVend");
                });

            modelBuilder.Entity("DAL.Models.VwGetDeliverSalesInvoiceRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("DeliverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliverId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetDeliverSalesInvoiceRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetDepreciationDocRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("DeprDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeprDocId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetDepreciationDocRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetEmpActivityRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("EmpActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpActivityId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetEmpActivityRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetEmpLoanRequestRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("EmpLoanReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpLoanReqId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetEmpLoanRequestRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetEmpMovePromotionRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("EmpMoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpMoveId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetEmpMovePromotionRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetEmpVacationRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("EmpVacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpVacId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetEmpVacationRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetGawabRecordRank", b =>
                {
                    b.Property<int>("LetterNormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LetterNormId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetGawabRecordRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetHrTerminationRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TerminateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminateId"), 1L, 1);

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetHrTerminationRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetItemAlter", b =>
                {
                    b.Property<string>("AlterToCod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AlterToDesc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(38,10)");

                    b.ToView("VW_GetItemAlters");
                });

            modelBuilder.Entity("DAL.Models.VwGetItemCardRank", b =>
                {
                    b.Property<int>("ItemCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemCardId"), 1L, 1);

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.ToView("VW_GetItemCardRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetItemStockAdjustmentRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("StockAdjustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockAdjustId"), 1L, 1);

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetItemStockAdjustmentRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetJobOrderByCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustomerCharged")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalJpbOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetJobOrderByCust");
                });

            modelBuilder.Entity("DAL.Models.VwGetJobOrderRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("JobOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobOrderId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetJobOrderRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetJournalEntryRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("JurnalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JurnalId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetJournalEntryRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetKeeperBankRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("KeeperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeeperId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetKeeperBankRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetLeavePermisionRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("LeavPermisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeavPermisionId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetLeavePermisionRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetLeavPermissionRequestRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("LeavPermReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeavPermReqId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetLeavPermissionRequestRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetNotification", b =>
                {
                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CurrentUser")
                        .HasMaxLength(101)
                        .HasColumnType("nvarchar(101)")
                        .HasColumnName("currentUser")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DepartName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("FromUser")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SenderUser")
                        .HasMaxLength(101)
                        .HasColumnType("nvarchar(101)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<byte?>("UserType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("WachDate")
                        .HasColumnType("smalldatetime");

                    b.ToView("VW_GetNotifications");
                });

            modelBuilder.Entity("DAL.Models.VwGetPassPortRank", b =>
                {
                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int>("WfpassPortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WfpassPortId"), 1L, 1);

                    b.ToView("VW_GetPassPortRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetPaymentNoteByCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("IsCust")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PayId")
                        .HasColumnType("int");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetPaymentNoteByCust");
                });

            modelBuilder.Entity("DAL.Models.VwGetPaymentNoteByVend", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("IsCust")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("PayId")
                        .HasColumnType("int");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetPaymentNoteByVend");
                });

            modelBuilder.Entity("DAL.Models.VwGetPaymentNoteRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("PayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetPaymentNoteRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetPettycashRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("PettycashId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PettycashId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetPettycashRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetPettycashSearch", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("PettycashId")
                        .HasColumnType("int");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<bool?>("SystemIssuedOnly")
                        .HasColumnType("bit");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalFilteredPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetPettycashSearch");
                });

            modelBuilder.Entity("DAL.Models.VwGetProductionOrdeRank", b =>
                {
                    b.Property<int>("ProductionOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductionOrderId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetProductionOrdeRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetPurchasInvoiceByVend", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PurInvId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("VW_GetPurchasInvoiceByVend");
                });

            modelBuilder.Entity("DAL.Models.VwGetPurchasInvoiceRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("PurInvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurInvId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetPurchasInvoiceRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetPurchasOrderByVend", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PurOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("VW_GetPurchasOrderByVend");
                });

            modelBuilder.Entity("DAL.Models.VwGetPurchasOrderRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("PurOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurOrderId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetPurchasOrderRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetPurchasOrderRequestRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("PurOrderReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurOrderReqId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetPurchasOrderRequestRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetReceiptNoteByCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("IsCust")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetReceiptNoteByCust");
                });

            modelBuilder.Entity("DAL.Models.VwGetReceiptNoteByVend", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("IsCust")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("RectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetReceiptNoteByVend");
                });

            modelBuilder.Entity("DAL.Models.VwGetReceiptNoteRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("RectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RectId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetReceiptNoteRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetRecipeRank", b =>
                {
                    b.Property<string>("RecipeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.ToView("VW_GetRecipeRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetReturnPurchaseByVend", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("RetPurchId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("VW_GetReturnPurchaseByVend");
                });

            modelBuilder.Entity("DAL.Models.VwGetReturnPurchaseRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("RetPurchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetPurchId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetReturnPurchaseRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetReturnSalesByCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("RetSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetReturnSalesByCust");
                });

            modelBuilder.Entity("DAL.Models.VwGetReturnSalesRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("RetSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetSaleId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetReturnSalesRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetRewardAndPenaltyRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RewardId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetRewardAndPenaltyRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetSalaryIssueDocRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("SalaryIssuDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryIssuDocId"), 1L, 1);

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetSalaryIssueDocRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetSalesInvByCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("InvId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetSalesInvByCust");
                });

            modelBuilder.Entity("DAL.Models.VwGetSalesInvoiceRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("InvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvId"), 1L, 1);

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetSalesInvoiceRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetSalesOfferByCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SalesOfferId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetSalesOfferByCust");
                });

            modelBuilder.Entity("DAL.Models.VwGetSalesOfferRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("SalesOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesOfferId"), 1L, 1);

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetSalesOfferRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetSalesOfferRequestByCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SalesOfferReqId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetSalesOfferRequestByCust");
                });

            modelBuilder.Entity("DAL.Models.VwGetSalesOfferRequestRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("SalesOfferReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesOfferReqId"), 1L, 1);

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetSalesOfferRequestRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetSalesOrderByCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Commision")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("InvDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("PaidPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalTaxValu")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetSalesOrderByCust");
                });

            modelBuilder.Entity("DAL.Models.VwGetSalesOrderRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("SalesOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesOrderId"), 1L, 1);

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetSalesOrderRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetStockRecriptByCust", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("IsCust")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("StockRecId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetStockRecriptByCust");
                });

            modelBuilder.Entity("DAL.Models.VwGetStockRecriptByVend", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("IsCust")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("StockRecId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetStockRecriptByVend");
                });

            modelBuilder.Entity("DAL.Models.VwGetStockRecriptRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("StockRecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockRecId"), 1L, 1);

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetStockRecriptRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetStockTransferNoteRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<int>("TranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TranId"), 1L, 1);

                    b.ToView("VW_GetStockTransferNoteRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetTripsRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"), 1L, 1);

                    b.ToView("VW_GetTripsRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetUserRoleRank", b =>
                {
                    b.Property<string>("RoleCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"), 1L, 1);

                    b.ToView("VW_GetUserRoleRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetVacationDocRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<int>("VacationDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacationDocId"), 1L, 1);

                    b.ToView("VW_GetVacationDocRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetVacationEditRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<int>("VacationEditDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacationEditDocId"), 1L, 1);

                    b.ToView("VW_GetVacationEditRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetVacationRequestRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<int>("VacRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacRequestId"), 1L, 1);

                    b.ToView("VW_GetVacationRequestRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetVehicleJobOrderRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<int>("VjorderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VJOrderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VjorderId"), 1L, 1);

                    b.ToView("VW_GetVehicleJobOrderRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetVehicleRenalContractRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<int>("VrentContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VRentContractId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrentContractId"), 1L, 1);

                    b.ToView("VW_GetVehicleRenalContractRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetVendorsRank", b =>
                {
                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorId"), 1L, 1);

                    b.ToView("VW_GetVendorsRank");
                });

            modelBuilder.Entity("DAL.Models.VwGetWeightCardRank", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<long?>("RowRank")
                        .HasColumnType("bigint");

                    b.Property<int>("ScaleCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScaleCardId"), 1L, 1);

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_GetWeightCardRank");
                });

            modelBuilder.Entity("DAL.Models.VwGlclassification", b =>
                {
                    b.Property<byte?>("AccCashFlow")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("AccCurrTrancCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccCurrTrancCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccCurrTrancDepitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccTotaCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccTotalDebitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<byte?>("AccountClassType")
                        .HasColumnType("tinyint");

                    b.Property<long?>("AccountCode")
                        .HasColumnType("bigint");

                    b.Property<byte?>("AccountGroup")
                        .HasColumnType("tinyint");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("AccountNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("AccountNature")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AccountType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceCreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceDebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("CalcMethod")
                        .HasColumnType("bit");

                    b.Property<long?>("Code")
                        .HasColumnType("bigint");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("NetBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenningBalanceCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenningBalanceDepitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_GLClassification");
                });

            modelBuilder.Entity("DAL.Models.VwHelpingAccountsSearch", b =>
                {
                    b.Property<decimal?>("AccCurrTrancCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("AccCurrTrancDepit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustVendDesc")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("CustVendDesc2")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<decimal?>("OpenningBalanceCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("OpenningBalanceDepit")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_HelpingAccountsSearch");
                });

            modelBuilder.Entity("DAL.Models.VwItemCard", b =>
                {
                    b.Property<decimal?>("BeforLastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("FirstPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("InOffer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAttributeItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDimension")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExpir")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSerialItem")
                        .HasColumnType("bit");

                    b.Property<int>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ItemCatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ItemCatDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("ItemLimit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ItemMax")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ItemType")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("ItemType2")
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("varchar(22)");

                    b.Property<decimal?>("LargePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCostManual")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("LastPurchDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("LastSalePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("MainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ManualPurchasePrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SecandPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ThirdPrice")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_ItemCard");
                });

            modelBuilder.Entity("DAL.Models.VwItemUnitGrand", b =>
                {
                    b.Property<string>("BarCode1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode10")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode11")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode12")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode13")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode14")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode15")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode4")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode5")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode6")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode7")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode8")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode9")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BasicUnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BeforLastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("CannotDevide")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsDefaultPurchas")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultSale")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ItemMainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemUnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ParentUnit")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price10")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price6")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price7")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price8")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price9")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitMainServerId")
                        .HasColumnType("int");

                    b.Property<string>("UnitNam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("VW_ItemUnitGrand");
                });

            modelBuilder.Entity("DAL.Models.VwItemUnitGrandAttribute", b =>
                {
                    b.Property<string>("BarCode1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode10")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode11")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode12")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode13")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode14")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode15")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode4")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode5")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode6")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode7")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode8")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BarCode9")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BasicUnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BeforLastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("CannotDevide")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsDefaultPurchas")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultSale")
                        .HasColumnType("bit");

                    b.Property<int>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemBatchCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchName1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchName2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ItemMainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemUnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("ParentUnit")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity3")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity4")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Quantity5")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitMainServerId")
                        .HasColumnType("int");

                    b.Property<string>("UnitNam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("UnitNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("VW_ItemUnitGrandAttribute");
                });

            modelBuilder.Entity("DAL.Models.VwItemUnitSummary", b =>
                {
                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BeforLastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("CannotDevide")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsDefaultPurchas")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultSale")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemMainServerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ItemUnitRate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitMainServerId")
                        .HasColumnType("int");

                    b.Property<string>("UnitNam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("VW_ItemUnitSummary");
                });

            modelBuilder.Entity("DAL.Models.VwJobOrder", b =>
                {
                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscAmount")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DiscPercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<decimal?>("GrandTotal")
                        .HasColumnType("numeric(38,6)");

                    b.Property<decimal?>("InstallationPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("IsDeliveredGoStock")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredMaterial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredProducts")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredScrap")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemBatchCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchName1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("ProducedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalEquipCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensesCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalGoStock")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJobsCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJpbOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalProductsPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalPurchInvCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalScrap")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalTasksCose")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_JobOrder");
                });

            modelBuilder.Entity("DAL.Models.VwLotNumberExpiryPartition", b =>
                {
                    b.Property<decimal?>("CoastAverage")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Disabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Fifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("FIFOCost");

                    b.Property<int?>("ItemAtrribBatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemBatchCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemBatchName1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte?>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Lifocost")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("LIFOCost");

                    b.Property<string>("LotNumberExpiry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LotNumberExpiryId")
                        .HasColumnType("int");

                    b.Property<long?>("MaxTversion")
                        .HasColumnType("bigint")
                        .HasColumnName("MaxTVersion");

                    b.Property<string>("PartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartDescE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<byte?>("PeriodType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ProdDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("PurNotReceived")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInNotebook")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyInWithoutCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyOutWithoutBalance")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("QtyPartiation")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<decimal?>("RequestedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ReservedQty")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SaleNotDelivered")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("SalesOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StorePartId")
                        .HasColumnType("int");

                    b.Property<string>("Ttype")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("TType")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("Tversion")
                        .HasColumnType("bigint")
                        .HasColumnName("TVersion");

                    b.Property<decimal?>("WithoutCost")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_LotNumberExpiryPartition");
                });

            modelBuilder.Entity("DAL.Models.VwProdItemAttribute", b =>
                {
                    b.Property<string>("AttributCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("AttributId")
                        .HasColumnType("int");

                    b.Property<string>("AttributName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AttributName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<int>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ParentUnit")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitNam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("UnitNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("UnittRate")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_ProdItemAttributes");
                });

            modelBuilder.Entity("DAL.Models.VwProdItemUnit", b =>
                {
                    b.Property<int>("BasUnitId")
                        .HasColumnType("int");

                    b.Property<bool?>("CannotDevide")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultPurchas")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultSale")
                        .HasColumnType("bit");

                    b.Property<int>("ItemCardId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ItemMainServerId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentUnit")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitMainServerId")
                        .HasColumnType("int");

                    b.Property<string>("UnitNam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitNameE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("UnittRate")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_ProdItemUnits");
                });

            modelBuilder.Entity("DAL.Models.VwProdWorkOrderSearch", b =>
                {
                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustomerCharged")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocBarCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool>("Executed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredMaterial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredProducts")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeliveredScrap")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPos")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("NetExpenses")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("PackageCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ShiftCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShiftsName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShiftsName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("TotalEquipCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalEquipCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalExpensesCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalGoStockCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalItemCost")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalJpbOrder")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalMaterialCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalProductCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalScrap")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalScrapCostEstimate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("TotalServices")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("Vw_Prod_WorkOrderSearch");
                });

            modelBuilder.Entity("DAL.Models.VwQualityItemDeliverySearch", b =>
                {
                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocBarCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool>("Executed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPos")
                        .HasColumnType("bit");

                    b.Property<int>("ItemDeliverId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemRecCheckBookId")
                        .HasColumnType("int");

                    b.Property<string>("ItemRecCheckDocBarCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemRecCheckDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("ItemRecCheckEmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemRecCheckEmpName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ItemRecCheckEmpName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("ItemRecCheckPackageCount")
                        .HasColumnType("int");

                    b.Property<int?>("ItemRecCheckTermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ItemRecCheckTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("PackageCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ShiftCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShiftsName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShiftsName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("Vw_Quality_ItemDeliverySearch");
                });

            modelBuilder.Entity("DAL.Models.VwQualityItemRecCheckSearch", b =>
                {
                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocBarCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool>("Executed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPos")
                        .HasColumnType("bit");

                    b.Property<int>("ItemRecQualityId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemRecieveBookId")
                        .HasColumnType("int");

                    b.Property<string>("ItemRecieveDocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<int?>("ItemRecieveTermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ItemRecieveTrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("PackageCount")
                        .HasColumnType("int");

                    b.Property<int?>("ProdItemRecId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ShiftCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShiftsName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShiftsName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("Vw_Quality_ItemRecCheckSearch");
                });

            modelBuilder.Entity("DAL.Models.VwQualityItemRecieveSearch", b =>
                {
                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CurrencyDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("DefualtCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool>("Executed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPos")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("ProdItemRecId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("ShiftCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShiftsName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ShiftsName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TermCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("TermType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TotalPieces")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("Vw_Quality_ItemRecieveSearch");
                });

            modelBuilder.Entity("DAL.Models.VwReservedQty", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal>("QuantityOut")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("Reserved")
                        .HasColumnType("numeric(38,10)")
                        .HasColumnName("reserved");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_reservedQTY");
                });

            modelBuilder.Entity("DAL.Models.VwSearchAllAccount", b =>
                {
                    b.Property<byte?>("AccCashFlow")
                        .HasColumnType("tinyint");

                    b.Property<string>("AccDesc")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("AccDesc2")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("AccType")
                        .HasColumnType("int");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("AccountGroup")
                        .HasColumnType("tinyint");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountLevel")
                        .HasColumnType("int");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("AccountNature")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AccountType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("BalanceCreditCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceDebitCurncy")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("CalcMethod")
                        .HasColumnType("bit");

                    b.ToView("VW_SearchAllAccounts");
                });

            modelBuilder.Entity("DAL.Models.VwSearchInstallment", b =>
                {
                    b.Property<decimal?>("ActualSalesPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int>("Cc")
                        .HasColumnType("int")
                        .HasColumnName("cc");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ContractTrNo")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<bool?>("IsContract")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PaidInCash")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PayStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.ToView("VW_SearchInstallments");
                });

            modelBuilder.Entity("DAL.Models.VwSearchRealStatUnit", b =>
                {
                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Cc")
                        .HasColumnType("int")
                        .HasColumnName("cc");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ContractDocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RentDocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Rented")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReserveDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Reserved")
                        .HasColumnType("bit");

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RoomCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("SharePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ShareValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Sold")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_SearchRealStatUnits");
                });

            modelBuilder.Entity("DAL.Models.VwSearchUnitReservation", b =>
                {
                    b.Property<string>("AccountDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ActualSalesPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Cc")
                        .HasColumnType("int")
                        .HasColumnName("cc");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ContractDocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ContractTrNo")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsContract")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRental")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("PaidInCash")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PayStartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("RentDocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Rented")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReserveDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Reserved")
                        .HasColumnType("bit");

                    b.Property<int?>("ResourceAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("ResourceType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RoomCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("SharePercent")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("ShareValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("Sold")
                        .HasColumnType("bit");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitArea")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("UnitMeterPrice")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_SearchUnitReservations");
                });

            modelBuilder.Entity("DAL.Models.VwsimpleAllTransaction", b =>
                {
                    b.Property<byte?>("AccCashFlow")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AccountBranching")
                        .HasColumnType("tinyint");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("AccountGroup")
                        .HasColumnType("tinyint");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountNameA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("AccountNature")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("BalanceCurrencyAfterCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceCurrencyAfterDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceLocalAfterCredit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("BalanceLocalAfterDebit")
                        .HasColumnType("numeric(38,10)");

                    b.Property<bool?>("CalcMethod")
                        .HasColumnType("bit");

                    b.Property<long?>("ChrtAccountCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("CreditCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("CreditLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DebitCurrency")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("DebitLocal")
                        .HasColumnType("numeric(38,10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("DetailedTableEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<int?>("HelpAccId")
                        .HasColumnType("int");

                    b.Property<string>("HelpAccType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Idname")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("IDname");

                    b.Property<bool?>("IsHelpAcc")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOpenning")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int>("PostQueId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric(38,10)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(303)
                        .HasColumnType("nvarchar(303)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("RemarksA")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength()
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SourcTyp")
                        .IsRequired()
                        .HasMaxLength(33)
                        .IsUnicode(false)
                        .HasColumnType("varchar(33)");

                    b.Property<string>("TableCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TableEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VWSimpleAllTransactions");
                });

            modelBuilder.Entity("DAL.Models.VwVendorCategory", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CatDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VendorDescE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.ToView("VW_VendorCategory");
                });

            modelBuilder.Entity("DAL.Models.VwWeightCard", b =>
                {
                    b.Property<string>("AddField1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddField2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Addemp1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("addemp1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Addemp2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("addemp2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BodyNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("DocTrNo")
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)");

                    b.Property<string>("DriverCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DriverName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Empcode2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empcode2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("InOrOut")
                        .HasColumnType("bit");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MotorNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PartDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("RegNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ScaleCardId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<byte?>("SourceType")
                        .HasColumnType("tinyint");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("StoreDescA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<string>("VehiclRemarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("VehicleCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("VehicleName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Weight1Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Weight1Time")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Weight2Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Weight2Time")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("WeightQty1")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeightQty2")
                        .HasColumnType("numeric(38,10)");

                    b.Property<decimal?>("WeightQtyDiff")
                        .HasColumnType("numeric(38,10)");

                    b.ToView("VW_WeightCard");
                });

            modelBuilder.Entity("DAL.Models.VwWorkForcExecluded", b =>
                {
                    b.Property<DateTime?>("AcceptAgeFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("AcceptAgeTo")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("BloodExecludId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("EmbassyDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("PassPortExpiry")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SeasonName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_WorkForcExecluded");
                });

            modelBuilder.Entity("DAL.Models.VwWorkForcTemplate", b =>
                {
                    b.Property<DateTime?>("AcceptAgeFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("AcceptAgeTo")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("EmbassyDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("PassPortExpiry")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SeasonName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<int>("WftempId")
                        .HasColumnType("int")
                        .HasColumnName("WFTempId");

                    b.ToView("VW_WorkForcTemplates");
                });

            modelBuilder.Entity("DAL.Models.VwWorkForcTestResult", b =>
                {
                    b.Property<DateTime?>("AcceptAgeFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("AcceptAgeTo")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescA")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CustomerDescE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("EmbassyDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("PassPortExpiry")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("SeasonName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("TestResultId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.ToView("VW_WorkForcTestResults");
                });

            modelBuilder.Entity("DAL.Models.WorForcFirm", b =>
                {
                    b.Property<int>("WfcompId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WFCompId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WfcompId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("CompCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("TaxRefNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("WfcompId");

                    b.ToTable("WorForc_Firms", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcActionType", b =>
                {
                    b.Property<int>("ActionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionTypeId"), 1L, 1);

                    b.Property<string>("ActionCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("StopPassport")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("ActionTypeId");

                    b.ToTable("WorkForc_ActionTypes", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcBloodExeclude", b =>
                {
                    b.Property<int>("BloodExecludId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BloodExecludId"), 1L, 1);

                    b.Property<int?>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BloodExecludId");

                    b.ToTable("WorkForc_BloodExeclude", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcBloodExecludeDetail", b =>
                {
                    b.Property<int>("ExecludPassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExecludPassId"), 1L, 1);

                    b.Property<int?>("BloodExecludId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Succeeded")
                        .HasColumnType("bit");

                    b.Property<int?>("WfpassPortId")
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortId");

                    b.HasKey("ExecludPassId");

                    b.HasIndex("BloodExecludId");

                    b.ToTable("WorkForc_BloodExecludeDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcFirstCustExeclude", b =>
                {
                    b.Property<int>("ExecludId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExecludId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ExecludId");

                    b.ToTable("WorkForc_FirstCustExeclude", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcFirstCustExecludeDetail", b =>
                {
                    b.Property<int>("ExecludPassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExecludPassId"), 1L, 1);

                    b.Property<int?>("ExecludId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("WfpassPortId")
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortId");

                    b.HasKey("ExecludPassId");

                    b.HasIndex("ExecludId");

                    b.ToTable("WorkForc_FirstCustExecludeDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcPassPort", b =>
                {
                    b.Property<int>("WfpassPortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WfpassPortId"), 1L, 1);

                    b.Property<int?>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BankSerial")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("BlackList")
                        .HasColumnType("bit");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContractPath")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("ContractPrintDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("ContractPrinted")
                        .HasColumnType("bit");

                    b.Property<int?>("ContractPrintedUser")
                        .HasColumnType("int");

                    b.Property<string>("CountryEncCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustSerial")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("EngazKey")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("EngazPayed")
                        .HasColumnType("bit");

                    b.Property<bool?>("Execluded")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullNameen")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IdexpiryDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("IDExpiryDate");

                    b.Property<DateTime?>("IdissueDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("IDIssueDate");

                    b.Property<string>("Idmage1")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("IDmage1");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<byte?>("KidsNo")
                        .HasColumnType("tinyint");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("MaritalStatus")
                        .HasColumnType("tinyint")
                        .HasComment("0 single,1 married,2 married and have kids");

                    b.Property<byte?>("MilitaryService")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name2en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name3en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name4en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name5en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name6")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name6en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name7")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name7en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nameen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassOwnerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassPortImage")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("PassportExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PassportIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassportIssuePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassportNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("PermissionUploadDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PermissionUploadNum")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("PermissionUploaded")
                        .HasColumnType("bit");

                    b.Property<string>("Phone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Phone3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ReportSerial")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<bool?>("SignOff")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SignOffDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("VisaNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("WfcompId")
                        .HasColumnType("int")
                        .HasColumnName("WFCompId");

                    b.HasKey("WfpassPortId");

                    b.HasIndex(new[] { "Code" }, "Code_UniqueCode")
                        .IsUnique();

                    b.ToTable("WorkForc_PassPorts", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcPassPortsArchive", b =>
                {
                    b.Property<int>("WfpassPortArchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortArchId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WfpassPortArchId"), 1L, 1);

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("Execluded")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullNameen")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IdexpiryDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("IDExpiryDate");

                    b.Property<DateTime?>("IdissueDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("IDIssueDate");

                    b.Property<string>("Idmage1")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("IDmage1");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<byte?>("KidsNo")
                        .HasColumnType("tinyint");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte?>("MaritalStatus")
                        .HasColumnType("tinyint")
                        .HasComment("0 single,1 married,2 married and have kids");

                    b.Property<byte?>("MilitaryService")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name2en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name3en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name4en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name5en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name6")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name6en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name7")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name7en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nameen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassOwnerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassPortImage")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("PassportExpiryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PassportIssueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassportIssuePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassportNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Phone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Phone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Phone3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("WfpassPortId")
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortId");

                    b.HasKey("WfpassPortArchId");

                    b.ToTable("WorkForc_PassPortsArchives", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcProblem", b =>
                {
                    b.Property<int>("WorkForcProbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WorkForc_ProbId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkForcProbId"), 1L, 1);

                    b.Property<string>("Complaint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplaintType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WfpassPortId")
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortId");

                    b.HasKey("WorkForcProbId");

                    b.ToTable("WorkForc_Problems", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcQueue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Dateat")
                        .HasColumnType("date")
                        .HasColumnName("dateat");

                    b.Property<string>("PassportNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Rolnum")
                        .HasColumnType("int")
                        .HasColumnName("rolnum");

                    b.Property<int?>("Seasonid")
                        .HasColumnType("int")
                        .HasColumnName("seasonid");

                    b.Property<TimeSpan?>("Timeat")
                        .HasColumnType("time")
                        .HasColumnName("timeat");

                    b.Property<int?>("WfpassPortId")
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortId");

                    b.HasKey("Id");

                    b.ToTable("WorkForc_Queue", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcSeason", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeasonId"), 1L, 1);

                    b.Property<DateTime?>("AcceptAgeFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("AcceptAgeTo")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CountryEnc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("EmbassyDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsCurrentSeason")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPreviousSeason")
                        .HasColumnType("bit");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<DateTime?>("PassPortExpiry")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SeasonCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("SeasonId");

                    b.ToTable("WorkForc_Seasons", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcSecondCustExeclude", b =>
                {
                    b.Property<int>("ScndExecludId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScndExecludId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("ScndExecludId");

                    b.ToTable("WorkForc_SecondCustExeclude", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcSecondCustExecludeDetail", b =>
                {
                    b.Property<int>("ExecludPassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExecludPassId"), 1L, 1);

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ScndExecludId")
                        .HasColumnType("int");

                    b.Property<int?>("WfpassPortId")
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortId");

                    b.HasKey("ExecludPassId");

                    b.HasIndex("ScndExecludId");

                    b.ToTable("WorkForc_SecondCustExecludeDetail", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcTempId", b =>
                {
                    b.Property<int>("WftempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WFtempId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WftempId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<decimal?>("Grade")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("Grade2")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ImagePath2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath3")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassPortNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PersonID");

                    b.Property<byte[]>("PersonImage")
                        .HasColumnType("image");

                    b.Property<string>("PersonImagePath")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<bool?>("Succeeded")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("WftempId");

                    b.ToTable("WorkForc_TempIds", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcTemplate", b =>
                {
                    b.Property<int>("WftempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WFTempId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WftempId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("WftempId");

                    b.ToTable("WorkForc_Templates", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcTemplatesDetail", b =>
                {
                    b.Property<int>("WftempDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WFTempDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WftempDetailId"), 1L, 1);

                    b.Property<int?>("WfpassPortId")
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortId");

                    b.Property<int>("WftempId")
                        .HasColumnType("int")
                        .HasColumnName("WFTempId");

                    b.HasKey("WftempDetailId");

                    b.HasIndex("WftempId");

                    b.ToTable("WorkForc_TemplatesDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcTestResult", b =>
                {
                    b.Property<int>("TestResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestResultId"), 1L, 1);

                    b.Property<int?>("Aid")
                        .HasColumnType("int")
                        .HasColumnName("AId");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit")
                        .HasComment("True  Closed ;  False  Not Closed");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("FinancialIntervalsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManualTrNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PermPrinted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PermPrintedAt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Postedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Remarks3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("TermCostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TermCostCenterValue")
                        .HasColumnType("numeric(38,10)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TrDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("TrNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UncloseDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("UnclosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("TestResultId");

                    b.ToTable("WorkForc_TestResults", (string)null);
                });

            modelBuilder.Entity("DAL.Models.WorkForcTestResultsDetail", b =>
                {
                    b.Property<int>("TestResultDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestResultDetailId"), 1L, 1);

                    b.Property<decimal?>("Grad")
                        .HasColumnType("numeric(18,5)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Succeeded")
                        .HasColumnType("bit");

                    b.Property<int?>("TestResultId")
                        .HasColumnType("int");

                    b.Property<int?>("WfpassPortId")
                        .HasColumnType("int")
                        .HasColumnName("WFPassPortId");

                    b.Property<int?>("WftempId")
                        .HasColumnType("int")
                        .HasColumnName("WFtempId");

                    b.HasKey("TestResultDetailId");

                    b.HasIndex("TestResultId");

                    b.ToTable("WorkForc_TestResultsDetails", (string)null);
                });

            modelBuilder.Entity("DAL.Models.YearMonthe", b =>
                {
                    b.Property<int>("YearMonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YearMonthId"), 1L, 1);

                    b.Property<string>("CustomField")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_BIN");

                    b.Property<int?>("FinancialYearsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActual")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNonActual")
                        .HasColumnType("bit");

                    b.Property<int?>("MonthDayes")
                        .HasColumnType("int");

                    b.Property<string>("MontnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Arabic_BIN");

                    b.HasKey("YearMonthId");

                    b.ToTable("YearMonthes");
                });

            modelBuilder.Entity("DAL.User.EmiratesUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DAL.Models.AnAnimalDeathDetail", b =>
                {
                    b.HasOne("DAL.Models.AnAnimalDeath", "AnDeath")
                        .WithMany("AnAnimalDeathDetails")
                        .HasForeignKey("AnDeathId")
                        .HasConstraintName("FK_An_AnimalDeathDetail_An_AnimalDeath");

                    b.Navigation("AnDeath");
                });

            modelBuilder.Entity("DAL.Models.AnAnimalMidicin", b =>
                {
                    b.HasOne("DAL.Models.AnMedicin", "AnMidicin")
                        .WithMany("AnAnimalMidicins")
                        .HasForeignKey("AnMidicinId")
                        .IsRequired()
                        .HasConstraintName("FK_An_ANimalMidicin_An_Medicin");

                    b.HasOne("DAL.Models.AnAnimalType", "AnType")
                        .WithMany("AnAnimalMidicins")
                        .HasForeignKey("AnTypeId")
                        .HasConstraintName("FK_An_ANimalMidicin_An_AnimalType");

                    b.Navigation("AnMidicin");

                    b.Navigation("AnType");
                });

            modelBuilder.Entity("DAL.Models.AnAnimalWeightRateDetail", b =>
                {
                    b.HasOne("DAL.Models.AnAnimalWeightRate", "AnWeightRate")
                        .WithMany("AnAnimalWeightRateDetails")
                        .HasForeignKey("AnWeightRateId")
                        .HasConstraintName("FK_An_AnimalWeightRateDetail_An_AnimalWeightRate");

                    b.Navigation("AnWeightRate");
                });

            modelBuilder.Entity("DAL.Models.AnNewBornDetail", b =>
                {
                    b.HasOne("DAL.Models.AnNewBorn", "AnBorn")
                        .WithMany("AnNewBornDetails")
                        .HasForeignKey("AnBornId")
                        .HasConstraintName("FK_An_NewBornDetail_An_NewBorn");

                    b.Navigation("AnBorn");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetAddDocDetail", b =>
                {
                    b.HasOne("DAL.Models.AssetAssetAddDoc", "AssetAdd")
                        .WithMany("AssetAssetAddDocDetails")
                        .HasForeignKey("AssetAddId")
                        .HasConstraintName("FK_Asset_AssetAddDocDetail_Asset_AssetAddDoc");

                    b.Navigation("AssetAdd");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetCard", b =>
                {
                    b.HasOne("DAL.Models.AssetAssetCategory", "AssetCat")
                        .WithMany("AssetAssetCards")
                        .HasForeignKey("AssetCatId")
                        .HasConstraintName("FK_Asset_AssetCard_Asset_AssetCategory");

                    b.Navigation("AssetCat");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetCategory", b =>
                {
                    b.HasOne("DAL.Models.AssetAssetCategory", "ParentAssetCat")
                        .WithMany("InverseParentAssetCat")
                        .HasForeignKey("ParentAssetCatId")
                        .HasConstraintName("FK_Asset_AssetCategory_Asset_AssetCategory");

                    b.Navigation("ParentAssetCat");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetContact", b =>
                {
                    b.HasOne("DAL.Models.AssetAssetCard", "Asset")
                        .WithMany("AssetAssetContacts")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_Asset_AssetContacts_Asset_AssetCard");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetDeductDocDetail", b =>
                {
                    b.HasOne("DAL.Models.AssetAssetDeductDoc", "AssetDeduct")
                        .WithMany("AssetAssetDeductDocDetails")
                        .HasForeignKey("AssetDeductId")
                        .HasConstraintName("FK_Asset_AssetDeductDocDetail_Asset_AssetDeductDoc");

                    b.Navigation("AssetDeduct");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetDeliverDocDetail", b =>
                {
                    b.HasOne("DAL.Models.AssetAssetDeliverDoc", "DeliverAsset")
                        .WithMany("AssetAssetDeliverDocDetails")
                        .HasForeignKey("DeliverAssetId")
                        .HasConstraintName("FK_Asset_AssetDeliverDocDetail_Asset_AssetDeliverDoc");

                    b.Navigation("DeliverAsset");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetFixDocDetail", b =>
                {
                    b.HasOne("DAL.Models.AssetAssetFixDoc", "FixAsset")
                        .WithMany("AssetAssetFixDocDetails")
                        .HasForeignKey("FixAssetId")
                        .HasConstraintName("FK_Asset_AssetFixDocDetail_Asset_AssetFixDoc");

                    b.Navigation("FixAsset");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetMoveDocDetail", b =>
                {
                    b.HasOne("DAL.Models.AssetAssetMoveDoc", "AssetMov")
                        .WithMany("AssetAssetMoveDocDetails")
                        .HasForeignKey("AssetMovId")
                        .HasConstraintName("FK_Asset_AssetMoveDocDetail_Asset_AssetMoveDoc");

                    b.Navigation("AssetMov");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetReceiveDocDetail", b =>
                {
                    b.HasOne("DAL.Models.AssetAssetReceiveDoc", "ReceiveAsset")
                        .WithMany("AssetAssetReceiveDocDetails")
                        .HasForeignKey("ReceiveAssetId")
                        .HasConstraintName("FK_Asset_AssetReceiveDocDetail_Asset_AssetReceiveDoc");

                    b.Navigation("ReceiveAsset");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetSettingDetail", b =>
                {
                    b.HasOne("DAL.Models.AssetAssetSetting", "AssetSet")
                        .WithMany("AssetAssetSettingDetails")
                        .HasForeignKey("AssetSetId")
                        .HasConstraintName("FK_Asset_AssetSettingDetails_Asset_AssetSettings");

                    b.Navigation("AssetSet");
                });

            modelBuilder.Entity("DAL.Models.AssetDepreciationDocDetail", b =>
                {
                    b.HasOne("DAL.Models.AssetDepreciationDoc", "DeprDoc")
                        .WithMany("AssetDepreciationDocDetails")
                        .HasForeignKey("DeprDocId")
                        .HasConstraintName("FK_Asset_DepreciationDocDetail_Asset_DepreciationDoc");

                    b.Navigation("DeprDoc");
                });

            modelBuilder.Entity("DAL.Models.BnkBankNoticeDetail", b =>
                {
                    b.HasOne("DAL.Models.BnkBankNotice", "BankNotic")
                        .WithMany("BnkBankNoticeDetails")
                        .HasForeignKey("BankNoticId")
                        .HasConstraintName("FK_BNK_BankNoticeDetail_BNk_BankNotice");

                    b.Navigation("BankNotic");
                });

            modelBuilder.Entity("DAL.Models.CalAccChrtDailyAssist", b =>
                {
                    b.HasOne("DAL.Models.CalAccountChart", "Account")
                        .WithMany("CalAccChrtDailyAssists")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cal_AccChrtDailyAssist_Cal_AccountChart");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DAL.Models.CalAccountChart", b =>
                {
                    b.HasOne("DAL.Models.SysAnalyticalCode", "AidNavigation")
                        .WithMany("CalAccountCharts")
                        .HasForeignKey("Aid")
                        .HasConstraintName("FK_Cal_AccountChart_Sys_AnalyticalCodes");

                    b.Navigation("AidNavigation");
                });

            modelBuilder.Entity("DAL.Models.CalAccountClaasiJoin", b =>
                {
                    b.HasOne("DAL.Models.CalAccountChart", "Account")
                        .WithMany("CalAccountClaasiJoins")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cal_AccountClaasiJoin_Cal_AccountChart");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DAL.Models.CalAccountUser", b =>
                {
                    b.HasOne("DAL.Models.CalAccountChart", "Account")
                        .WithMany("CalAccountUsers")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cal_AccountUsers_Cal_AccountChart");

                    b.HasOne("DAL.Models.GUser", "User")
                        .WithMany("CalAccountUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Cal_AccountUsers_G_Users");

                    b.Navigation("Account");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Models.CalAssetAccount", b =>
                {
                    b.HasOne("DAL.Models.AssetAssetCard", "Asset")
                        .WithMany("CalAssetAccounts")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_Cal_AssetAccounts_Asset_AssetCard");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("DAL.Models.CalBudgetDetail", b =>
                {
                    b.HasOne("DAL.Models.CalBudget", "Budget")
                        .WithMany("CalBudgetDetails")
                        .HasForeignKey("BudgetId")
                        .HasConstraintName("FK_Cal_BudgetDetails_Cal_Budget");

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("DAL.Models.CalBusinessPartnerAccount", b =>
                {
                    b.HasOne("DAL.Models.MsBusinessPartner", "Bspartner")
                        .WithMany("CalBusinessPartnerAccounts")
                        .HasForeignKey("BspartnerId")
                        .HasConstraintName("FK_Cal_BusinessPartnerAccounts_Ms_BusinessPartners");

                    b.Navigation("Bspartner");
                });

            modelBuilder.Entity("DAL.Models.CalCostCenterAccount", b =>
                {
                    b.HasOne("DAL.Models.CalAccountChart", "Account")
                        .WithMany("CalCostCenterAccounts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cal_CostCenterAccount_Cal_AccountChart");

                    b.HasOne("DAL.Models.CalCostCenter", "CostCenter")
                        .WithMany("CalCostCenterAccounts")
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Cal_CostCenterAccount_Cal_CostCenters");

                    b.Navigation("Account");

                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("DAL.Models.CalCustAccount", b =>
                {
                    b.HasOne("DAL.Models.MsCustomer", "Customer")
                        .WithMany("CalCustAccounts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Cal_CustAccounts_MS_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DAL.Models.CalEmpAccount", b =>
                {
                    b.HasOne("DAL.Models.CalAccountChart", "Account")
                        .WithMany("CalEmpAccounts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cal_EmpAccounts_Cal_AccountChart");

                    b.HasOne("DAL.Models.HrEmployee", "Emp")
                        .WithMany("CalEmpAccounts")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Cal_EmpAccounts_Hr_Employees");

                    b.Navigation("Account");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("DAL.Models.CalJurnalDetail", b =>
                {
                    b.HasOne("DAL.Models.MsCurrency", "Currency")
                        .WithMany("CalJurnalDetails")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Cal_JurnalDetail_MS_Currency");

                    b.HasOne("DAL.Models.CalJurnalEntry", "Jurnal")
                        .WithMany("CalJurnalDetails")
                        .HasForeignKey("JurnalId")
                        .HasConstraintName("FK_Cal_JurnalDetail_Cal_JurnalEntry");

                    b.Navigation("Currency");

                    b.Navigation("Jurnal");
                });

            modelBuilder.Entity("DAL.Models.CalJurnalEntry", b =>
                {
                    b.HasOne("DAL.Models.SysAnalyticalCode", "AidNavigation")
                        .WithMany("CalJurnalEntries")
                        .HasForeignKey("Aid")
                        .HasConstraintName("FK_Cal_JurnalEntry_Sys_AnalyticalCodes");

                    b.HasOne("DAL.Models.MsStore", "Stor")
                        .WithMany("CalJurnalEntries")
                        .HasForeignKey("StorId")
                        .HasConstraintName("FK_Cal_JurnalEntry_MS_Stores");

                    b.Navigation("AidNavigation");

                    b.Navigation("Stor");
                });

            modelBuilder.Entity("DAL.Models.CalVendAccount", b =>
                {
                    b.HasOne("DAL.Models.MsVendor", "Vendor")
                        .WithMany("CalVendAccounts")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Cal_VendAccounts_MS_Vendor");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("DAL.Models.CodAccountCategory", b =>
                {
                    b.HasOne("DAL.Models.SysAnalyticalCode", "AidNavigation")
                        .WithMany("CodAccountCategories")
                        .HasForeignKey("Aid")
                        .HasConstraintName("FK_Cod_AccountCategories_Sys_AnalyticalCodes");

                    b.Navigation("AidNavigation");
                });

            modelBuilder.Entity("DAL.Models.CodAccountClassification", b =>
                {
                    b.HasOne("DAL.Models.CodAccountCategory", "AccountCat")
                        .WithMany("CodAccountClassifications")
                        .HasForeignKey("AccountCatId")
                        .HasConstraintName("FK_Cod_AccountClassification_Cod_AccountCategories");

                    b.Navigation("AccountCat");
                });

            modelBuilder.Entity("DAL.Models.CodCity", b =>
                {
                    b.HasOne("DAL.Models.CodRegion", "Region")
                        .WithMany("CodCities")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_Cod_City_Cod_Region");

                    b.HasOne("DAL.Models.SysCity", "SysCity")
                        .WithMany("CodCities")
                        .HasForeignKey("SysCityId")
                        .HasConstraintName("FK_Cod_City_Sys_City");

                    b.Navigation("Region");

                    b.Navigation("SysCity");
                });

            modelBuilder.Entity("DAL.Models.CodCountry", b =>
                {
                    b.HasOne("DAL.Models.SysCountry", "CountryCodeNavigation")
                        .WithMany("CodCountries")
                        .HasForeignKey("CountryCode")
                        .HasConstraintName("FK_Cod_Country_Sys_Countries");

                    b.Navigation("CountryCodeNavigation");
                });

            modelBuilder.Entity("DAL.Models.CodDailyAssistance", b =>
                {
                    b.HasOne("DAL.Models.CalAccountChart", "Account")
                        .WithMany("CodDailyAssistances")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Cod_DailyAssistance_Cal_AccountChart");

                    b.HasOne("DAL.Models.SysAnalyticalCode", "AidNavigation")
                        .WithMany("CodDailyAssistances")
                        .HasForeignKey("Aid")
                        .HasConstraintName("FK_Cod_DailyAssistance_Sys_AnalyticalCodes");

                    b.Navigation("Account");

                    b.Navigation("AidNavigation");
                });

            modelBuilder.Entity("DAL.Models.CodInstallmentTempsDetail", b =>
                {
                    b.HasOne("DAL.Models.CodInstallmentTemp", "InstallTemp")
                        .WithMany("CodInstallmentTempsDetails")
                        .HasForeignKey("InstallTempId")
                        .HasConstraintName("FK_Cod_InstallmentTempsDetail_Cod_InstallmentTemps");

                    b.Navigation("InstallTemp");
                });

            modelBuilder.Entity("DAL.Models.CodLandPermitActivJoin", b =>
                {
                    b.HasOne("DAL.Models.CodLand", "Land")
                        .WithMany("CodLandPermitActivJoins")
                        .HasForeignKey("LandId")
                        .HasConstraintName("FK_Cod_LandPermitActivJoin_Cod_Lands");

                    b.HasOne("DAL.Models.CodLandPermtActiv", "LandPermitActiv")
                        .WithMany("CodLandPermitActivJoins")
                        .HasForeignKey("LandPermitActivId")
                        .HasConstraintName("FK_Cod_LandPermitActivJoin_Cod_LandPermtActiv");

                    b.Navigation("Land");

                    b.Navigation("LandPermitActiv");
                });

            modelBuilder.Entity("DAL.Models.CodLandPosJoin", b =>
                {
                    b.HasOne("DAL.Models.CodLand", "Land")
                        .WithMany("CodLandPosJoins")
                        .HasForeignKey("LandId")
                        .HasConstraintName("FK_Cod_LandPosJoin_Cod_Lands");

                    b.HasOne("DAL.Models.CodLandPosition", "LandPos")
                        .WithMany("CodLandPosJoins")
                        .HasForeignKey("LandPosId")
                        .HasConstraintName("FK_Cod_LandPosJoin_Cod_LandPositions");

                    b.Navigation("Land");

                    b.Navigation("LandPos");
                });

            modelBuilder.Entity("DAL.Models.CodLandRetainResJoin", b =>
                {
                    b.HasOne("DAL.Models.CodLand", "Land")
                        .WithMany("CodLandRetainResJoins")
                        .HasForeignKey("LandId")
                        .HasConstraintName("FK_Cod_LandRetainResJoin_Cod_Lands");

                    b.HasOne("DAL.Models.CodLandRetainRson", "LandRetainRes")
                        .WithMany("CodLandRetainResJoins")
                        .HasForeignKey("LandRetainResId")
                        .HasConstraintName("FK_Cod_LandRetainResJoin_Cod_LandRetainRsons");

                    b.Navigation("Land");

                    b.Navigation("LandRetainRes");
                });

            modelBuilder.Entity("DAL.Models.CodRegion", b =>
                {
                    b.HasOne("DAL.Models.CodCountry", "Country")
                        .WithMany("CodRegions")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Cod_Region_Cod_Country");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Models.ContrInstallMentDetail", b =>
                {
                    b.HasOne("DAL.Models.ContrInstallMent", "Install")
                        .WithMany("ContrInstallMentDetails")
                        .HasForeignKey("InstallId")
                        .HasConstraintName("FK_Contr_InstallMentDetail_Contr_InstallMent");

                    b.Navigation("Install");
                });

            modelBuilder.Entity("DAL.Models.CrmLead", b =>
                {
                    b.HasOne("DAL.Models.CrmLeadType", "LeadType")
                        .WithMany("CrmLeads")
                        .HasForeignKey("LeadTypeId")
                        .HasConstraintName("FK_CRM_Leads_CRM_LeadTypes");

                    b.HasOne("DAL.Models.CrmMarketChannel", "MarketChannel")
                        .WithMany("CrmLeads")
                        .HasForeignKey("MarketChannelId")
                        .HasConstraintName("FK_CRM_Leads_CRM_MarketChannels");

                    b.Navigation("LeadType");

                    b.Navigation("MarketChannel");
                });

            modelBuilder.Entity("DAL.Models.CrmLeadsMembersDetail", b =>
                {
                    b.HasOne("DAL.Models.CrmLeadsMember", "LeadMember")
                        .WithMany("CrmLeadsMembersDetails")
                        .HasForeignKey("LeadMemberId")
                        .HasConstraintName("FK_CRM_LeadsMembersDetails_CRM_LeadsMembers");

                    b.Navigation("LeadMember");
                });

            modelBuilder.Entity("DAL.Models.CrmLeadsMembersJoin", b =>
                {
                    b.HasOne("DAL.Models.CrmLead", "Lead")
                        .WithMany("CrmLeadsMembersJoins")
                        .HasForeignKey("LeadId")
                        .HasConstraintName("FK_CRM_LeadsMembersJoin_CRM_Leads");

                    b.HasOne("DAL.Models.CrmLeadsMember", "LeadMember")
                        .WithMany("CrmLeadsMembersJoins")
                        .HasForeignKey("LeadMemberId")
                        .HasConstraintName("FK_CRM_LeadsMembersJoin_CRM_LeadsMembers");

                    b.Navigation("Lead");

                    b.Navigation("LeadMember");
                });

            modelBuilder.Entity("DAL.Models.CrmSalesPlanDetail", b =>
                {
                    b.HasOne("DAL.Models.CrmSalesPlan", "SalesPlan")
                        .WithMany("CrmSalesPlanDetails")
                        .HasForeignKey("SalesPlanId")
                        .HasConstraintName("FK_CRM_SalesPlanDetail_CRM_SalesPlan");

                    b.Navigation("SalesPlan");
                });

            modelBuilder.Entity("DAL.Models.CrmSurvey", b =>
                {
                    b.HasOne("DAL.Models.CrmVisitType", "VisitType")
                        .WithMany("CrmSurveys")
                        .HasForeignKey("VisitTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_CRM_Survey_CRM_VisitTypes");

                    b.Navigation("VisitType");
                });

            modelBuilder.Entity("DAL.Models.CrmTeamMember", b =>
                {
                    b.HasOne("DAL.Models.CrmTeam", "Team")
                        .WithMany("CrmTeamMembers")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_CRM_TeamMembers_CRM_Teams");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("DAL.Models.CrmVisit", b =>
                {
                    b.HasOne("DAL.Models.CrmVisitType", "VisitType")
                        .WithMany("CrmVisits")
                        .HasForeignKey("VisitTypeId")
                        .HasConstraintName("FK_CRM_Visits_CRM_VisitTypes");

                    b.Navigation("VisitType");
                });

            modelBuilder.Entity("DAL.Models.CrmVisitSurvey", b =>
                {
                    b.HasOne("DAL.Models.CrmVisit", "Visit")
                        .WithMany("CrmVisitSurveys")
                        .HasForeignKey("VisitId")
                        .HasConstraintName("FK_CRM_VisitSurveys_CRM_Visits");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("DAL.Models.GUser", b =>
                {
                    b.HasOne("DAL.Models.GUserRole", "UserRole")
                        .WithMany("GUsers")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("FK_G_Users_G_UserRole");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("DAL.Models.GUserModule", b =>
                {
                    b.HasOne("DAL.Models.GUser", "User")
                        .WithMany("GUserModules")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_G_USER_MODULE_G_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Models.GUserRolePermission", b =>
                {
                    b.HasOne("DAL.Models.GUserRole", "UserRole")
                        .WithMany("GUserRolePermissions")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("FK_G_UserRolePermissions_G_UserRole");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("DAL.Models.HrAcheivedTargetDetail", b =>
                {
                    b.HasOne("DAL.Models.HrAcheivedTarget", "AcheivedTarget")
                        .WithMany("HrAcheivedTargetDetails")
                        .HasForeignKey("AcheivedTargetId")
                        .HasConstraintName("FK_HR_AcheivedTargetDetails_HR_AcheivedTargets");

                    b.Navigation("AcheivedTarget");
                });

            modelBuilder.Entity("DAL.Models.HrActivityDetailElement", b =>
                {
                    b.HasOne("DAL.Models.HrEmpActivityDetail", "EmpActivityDetail")
                        .WithMany("HrActivityDetailElements")
                        .HasForeignKey("EmpActivityDetailId")
                        .HasConstraintName("FK_Hr_ActivityDetailElements_Hr_EmpActivityDetail");

                    b.Navigation("EmpActivityDetail");
                });

            modelBuilder.Entity("DAL.Models.HrAttendDocDetail", b =>
                {
                    b.HasOne("DAL.Models.HrAttendanceDoc", "AttendDoc")
                        .WithMany("HrAttendDocDetails")
                        .HasForeignKey("AttendDocId")
                        .HasConstraintName("FK_Hr_AttendDocDetails_Hr_AttendanceDoc");

                    b.Navigation("AttendDoc");
                });

            modelBuilder.Entity("DAL.Models.HrAttendDocFactElement", b =>
                {
                    b.HasOne("DAL.Models.HrAttendanceDoc", "AttendDoc")
                        .WithMany("HrAttendDocFactElements")
                        .HasForeignKey("AttendDocId")
                        .HasConstraintName("FK_Hr_AttendDocFactElements_Hr_AttendanceDoc");

                    b.Navigation("AttendDoc");
                });

            modelBuilder.Entity("DAL.Models.HrDepartment", b =>
                {
                    b.HasOne("DAL.Models.HrDepartment", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Hr_Departments_Hr_Departments");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DAL.Models.HrEmpActivityDetail", b =>
                {
                    b.HasOne("DAL.Models.HrEmpActivity", "EmpActivity")
                        .WithMany("HrEmpActivityDetails")
                        .HasForeignKey("EmpActivityId")
                        .HasConstraintName("FK_Hr_EmpActivityDetail_Hr_EmpActivity");

                    b.Navigation("EmpActivity");
                });

            modelBuilder.Entity("DAL.Models.HrEmpDocument", b =>
                {
                    b.HasOne("DAL.Models.HrEmpDocType", "EmpDocTyp")
                        .WithMany("HrEmpDocuments")
                        .HasForeignKey("EmpDocTypId")
                        .HasConstraintName("FK_Hr_EmpDocuments_Hr_EmpDocTypes");

                    b.Navigation("EmpDocTyp");
                });

            modelBuilder.Entity("DAL.Models.HrEmpGroup", b =>
                {
                    b.HasOne("DAL.Models.HrEmpGroup", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Hr_EmpGroups_Hr_EmpGroups");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DAL.Models.HrEmployee", b =>
                {
                    b.HasOne("DAL.Models.HrDepartment", "DepartMent")
                        .WithMany("HrEmployees")
                        .HasForeignKey("DepartMentId")
                        .HasConstraintName("FK_Hr_Employees_Hr_Departments");

                    b.HasOne("DAL.Models.HrEmpGroup", "HrempGroup")
                        .WithMany("HrEmployees")
                        .HasForeignKey("HrempGroupId")
                        .HasConstraintName("FK_Hr_Employees_Hr_EmpGroups");

                    b.HasOne("DAL.Models.HrJob", "Job")
                        .WithMany("HrEmployees")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK_Hr_Employees_Hr_Jobs");

                    b.HasOne("DAL.Models.HrPeriodsTable", "PeriodTable")
                        .WithMany("HrEmployees")
                        .HasForeignKey("PeriodTableId")
                        .HasConstraintName("FK_Hr_Employees_Hr_PeriodsTables");

                    b.HasOne("DAL.Models.HrShift", "Shift")
                        .WithMany("HrEmployees")
                        .HasForeignKey("ShiftId")
                        .HasConstraintName("FK_Hr_Employees_Hr_Shifts");

                    b.Navigation("DepartMent");

                    b.Navigation("HrempGroup");

                    b.Navigation("Job");

                    b.Navigation("PeriodTable");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("DAL.Models.HrEmpMovePromotDetail", b =>
                {
                    b.HasOne("DAL.Models.HrEmpMovePromotion", "EmpMove")
                        .WithMany("HrEmpMovePromotDetails")
                        .HasForeignKey("EmpMoveId")
                        .HasConstraintName("FK_Hr_EmpMovePromotDetail_Hr_EmpMovePromotion");

                    b.Navigation("EmpMove");
                });

            modelBuilder.Entity("DAL.Models.HrEmpSalaryType", b =>
                {
                    b.HasOne("DAL.Models.HrEmployee", "Emp")
                        .WithMany("HrEmpSalaryTypes")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Hr_EmpSalaryTypes_Hr_Employees");

                    b.HasOne("DAL.Models.HrSalaryType", "SalaryTyp")
                        .WithMany("HrEmpSalaryTypes")
                        .HasForeignKey("SalaryTypId")
                        .HasConstraintName("FK_Hr_EmpSalaryTypes_Hr_SalaryTypes");

                    b.Navigation("Emp");

                    b.Navigation("SalaryTyp");
                });

            modelBuilder.Entity("DAL.Models.HrEmpsSalaryTemp", b =>
                {
                    b.HasOne("DAL.Models.HrSalaryType", "SalaryTyp")
                        .WithMany("HrEmpsSalaryTemps")
                        .HasForeignKey("SalaryTypId")
                        .HasConstraintName("FK_Hr_EmpsSalaryTemp_Hr_SalaryTypes");

                    b.Navigation("SalaryTyp");
                });

            modelBuilder.Entity("DAL.Models.HrEmpVacationsDetail", b =>
                {
                    b.HasOne("DAL.Models.HrEmpVacation", "EmpVac")
                        .WithMany("HrEmpVacationsDetails")
                        .HasForeignKey("EmpVacId")
                        .HasConstraintName("FK_Hr_EmpVacationsDetails_Hr_EmpVacation");

                    b.Navigation("EmpVac");
                });

            modelBuilder.Entity("DAL.Models.HrPeriodTableDetail", b =>
                {
                    b.HasOne("DAL.Models.HrPeriodsTable", "PeriodTable")
                        .WithMany("HrPeriodTableDetails")
                        .HasForeignKey("PeriodTableId")
                        .HasConstraintName("FK_Hr_PeriodTableDetail_Hr_PeriodsTables");

                    b.Navigation("PeriodTable");
                });

            modelBuilder.Entity("DAL.Models.HrPeriodTablePolicy", b =>
                {
                    b.HasOne("DAL.Models.HrPeriodsTable", "PeriodTable")
                        .WithMany("HrPeriodTablePolicies")
                        .HasForeignKey("PeriodTableId")
                        .HasConstraintName("FK_Hr_PeriodTablePolicy_Hr_PeriodsTables");

                    b.Navigation("PeriodTable");
                });

            modelBuilder.Entity("DAL.Models.HrPeriodTableVacation", b =>
                {
                    b.HasOne("DAL.Models.HrPeriodsTable", "PeriodTable")
                        .WithMany("HrPeriodTableVacations")
                        .HasForeignKey("PeriodTableId")
                        .HasConstraintName("FK_Hr_PeriodTableVacations_Hr_PeriodsTables");

                    b.Navigation("PeriodTable");
                });

            modelBuilder.Entity("DAL.Models.HrSalaryIssueDetail", b =>
                {
                    b.HasOne("DAL.Models.HrSalaryIssueDoc", "SalaryIssuDoc")
                        .WithMany("HrSalaryIssueDetails")
                        .HasForeignKey("SalaryIssuDocId")
                        .HasConstraintName("FK_Hr_SalaryIssueDetails_Hr_SalaryIssueDoc");

                    b.Navigation("SalaryIssuDoc");
                });

            modelBuilder.Entity("DAL.Models.HrSalaryIssueDistribution", b =>
                {
                    b.HasOne("DAL.Models.HrSalaryIssueDoc", "SalaryIssuDoc")
                        .WithMany("HrSalaryIssueDistributions")
                        .HasForeignKey("SalaryIssuDocId")
                        .HasConstraintName("FK_Hr_SalaryIssueDistribution_Hr_SalaryIssueDoc");

                    b.Navigation("SalaryIssuDoc");
                });

            modelBuilder.Entity("DAL.Models.HrSegment", b =>
                {
                    b.HasOne("DAL.Models.HrSalaryType", "SalaryTyp")
                        .WithMany("HrSegments")
                        .HasForeignKey("SalaryTypId")
                        .HasConstraintName("FK_Hr_Segments_Hr_SalaryTypes");

                    b.Navigation("SalaryTyp");
                });

            modelBuilder.Entity("DAL.Models.LaLand", b =>
                {
                    b.HasOne("DAL.Models.MsCustomer", "Customer")
                        .WithMany("LaLands")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_La_Lands_MS_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DAL.Models.LaPropSerial", b =>
                {
                    b.HasOne("DAL.Models.MsCustomer", "CustMainNavigation")
                        .WithMany("LaPropSerials")
                        .HasForeignKey("CustMain")
                        .HasConstraintName("FK_La_PropSerial_MS_Customer");

                    b.Navigation("CustMainNavigation");
                });

            modelBuilder.Entity("DAL.Models.MobSalesInvoiceItemCard", b =>
                {
                    b.HasOne("DAL.Models.MobSalesInvoice", "Inv")
                        .WithMany("MobSalesInvoiceItemCards")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Mob_SalesInvoiceItemCard_Mob_SalesInvoice");

                    b.Navigation("Inv");
                });

            modelBuilder.Entity("DAL.Models.MsBoxCurrency", b =>
                {
                    b.HasOne("DAL.Models.MsBankAccount", "Account")
                        .WithMany("MsBoxCurrencies")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_MS_BoxCurrency_Ms_BankAccount");

                    b.HasOne("DAL.Models.MsBoxBank", "Box")
                        .WithMany("MsBoxCurrencies")
                        .HasForeignKey("BoxId")
                        .HasConstraintName("FK_MS_BoxCurrency_MS_BoxBank");

                    b.HasOne("DAL.Models.MsCurrency", "Currency")
                        .WithMany("MsBoxCurrencies")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_MS_BoxCurrency_MS_Currency");

                    b.Navigation("Account");

                    b.Navigation("Box");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("DAL.Models.MsBoxTransferDetail", b =>
                {
                    b.HasOne("DAL.Models.MsBoxTransferNote", "BoxTran")
                        .WithMany("MsBoxTransferDetails")
                        .HasForeignKey("BoxTranId")
                        .HasConstraintName("FK_MS_BoxTransferDetail_MS_BoxTransferNote");

                    b.Navigation("BoxTran");
                });

            modelBuilder.Entity("DAL.Models.MsBoxUser", b =>
                {
                    b.HasOne("DAL.Models.MsBoxBank", "Box")
                        .WithMany("MsBoxUsers")
                        .HasForeignKey("BoxId")
                        .HasConstraintName("FK_Ms_BoxUsers_MS_BoxBank");

                    b.HasOne("DAL.Models.GUser", "User")
                        .WithMany("MsBoxUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Ms_BoxUsers_G_Users");

                    b.Navigation("Box");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Models.MsBusinessPartner", b =>
                {
                    b.HasOne("DAL.Models.MsBusinessPartnerCategory", "BsPartnerCat")
                        .WithMany("MsBusinessPartners")
                        .HasForeignKey("BsPartnerCatId")
                        .HasConstraintName("FK_Ms_BusinessPartners_Ms_BusinessPartnerCategory");

                    b.HasOne("DAL.Models.MsBusinessPartnerType", "BsPartnerType")
                        .WithMany("MsBusinessPartners")
                        .HasForeignKey("BsPartnerTypeId")
                        .HasConstraintName("FK_Ms_BusinessPartners_Ms_BusinessPartnerType");

                    b.Navigation("BsPartnerCat");

                    b.Navigation("BsPartnerType");
                });

            modelBuilder.Entity("DAL.Models.MsCashTransactionDetail", b =>
                {
                    b.HasOne("DAL.Models.MsAdjustMent", "Adjust")
                        .WithMany("MsCashTransactionDetails")
                        .HasForeignKey("AdjustId")
                        .HasConstraintName("FK_MS_CashTransactionDetail_Ms_AdjustMents");

                    b.HasOne("DAL.Models.CalJurnalEntry", "Jurnal")
                        .WithMany("MsCashTransactionDetails")
                        .HasForeignKey("JurnalId")
                        .HasConstraintName("FK_MS_CashTransactionDetail_Cal_JurnalEntry");

                    b.HasOne("DAL.Models.MsPaymentNote", "Pay")
                        .WithMany("MsCashTransactionDetails")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_MS_CashTransactionDetail_MS_PaymentNote");

                    b.HasOne("DAL.Models.MsReceiptNote", "Rect")
                        .WithMany("MsCashTransactionDetails")
                        .HasForeignKey("RectId")
                        .HasConstraintName("FK_MS_CashTransactionDetail_Ms_ReceiptNote");

                    b.Navigation("Adjust");

                    b.Navigation("Jurnal");

                    b.Navigation("Pay");

                    b.Navigation("Rect");
                });

            modelBuilder.Entity("DAL.Models.MsCheqBook", b =>
                {
                    b.HasOne("DAL.Models.HrEmployee", "Emp")
                        .WithMany("MsCheqBooks")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Ms_Books_Hr_Employees");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("DAL.Models.MsCurrencyCategoryJoin", b =>
                {
                    b.HasOne("DAL.Models.MsCurrencyCategory", "CurrencyCategory")
                        .WithMany("MsCurrencyCategoryJoins")
                        .HasForeignKey("CurrencyCategoryId")
                        .HasConstraintName("FK_Ms_CurrencyCategoryJoin_MS_CurrencyCategory");

                    b.HasOne("DAL.Models.MsCurrency", "Currency")
                        .WithMany("MsCurrencyCategoryJoins")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Ms_CurrencyCategoryJoin_MS_Currency");

                    b.Navigation("Currency");

                    b.Navigation("CurrencyCategory");
                });

            modelBuilder.Entity("DAL.Models.MsCurrencyRate", b =>
                {
                    b.HasOne("DAL.Models.MsCurrency", "Currency")
                        .WithMany("MsCurrencyRates")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Ms_CurrencyRate_MS_Currency");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("DAL.Models.MsCusromerUser", b =>
                {
                    b.HasOne("DAL.Models.MsCustomer", "Customer")
                        .WithMany("MsCusromerUsers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Ms_CusromerUsers_MS_Customer");

                    b.HasOne("DAL.Models.GUser", "User")
                        .WithMany("MsCusromerUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Ms_CusromerUsers_G_Users");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Models.MsCustImg", b =>
                {
                    b.HasOne("DAL.Models.MsCustomer", "Customer")
                        .WithMany("MsCustImgs")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Ms_CustImgs_MS_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DAL.Models.MsCustomer", b =>
                {
                    b.HasOne("DAL.Models.MsCurrency", "Currency")
                        .WithMany("MsCustomers")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_MS_Customer_MS_Currency");

                    b.HasOne("DAL.Models.MsCustomerCategory", "CustomerCat")
                        .WithMany("MsCustomers")
                        .HasForeignKey("CustomerCatId")
                        .HasConstraintName("FK_MS_Customer_MS_CustomerCategory");

                    b.HasOne("DAL.Models.MsCustomerType", "CustomerType")
                        .WithMany("MsCustomers")
                        .HasForeignKey("CustomerTypeId")
                        .HasConstraintName("FK_MS_Customer_Ms_CustomerTypes");

                    b.Navigation("Currency");

                    b.Navigation("CustomerCat");

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("DAL.Models.MsCustomerBranch", b =>
                {
                    b.HasOne("DAL.Models.MsCustomer", "Customer")
                        .WithMany("MsCustomerBranches")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Ms_CustomerBranches_MS_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DAL.Models.MsCustomerContact", b =>
                {
                    b.HasOne("DAL.Models.MsCustomer", "Customer")
                        .WithMany("MsCustomerContacts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Ms_CustomerContacts_MS_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DAL.Models.MsCustomersFollowUp", b =>
                {
                    b.HasOne("DAL.Models.MsCustomer", "Customer")
                        .WithMany("MsCustomersFollowUps")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Ms_CustomersFollowUp_MS_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DAL.Models.MsDeliverItemCard", b =>
                {
                    b.HasOne("DAL.Models.MsDeliverSalesInvoice", "Deliver")
                        .WithMany("MsDeliverItemCards")
                        .HasForeignKey("DeliverId")
                        .HasConstraintName("FK_Ms_DeliverItemCard_Ms_DeliverSalesInvoice");

                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsDeliverItemCards")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_DeliverItemCard_MS_ItemCard");

                    b.HasOne("DAL.Models.MsItemUnit", "Unit")
                        .WithMany("MsDeliverItemCards")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_Ms_DeliverItemCard_Ms_ItemUnit");

                    b.Navigation("Deliver");

                    b.Navigation("ItemCard");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DAL.Models.MsDeliverSalesInvoiceExpense", b =>
                {
                    b.HasOne("DAL.Models.MsDeliverSalesInvoice", "Deliver")
                        .WithMany("MsDeliverSalesInvoiceExpenses")
                        .HasForeignKey("DeliverId")
                        .HasConstraintName("FK_Ms_DeliverSalesInvoiceExpenses_Ms_DeliverSalesInvoice");

                    b.Navigation("Deliver");
                });

            modelBuilder.Entity("DAL.Models.MsDeliverSalesInvoiceMultiAccount", b =>
                {
                    b.HasOne("DAL.Models.MsDeliverSalesInvoice", "Deliver")
                        .WithMany("MsDeliverSalesInvoiceMultiAccounts")
                        .HasForeignKey("DeliverId")
                        .HasConstraintName("FK_Ms_DeliverSalesInvoiceMultiAccounts_Ms_DeliverSalesInvoice");

                    b.Navigation("Deliver");
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterExportDetail", b =>
                {
                    b.HasOne("DAL.Models.MsGaLetterExport", "LetterExport")
                        .WithMany("MsGaLetterExportDetails")
                        .HasForeignKey("LetterExportId")
                        .HasConstraintName("FK_MsGA_LetterExportDetail_MsGA_LetterExport");

                    b.Navigation("LetterExport");
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterFayumDetail", b =>
                {
                    b.HasOne("DAL.Models.MsGaLetterFayum", "LetterFayum")
                        .WithMany("MsGaLetterFayumDetails")
                        .HasForeignKey("LetterFayumId")
                        .HasConstraintName("FK_MsGA_LetterFayumDetail_MsGA_LetterFayum");

                    b.Navigation("LetterFayum");
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterNormalDetail", b =>
                {
                    b.HasOne("DAL.Models.MsGaLetterNormal", "LetterNorm")
                        .WithMany("MsGaLetterNormalDetails")
                        .HasForeignKey("LetterNormId")
                        .HasConstraintName("FK_MsGA_LetterNormalDetail_MsGA_LetterNormal");

                    b.Navigation("LetterNorm");
                });

            modelBuilder.Entity("DAL.Models.MsGaMotorSndetail", b =>
                {
                    b.HasOne("DAL.Models.MsGaLetterFayum", "LetterFayum")
                        .WithMany("MsGaMotorSndetails")
                        .HasForeignKey("LetterFayumId")
                        .HasConstraintName("FK_MsGA_MotorSNDetail_MsGA_LetterFayum");

                    b.HasOne("DAL.Models.MsGaLetterNormal", "LetterNorm")
                        .WithMany("MsGaMotorSndetails")
                        .HasForeignKey("LetterNormId")
                        .HasConstraintName("FK_MsGA_MotorSNDetail_MsGA_LetterNormal");

                    b.HasOne("DAL.Models.MsGaMotorSn", "MotorDoc")
                        .WithMany("MsGaMotorSndetails")
                        .HasForeignKey("MotorDocId")
                        .HasConstraintName("FK_MsGA_MotorSNDetail_MsGA_MotorSN");

                    b.Navigation("LetterFayum");

                    b.Navigation("LetterNorm");

                    b.Navigation("MotorDoc");
                });

            modelBuilder.Entity("DAL.Models.MsGaPeriodicBookDetail", b =>
                {
                    b.HasOne("DAL.Models.MsGaLetterNormal", "LetterNorm")
                        .WithMany("MsGaPeriodicBookDetails")
                        .HasForeignKey("LetterNormId")
                        .HasConstraintName("FK_MsGA_PeriodicBookDetail_MsGA_LetterNormal");

                    b.HasOne("DAL.Models.MsGaPeriodicBook", "PeriodicBook")
                        .WithMany("MsGaPeriodicBookDetails")
                        .HasForeignKey("PeriodicBookId")
                        .HasConstraintName("FK_MsGA_PeriodicBookDetail_MsGA_PeriodicBook");

                    b.Navigation("LetterNorm");

                    b.Navigation("PeriodicBook");
                });

            modelBuilder.Entity("DAL.Models.MsGaShipmentDetail", b =>
                {
                    b.HasOne("DAL.Models.MsGaLetterExport", "LetterExport")
                        .WithMany("MsGaShipmentDetails")
                        .HasForeignKey("LetterExportId")
                        .HasConstraintName("FK_MsGA_ShipmentDetail_MsGA_LetterExport");

                    b.HasOne("DAL.Models.MsGaShipment", "ShipMent")
                        .WithMany("MsGaShipmentDetails")
                        .HasForeignKey("ShipMentId")
                        .IsRequired()
                        .HasConstraintName("FK_MsGA_ShipmentDetail_MsGA_Shipment");

                    b.Navigation("LetterExport");

                    b.Navigation("ShipMent");
                });

            modelBuilder.Entity("DAL.Models.MsItemAlternative", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsItemAlternatives")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_ItemAlternatives_MS_ItemCard");

                    b.Navigation("ItemCard");
                });

            modelBuilder.Entity("DAL.Models.MsItemCard", b =>
                {
                    b.HasOne("DAL.Models.MsItemCategory", "ItemCategory")
                        .WithMany("MsItemCards")
                        .HasForeignKey("ItemCategoryId")
                        .HasConstraintName("FK_MS_ItemCard_MS_ItemCategory");

                    b.Navigation("ItemCategory");
                });

            modelBuilder.Entity("DAL.Models.MsItemCardDefaulPartition", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsItemCardDefaulPartitions")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemCardDefaulPartitions_MS_ItemCard");

                    b.Navigation("ItemCard");
                });

            modelBuilder.Entity("DAL.Models.MsItemCardOffer", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsItemCardOffers")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemCardOffers_MS_ItemCard");

                    b.Navigation("ItemCard");
                });

            modelBuilder.Entity("DAL.Models.MsItemCollection", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsItemCollections")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemCollection_MS_ItemCard");

                    b.Navigation("ItemCard");
                });

            modelBuilder.Entity("DAL.Models.MsItemImage", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsItemImages")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_ItemImages_MS_ItemCard");

                    b.Navigation("ItemCard");
                });

            modelBuilder.Entity("DAL.Models.MsItemPartition", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsItemPartitions")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemPartition_MS_ItemCard");

                    b.HasOne("DAL.Models.MsPartition", "StorePart")
                        .WithMany("MsItemPartitions")
                        .HasForeignKey("StorePartId")
                        .HasConstraintName("FK_Ms_ItemPartition_MS_Partition");

                    b.Navigation("ItemCard");

                    b.Navigation("StorePart");
                });

            modelBuilder.Entity("DAL.Models.MsItemPricintDetail", b =>
                {
                    b.HasOne("DAL.Models.MsItemPricing", "ItemPricint")
                        .WithMany("MsItemPricintDetails")
                        .HasForeignKey("ItemPricintId")
                        .IsRequired()
                        .HasConstraintName("FK_Ms_ItemPricintDetail_Ms_ItemPricing");

                    b.Navigation("ItemPricint");
                });

            modelBuilder.Entity("DAL.Models.MsItemSerial", b =>
                {
                    b.HasOne("DAL.Models.MsDeliverItemCard", "DelivItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("DelivItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_Ms_DeliverItemCard");

                    b.HasOne("DAL.Models.MsSalesInvoiceItemCard", "InvItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("InvItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_Ms_SalesInvoiceItemCard");

                    b.HasOne("DAL.Models.MsSalesOrderItemCard", "OrderDetailItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("OrderDetailItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_Ms_SalesOrderItemCard");

                    b.HasOne("DAL.Models.MsPurchaseInvoiceItemCard", "PurInvItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("PurInvItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_MS_PurchaseInvoiceItemCard");

                    b.HasOne("DAL.Models.MsReturnSalesItemCard", "RetItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("RetItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_MS_ReturnSalesItemCard");

                    b.HasOne("DAL.Models.MsReturnPurchaseItem", "RetPurchItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("RetPurchItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_MS_ReturnPurchaseItem");

                    b.HasOne("DAL.Models.MsItemStockAdjustmentDetail", "StockAdjustItem")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("StockAdjustItemId")
                        .HasConstraintName("FK_MS_ItemSerials_Ms_ItemStockAdjustmentDetail");

                    b.HasOne("DAL.Models.MsStockReceiptItemCard", "StockRecItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("StockRecItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_MS_StockReceiptItemCard");

                    b.HasOne("DAL.Models.MsStockTranItemCard", "TrItenCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("TrItenCardId")
                        .HasConstraintName("FK_MS_ItemSerials_MS_StockTranItemCard");

                    b.HasOne("DAL.Models.MsStockTranItemCardReq", "TranReqItemCard")
                        .WithMany("MsItemSerials")
                        .HasForeignKey("TranReqItemCardId")
                        .HasConstraintName("FK_MS_ItemSerials_Ms_StockTranItemCardReq");

                    b.Navigation("DelivItemCard");

                    b.Navigation("InvItemCard");

                    b.Navigation("OrderDetailItemCard");

                    b.Navigation("PurInvItemCard");

                    b.Navigation("RetItemCard");

                    b.Navigation("RetPurchItemCard");

                    b.Navigation("StockAdjustItem");

                    b.Navigation("StockRecItemCard");

                    b.Navigation("TrItenCard");

                    b.Navigation("TranReqItemCard");
                });

            modelBuilder.Entity("DAL.Models.MsItemStartQty", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsItemStartQties")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemStartQty_MS_ItemCard");

                    b.Navigation("ItemCard");
                });

            modelBuilder.Entity("DAL.Models.MsItemStockAdjustmentDetail", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsItemStockAdjustmentDetails")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemStockAdjustmentDetail_MS_ItemCard");

                    b.HasOne("DAL.Models.MsItemStockAdjustment", "StockAdjust")
                        .WithMany("MsItemStockAdjustmentDetails")
                        .HasForeignKey("StockAdjustId")
                        .HasConstraintName("FK_Ms_ItemStockAdjustmentDetail_Ms_ItemStockAdjustment");

                    b.Navigation("ItemCard");

                    b.Navigation("StockAdjust");
                });

            modelBuilder.Entity("DAL.Models.MsItemUnit", b =>
                {
                    b.HasOne("DAL.Models.ProdBasicUnit", "BasUnit")
                        .WithMany("MsItemUnits")
                        .HasForeignKey("BasUnitId")
                        .HasConstraintName("FK_Ms_ItemUnit_Prod_BasicUnits");

                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsItemUnits")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_ItemUnit_MS_ItemCard");

                    b.Navigation("BasUnit");

                    b.Navigation("ItemCard");
                });

            modelBuilder.Entity("DAL.Models.MsItemUnitPackingJoin", b =>
                {
                    b.HasOne("DAL.Models.CodPackingSize", "PackSize")
                        .WithMany("MsItemUnitPackingJoins")
                        .HasForeignKey("PackSizeId")
                        .HasConstraintName("FK_Ms_ItemUnitPackingJoin_Cod_PackingSize");

                    b.HasOne("DAL.Models.MsItemUnit", "Unit")
                        .WithMany("MsItemUnitPackingJoins")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_Ms_ItemUnitPackingJoin_Ms_ItemUnit");

                    b.Navigation("PackSize");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DAL.Models.MsItemVendor", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsItemVendors")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_ItemVendors_MS_ItemCard");

                    b.HasOne("DAL.Models.MsVendor", "Vendor")
                        .WithMany("MsItemVendors")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_MS_ItemVendors_MS_Vendor");

                    b.Navigation("ItemCard");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("DAL.Models.MsKeeperBankDetail", b =>
                {
                    b.HasOne("DAL.Models.MsKeeperBank", "Keeper")
                        .WithMany("MsKeeperBankDetails")
                        .HasForeignKey("KeeperId")
                        .HasConstraintName("FK_Ms_KeeperBankDetail_Ms_KeeperBank");

                    b.Navigation("Keeper");
                });

            modelBuilder.Entity("DAL.Models.MsLetterOfGuaranteeTran", b =>
                {
                    b.HasOne("DAL.Models.MsLetterOfGuarantee", "LetOfGrntee")
                        .WithMany("MsLetterOfGuaranteeTrans")
                        .HasForeignKey("LetOfGrnteeId")
                        .HasConstraintName("FK_Ms_LetterOfGuaranteeTrans_Ms_LetterOfGuarantee");

                    b.Navigation("LetOfGrntee");
                });

            modelBuilder.Entity("DAL.Models.MsPartition", b =>
                {
                    b.HasOne("DAL.Models.MsStore", "Store")
                        .WithMany("MsPartitions")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_MS_Partition_MS_Stores");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("DAL.Models.MsPaymentNote", b =>
                {
                    b.HasOne("DAL.Models.MsBoxBank", "Box")
                        .WithMany("MsPaymentNotes")
                        .HasForeignKey("BoxId")
                        .HasConstraintName("FK_MS_PaymentNote_MS_BoxBank");

                    b.HasOne("DAL.Models.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPaymentNotes")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_MS_PaymentNote_MS_PurchasInvoice");

                    b.HasOne("DAL.Models.MsReturnSale", "RetSale")
                        .WithMany("MsPaymentNotes")
                        .HasForeignKey("RetSaleId")
                        .HasConstraintName("FK_MS_PaymentNote_MS_ReturnSales");

                    b.Navigation("Box");

                    b.Navigation("PurInv");

                    b.Navigation("RetSale");
                });

            modelBuilder.Entity("DAL.Models.MsPaymentNoteCurrency", b =>
                {
                    b.HasOne("DAL.Models.MsPaymentNote", "Pay")
                        .WithMany("MsPaymentNoteCurrencies")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_Ms_PaymentNoteCurrencies_MS_PaymentNote");

                    b.Navigation("Pay");
                });

            modelBuilder.Entity("DAL.Models.MsPaymentNoteItem", b =>
                {
                    b.HasOne("DAL.Models.MsPaymentNote", "Pay")
                        .WithMany("MsPaymentNoteItems")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_Ms_PaymentNoteItems_MS_PaymentNote");

                    b.Navigation("Pay");
                });

            modelBuilder.Entity("DAL.Models.MsPettyCashDetail", b =>
                {
                    b.HasOne("DAL.Models.MsPettycash", "Pettycash")
                        .WithMany("MsPettyCashDetails")
                        .HasForeignKey("PettycashId")
                        .HasConstraintName("FK_MS_PettyCashDetails_MS_Pettycash");

                    b.Navigation("Pettycash");
                });

            modelBuilder.Entity("DAL.Models.MsPettyPaymentJoin", b =>
                {
                    b.HasOne("DAL.Models.MsPaymentNote", "Pay")
                        .WithMany("MsPettyPaymentJoins")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_Ms_PettyPaymentJoin_MS_PaymentNote");

                    b.HasOne("DAL.Models.MsPettycash", "Pettycash")
                        .WithMany("MsPettyPaymentJoins")
                        .HasForeignKey("PettycashId")
                        .HasConstraintName("FK_Ms_PettyPaymentJoin_MS_Pettycash");

                    b.Navigation("Pay");

                    b.Navigation("Pettycash");
                });

            modelBuilder.Entity("DAL.Models.MsPurchaseInvoiceCostReceived", b =>
                {
                    b.HasOne("DAL.Models.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPurchaseInvoiceCostReceiveds")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_Ms_PurchaseInvoiceCostReceived_MS_PurchasInvoice");

                    b.Navigation("PurInv");
                });

            modelBuilder.Entity("DAL.Models.MsPurchaseInvoiceExpense", b =>
                {
                    b.HasOne("DAL.Models.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPurchaseInvoiceExpenses")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_MS_PurchaseInvoiceExpenses_MS_PurchasInvoice");

                    b.Navigation("PurInv");
                });

            modelBuilder.Entity("DAL.Models.MsPurchaseInvoiceItemCard", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsPurchaseInvoiceItemCards")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_PurchaseInvoiceItemCard_MS_ItemCard");

                    b.HasOne("DAL.Models.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPurchaseInvoiceItemCards")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_MS_PurchaseInvoiceItemCard_MS_PurchasInvoice");

                    b.HasOne("DAL.Models.MsItemUnit", "Unit")
                        .WithMany("MsPurchaseInvoiceItemCards")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_MS_PurchaseInvoiceItemCard_Ms_ItemUnit");

                    b.Navigation("ItemCard");

                    b.Navigation("PurInv");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DAL.Models.MsPurchasInvoice", b =>
                {
                    b.HasOne("DAL.Models.MsPurchasOrder", "PurOrder")
                        .WithMany("MsPurchasInvoices")
                        .HasForeignKey("PurOrderId")
                        .HasConstraintName("FK_MS_PurchasInvoice_Ms_PurchasOrder");

                    b.HasOne("DAL.Models.MsTaxis", "TaxesId1Navigation")
                        .WithMany("MsPurchasInvoices")
                        .HasForeignKey("TaxesId1")
                        .HasConstraintName("FK_MS_PurchasInvoice_MS_Taxes");

                    b.Navigation("PurOrder");

                    b.Navigation("TaxesId1Navigation");
                });

            modelBuilder.Entity("DAL.Models.MsPurchasInvoiceCurrency", b =>
                {
                    b.HasOne("DAL.Models.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPurchasInvoiceCurrencies")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_MS_PurchasInvoiceCurrencies_MS_PurchasInvoice");

                    b.Navigation("PurInv");
                });

            modelBuilder.Entity("DAL.Models.MsPurchasInvoiceMultiAccount", b =>
                {
                    b.HasOne("DAL.Models.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPurchasInvoiceMultiAccounts")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_MS_PurchasInvoiceMultiAccounts_MS_PurchasInvoice");

                    b.Navigation("PurInv");
                });

            modelBuilder.Entity("DAL.Models.MsPurchInvVehicleJobOrderJoin", b =>
                {
                    b.HasOne("DAL.Models.MsPurchasInvoice", "PurInv")
                        .WithMany("MsPurchInvVehicleJobOrderJoins")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_Ms_PurchInvVehicleJobOrderJoin_MS_PurchasInvoice");

                    b.HasOne("DAL.Models.SrVehicleJobOrder", "Vjorder")
                        .WithMany("MsPurchInvVehicleJobOrderJoins")
                        .HasForeignKey("VjorderId")
                        .HasConstraintName("FK_Ms_PurchInvVehicleJobOrderJoin_Sr_VehicleJobOrder");

                    b.Navigation("PurInv");

                    b.Navigation("Vjorder");
                });

            modelBuilder.Entity("DAL.Models.MsPurchOrderDetail", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsPurchOrderDetails")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_PurchOrderDetail_MS_ItemCard");

                    b.HasOne("DAL.Models.MsPurchasOrder", "PurOrder")
                        .WithMany("MsPurchOrderDetails")
                        .HasForeignKey("PurOrderId")
                        .HasConstraintName("FK_MS_PurchOrderDetail_Ms_PurchasOrder");

                    b.Navigation("ItemCard");

                    b.Navigation("PurOrder");
                });

            modelBuilder.Entity("DAL.Models.MsPurchOrderReqDetail", b =>
                {
                    b.HasOne("DAL.Models.MsPurchasOrderRequest", "PurOrderReq")
                        .WithMany("MsPurchOrderReqDetails")
                        .HasForeignKey("PurOrderReqId")
                        .HasConstraintName("FK_MS_PurchOrderReqDetail_Ms_PurchasOrderRequest");

                    b.Navigation("PurOrderReq");
                });

            modelBuilder.Entity("DAL.Models.MsReceiptNote", b =>
                {
                    b.HasOne("DAL.Models.MsBoxBank", "Box")
                        .WithMany("MsReceiptNotes")
                        .HasForeignKey("BoxId")
                        .HasConstraintName("FK_Ms_ReceiptNote_MS_BoxBank");

                    b.HasOne("DAL.Models.MsSalesInvoice", "Inv")
                        .WithMany("MsReceiptNotes")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_ReceiptNote_Ms_SalesInvoice");

                    b.HasOne("DAL.Models.MsReturnPurchase", "RetPur")
                        .WithMany("MsReceiptNotes")
                        .HasForeignKey("RetPurId")
                        .HasConstraintName("FK_Ms_ReceiptNote_MS_ReturnPurchase");

                    b.Navigation("Box");

                    b.Navigation("Inv");

                    b.Navigation("RetPur");
                });

            modelBuilder.Entity("DAL.Models.MsReceiptNoteCurrency", b =>
                {
                    b.HasOne("DAL.Models.MsReceiptNote", "Rect")
                        .WithMany("MsReceiptNoteCurrencies")
                        .HasForeignKey("RectId")
                        .HasConstraintName("FK_Ms_ReceiptNoteCurrencies_Ms_ReceiptNote");

                    b.Navigation("Rect");
                });

            modelBuilder.Entity("DAL.Models.MsReturnPurchaseCurrency", b =>
                {
                    b.HasOne("DAL.Models.MsReturnPurchase", "RetPurch")
                        .WithMany("MsReturnPurchaseCurrencies")
                        .HasForeignKey("RetPurchId")
                        .HasConstraintName("FK_MS_ReturnPurchaseCurrencies_MS_ReturnPurchase");

                    b.Navigation("RetPurch");
                });

            modelBuilder.Entity("DAL.Models.MsReturnPurchaseExpense", b =>
                {
                    b.HasOne("DAL.Models.MsReturnPurchase", "RetPurch")
                        .WithMany("MsReturnPurchaseExpenses")
                        .HasForeignKey("RetPurchId")
                        .HasConstraintName("FK_Ms_ReturnPurchaseExpenses_MS_ReturnPurchase");

                    b.Navigation("RetPurch");
                });

            modelBuilder.Entity("DAL.Models.MsReturnPurchaseItem", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsReturnPurchaseItems")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_ReturnPurchaseItem_MS_ItemCard");

                    b.HasOne("DAL.Models.MsReturnPurchase", "RetPurch")
                        .WithMany("MsReturnPurchaseItems")
                        .HasForeignKey("RetPurchId")
                        .HasConstraintName("FK_MS_ReturnPurchaseItem_MS_ReturnPurchase");

                    b.HasOne("DAL.Models.MsItemUnit", "Unit")
                        .WithMany("MsReturnPurchaseItems")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_MS_ReturnPurchaseItem_Ms_ItemUnit");

                    b.Navigation("ItemCard");

                    b.Navigation("RetPurch");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DAL.Models.MsReturnPurchaseMultiAccount", b =>
                {
                    b.HasOne("DAL.Models.MsReturnPurchase", "RetPurch")
                        .WithMany("MsReturnPurchaseMultiAccounts")
                        .HasForeignKey("RetPurchId")
                        .HasConstraintName("FK_MS_ReturnPurchaseMultiAccounts_MS_ReturnPurchase");

                    b.Navigation("RetPurch");
                });

            modelBuilder.Entity("DAL.Models.MsReturnSalesCurrency", b =>
                {
                    b.HasOne("DAL.Models.MsReturnSale", "RetSale")
                        .WithMany("MsReturnSalesCurrencies")
                        .HasForeignKey("RetSaleId")
                        .HasConstraintName("FK_MS_ReturnSalesCurrencies_MS_ReturnSales");

                    b.Navigation("RetSale");
                });

            modelBuilder.Entity("DAL.Models.MsReturnSalesExpense", b =>
                {
                    b.HasOne("DAL.Models.MsReturnSale", "RetSale")
                        .WithMany("MsReturnSalesExpenses")
                        .HasForeignKey("RetSaleId")
                        .HasConstraintName("FK_Ms_ReturnSalesExpenses_MS_ReturnSales");

                    b.Navigation("RetSale");
                });

            modelBuilder.Entity("DAL.Models.MsReturnSalesItemCard", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsReturnSalesItemCards")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_ReturnSalesItemCard_MS_ItemCard");

                    b.HasOne("DAL.Models.MsReturnSale", "RetSale")
                        .WithMany("MsReturnSalesItemCards")
                        .HasForeignKey("RetSaleId")
                        .HasConstraintName("FK_MS_ReturnSalesItemCard_MS_ReturnSales");

                    b.HasOne("DAL.Models.MsItemUnit", "Unit")
                        .WithMany("MsReturnSalesItemCards")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_MS_ReturnSalesItemCard_Ms_ItemUnit");

                    b.Navigation("ItemCard");

                    b.Navigation("RetSale");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DAL.Models.MsReturnSalesMultiAccount", b =>
                {
                    b.HasOne("DAL.Models.MsReturnSale", "RetSale")
                        .WithMany("MsReturnSalesMultiAccounts")
                        .HasForeignKey("RetSaleId")
                        .HasConstraintName("FK_MS_ReturnSalesMultiAccounts_MS_ReturnSales");

                    b.Navigation("RetSale");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvJobOrderJoin", b =>
                {
                    b.HasOne("DAL.Models.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvJobOrderJoins")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvJobOrderJoin_Ms_SalesInvoice");

                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("MsSalesInvJobOrderJoins")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Ms_SalesInvJobOrderJoin_Prod_JobOrder");

                    b.Navigation("Inv");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoice", b =>
                {
                    b.HasOne("DAL.Models.MsSalesOffer", "SalesOffer")
                        .WithMany("MsSalesInvoices")
                        .HasForeignKey("SalesOfferId")
                        .HasConstraintName("FK_Ms_SalesInvoice_Ms_SalesOffer");

                    b.Navigation("SalesOffer");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceCostDeliver", b =>
                {
                    b.HasOne("DAL.Models.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceCostDelivers")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvoiceCostDeliver_Ms_SalesInvoice");

                    b.Navigation("Inv");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceCurrency", b =>
                {
                    b.HasOne("DAL.Models.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceCurrencies")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvoiceCurrencies_Ms_SalesInvoice");

                    b.Navigation("Inv");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceExpense", b =>
                {
                    b.HasOne("DAL.Models.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceExpenses")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvoiceExpenses_Ms_SalesInvoice");

                    b.Navigation("Inv");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceItemCard", b =>
                {
                    b.HasOne("DAL.Models.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceItemCards")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_InvoiceItemCard_Ms_SalesInvoice");

                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsSalesInvoiceItemCards")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_InvoiceItemCard_MS_ItemCard");

                    b.HasOne("DAL.Models.MsItemUnit", "Unit")
                        .WithMany("MsSalesInvoiceItemCards")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_Ms_SalesInvoiceItemCard_Ms_ItemUnit");

                    b.Navigation("Inv");

                    b.Navigation("ItemCard");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceMultiAccount", b =>
                {
                    b.HasOne("DAL.Models.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceMultiAccounts")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvoiceMultiAccounts_Ms_SalesInvoice");

                    b.Navigation("Inv");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceQualityDeliveryDoc", b =>
                {
                    b.HasOne("DAL.Models.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceQualityDeliveryDocs")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvoiceQualityDeliveryDocs_Ms_SalesInvoice");

                    b.Navigation("Inv");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceQualityMissedItem", b =>
                {
                    b.HasOne("DAL.Models.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvoiceQualityMissedItems")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvoiceQualityMissedItems_Ms_SalesInvoice");

                    b.Navigation("Inv");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvVehiclJobOrderJoin", b =>
                {
                    b.HasOne("DAL.Models.MsSalesInvoice", "Inv")
                        .WithMany("MsSalesInvVehiclJobOrderJoins")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Ms_SalesInvVehiclJobOrderJoin_Ms_SalesInvoice");

                    b.HasOne("DAL.Models.SrVehicleJobOrder", "Vjorder")
                        .WithMany("MsSalesInvVehiclJobOrderJoins")
                        .HasForeignKey("VjorderId")
                        .HasConstraintName("FK_Ms_SalesInvVehiclJobOrderJoin_Sr_VehicleJobOrder");

                    b.Navigation("Inv");

                    b.Navigation("Vjorder");
                });

            modelBuilder.Entity("DAL.Models.MsSalesItemsOffersDetail", b =>
                {
                    b.HasOne("DAL.Models.MsSalesItemsOffer", "PromoOffer")
                        .WithMany("MsSalesItemsOffersDetails")
                        .HasForeignKey("PromoOfferId")
                        .HasConstraintName("FK_Ms_SalesItemsOffersDetails_Ms_SalesItemsOffers");

                    b.Navigation("PromoOffer");
                });

            modelBuilder.Entity("DAL.Models.MsSalesOfferItemCard", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsSalesOfferItemCards")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Ms_SalesOfferItemCard_MS_ItemCard");

                    b.HasOne("DAL.Models.MsSalesOffer", "SalesOffer")
                        .WithMany("MsSalesOfferItemCards")
                        .HasForeignKey("SalesOfferId")
                        .HasConstraintName("FK_Ms_SalesOfferItemCard_Ms_SalesOffer");

                    b.Navigation("ItemCard");

                    b.Navigation("SalesOffer");
                });

            modelBuilder.Entity("DAL.Models.MsSalesOfferItemRequest", b =>
                {
                    b.HasOne("DAL.Models.MsSalesOfferRequest", "SalesOfferReq")
                        .WithMany("MsSalesOfferItemRequests")
                        .HasForeignKey("SalesOfferReqId")
                        .HasConstraintName("FK_Ms_SalesOfferItemRequest_Ms_SalesOfferRequest");

                    b.Navigation("SalesOfferReq");
                });

            modelBuilder.Entity("DAL.Models.MsSalesOrderItemCard", b =>
                {
                    b.HasOne("DAL.Models.MsSalesOrder", "SalesOrder")
                        .WithMany("MsSalesOrderItemCards")
                        .HasForeignKey("SalesOrderId")
                        .HasConstraintName("FK_Ms_SalesOrderItemCard_Ms_SalesOrder");

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("DAL.Models.MsStockReceiptItemCard", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsStockReceiptItemCards")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_StockReceiptItemCard_MS_ItemCard");

                    b.HasOne("DAL.Models.MsStockRecript", "StockRec")
                        .WithMany("MsStockReceiptItemCards")
                        .HasForeignKey("StockRecId")
                        .HasConstraintName("FK_MS_StockReceiptItemCard_MS_StockRecript");

                    b.HasOne("DAL.Models.MsItemUnit", "Unit")
                        .WithMany("MsStockReceiptItemCards")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_MS_StockReceiptItemCard_Ms_ItemUnit");

                    b.Navigation("ItemCard");

                    b.Navigation("StockRec");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DAL.Models.MsStockRecriptExpense", b =>
                {
                    b.HasOne("DAL.Models.MsStockRecript", "StockRec")
                        .WithMany("MsStockRecriptExpenses")
                        .HasForeignKey("StockRecId")
                        .HasConstraintName("FK_MS_StockRecriptExpenses_MS_StockRecript");

                    b.Navigation("StockRec");
                });

            modelBuilder.Entity("DAL.Models.MsStockRecriptMultiAccount", b =>
                {
                    b.HasOne("DAL.Models.MsStockRecript", "StockRec")
                        .WithMany("MsStockRecriptMultiAccounts")
                        .HasForeignKey("StockRecId")
                        .HasConstraintName("FK_MS_StockRecriptMultiAccounts_MS_StockRecript");

                    b.Navigation("StockRec");
                });

            modelBuilder.Entity("DAL.Models.MsStockTranItemCard", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("MsStockTranItemCards")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_MS_StockTranItemCard_MS_ItemCard");

                    b.HasOne("DAL.Models.MsStockTransferNote", "Tran")
                        .WithMany("MsStockTranItemCards")
                        .HasForeignKey("TranId")
                        .HasConstraintName("FK_MS_StockTranItemCard_MS_StockTransferNote");

                    b.HasOne("DAL.Models.MsItemUnit", "Unit")
                        .WithMany("MsStockTranItemCards")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("FK_MS_StockTranItemCard_Ms_ItemUnit");

                    b.Navigation("ItemCard");

                    b.Navigation("Tran");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DAL.Models.MsStockTranItemCardReq", b =>
                {
                    b.HasOne("DAL.Models.MsStockTransferNoteRequest", "TranReq")
                        .WithMany("MsStockTranItemCardReqs")
                        .HasForeignKey("TranReqId")
                        .HasConstraintName("FK_Ms_StockTranItemCardReq_Ms_StockTransferNoteRequest");

                    b.Navigation("TranReq");
                });

            modelBuilder.Entity("DAL.Models.MsStore", b =>
                {
                    b.HasOne("DAL.Models.MsBoxBank", "Box")
                        .WithMany("MsStores")
                        .HasForeignKey("BoxId")
                        .HasConstraintName("FK_MS_Stores_MS_BoxBank");

                    b.Navigation("Box");
                });

            modelBuilder.Entity("DAL.Models.MsTermsCostCenter", b =>
                {
                    b.HasOne("DAL.Models.MsTerm", "Term")
                        .WithMany("MsTermsCostCenters")
                        .HasForeignKey("TermId")
                        .HasConstraintName("FK_Ms_TermsCostCenter_Ms_Terms");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("DAL.Models.MsTermsDetail", b =>
                {
                    b.HasOne("DAL.Models.MsTerm", "Term")
                        .WithMany("MsTermsDetails")
                        .HasForeignKey("TermId")
                        .HasConstraintName("FK_Ms_TermsDetails_Ms_Terms");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("DAL.Models.MsVendImg", b =>
                {
                    b.HasOne("DAL.Models.MsVendor", "Vendor")
                        .WithMany("MsVendImgs")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Ms_VendImgs_MS_Vendor");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("DAL.Models.MsVendor", b =>
                {
                    b.HasOne("DAL.Models.MsCurrency", "Currency")
                        .WithMany("MsVendors")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_MS_Vendor_MS_Currency");

                    b.HasOne("DAL.Models.MsVendorCategory", "VendorCat")
                        .WithMany("MsVendors")
                        .HasForeignKey("VendorCatId")
                        .HasConstraintName("FK_MS_Vendor_MS_VendorCategory");

                    b.HasOne("DAL.Models.MsVendorType", "VendorType")
                        .WithMany("MsVendors")
                        .HasForeignKey("VendorTypeId")
                        .HasConstraintName("FK_MS_Vendor_Ms_VendorTypes");

                    b.Navigation("Currency");

                    b.Navigation("VendorCat");

                    b.Navigation("VendorType");
                });

            modelBuilder.Entity("DAL.Models.MsVendorBranch", b =>
                {
                    b.HasOne("DAL.Models.MsVendor", "Vendor")
                        .WithMany("MsVendorBranches")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Ms_VendorBranches_MS_Vendor");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("DAL.Models.MsVendorContact", b =>
                {
                    b.HasOne("DAL.Models.MsVendor", "Vendor")
                        .WithMany("MsVendorContacts")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Ms_VendorContacts_MS_Vendor");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("DAL.Models.MsVendorUser", b =>
                {
                    b.HasOne("DAL.Models.GUser", "User")
                        .WithMany("MsVendorUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Ms_VendorUsers_G_Users");

                    b.HasOne("DAL.Models.MsVendor", "Vendor")
                        .WithMany("MsVendorUsers")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Ms_VendorUsers_MS_Vendor");

                    b.Navigation("User");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("DAL.Models.MsWeightcardItem", b =>
                {
                    b.HasOne("DAL.Models.MsWeightCard", "ScaleCard")
                        .WithMany("MsWeightcardItems")
                        .HasForeignKey("ScaleCardId")
                        .HasConstraintName("FK_Ms_WeightcardItems_Ms_WeightCard");

                    b.Navigation("ScaleCard");
                });

            modelBuilder.Entity("DAL.Models.PrintPricingDetail", b =>
                {
                    b.HasOne("DAL.Models.PrintPricing", "PrinPrice")
                        .WithMany("PrintPricingDetails")
                        .HasForeignKey("PrinPriceId")
                        .HasConstraintName("FK_Print_PricingDetails_Print_Pricing");

                    b.Navigation("PrinPrice");
                });

            modelBuilder.Entity("DAL.Models.PrintQoutationDetail", b =>
                {
                    b.HasOne("DAL.Models.PrintQoutation", "PrinQout")
                        .WithMany("PrintQoutationDetails")
                        .HasForeignKey("PrinQoutId")
                        .IsRequired()
                        .HasConstraintName("FK_Print_QoutationDetails_Print_Qoutation");

                    b.Navigation("PrinQout");
                });

            modelBuilder.Entity("DAL.Models.PrintQoutationDetailsItem", b =>
                {
                    b.HasOne("DAL.Models.PrintQoutationDetail", "PrinQoutDetail")
                        .WithMany("PrintQoutationDetailsItems")
                        .HasForeignKey("PrinQoutDetailId")
                        .IsRequired()
                        .HasConstraintName("FK_Print_QoutationDetailsItems_Print_QoutationDetails");

                    b.Navigation("PrinQoutDetail");
                });

            modelBuilder.Entity("DAL.Models.ProdAttributeValue", b =>
                {
                    b.HasOne("DAL.Models.ProdItemAttribute", "Attribut")
                        .WithMany("ProdAttributeValues")
                        .HasForeignKey("AttributId")
                        .HasConstraintName("FK_Prod_AttributeValue_Prod_ItemAttributes");

                    b.Navigation("Attribut");
                });

            modelBuilder.Entity("DAL.Models.ProdBasicUnit", b =>
                {
                    b.HasOne("DAL.Models.ProdBasicUnit", "ParentUnitNavigation")
                        .WithMany("InverseParentUnitNavigation")
                        .HasForeignKey("ParentUnit")
                        .HasConstraintName("FK_Prod_BasicUnits_Prod_BasicUnits");

                    b.Navigation("ParentUnitNavigation");
                });

            modelBuilder.Entity("DAL.Models.ProdBillOfMaterialItem", b =>
                {
                    b.HasOne("DAL.Models.ProdBillOfMaterial", "BillOfMaterial")
                        .WithMany("ProdBillOfMaterialItems")
                        .HasForeignKey("BillOfMaterialId")
                        .IsRequired()
                        .HasConstraintName("FK_Prod_BillOfMaterialItems_Prod_BillOfMaterial");

                    b.Navigation("BillOfMaterial");
                });

            modelBuilder.Entity("DAL.Models.ProdBillOfMaterialSecondaryItem", b =>
                {
                    b.HasOne("DAL.Models.ProdBillOfMaterial", "BillOfMaterial")
                        .WithMany("ProdBillOfMaterialSecondaryItems")
                        .HasForeignKey("BillOfMaterialId")
                        .IsRequired()
                        .HasConstraintName("FK_Prod_BillOfMaterialSecondaryItems_Prod_BillOfMaterial");

                    b.Navigation("BillOfMaterial");
                });

            modelBuilder.Entity("DAL.Models.ProdEmpEquipDistribDetail", b =>
                {
                    b.HasOne("DAL.Models.ProdEmpEquipDistrib", "EmpEquipDist")
                        .WithMany("ProdEmpEquipDistribDetails")
                        .HasForeignKey("EmpEquipDistId")
                        .HasConstraintName("FK_Prod_EmpEquipDistribDetail_Prod_EmpEquipDistrib");

                    b.Navigation("EmpEquipDist");
                });

            modelBuilder.Entity("DAL.Models.ProdEmpJobOrderDistribDetail", b =>
                {
                    b.HasOne("DAL.Models.ProdEmpJobOrderDistrib", "EmpJobOrderDist")
                        .WithMany("ProdEmpJobOrderDistribDetails")
                        .HasForeignKey("EmpJobOrderDistId")
                        .HasConstraintName("FK_Prod_EmpJobOrderDistribDetail_Prod_EmpJobOrderDistrib");

                    b.Navigation("EmpJobOrderDist");
                });

            modelBuilder.Entity("DAL.Models.ProdEquipProfile", b =>
                {
                    b.HasOne("DAL.Models.ProdEquipment", "Equip")
                        .WithMany("ProdEquipProfiles")
                        .HasForeignKey("EquipId")
                        .HasConstraintName("FK_Prod_EquipProfile_Prod_Equipments");

                    b.Navigation("Equip");
                });

            modelBuilder.Entity("DAL.Models.ProdItemAttributesBatchesDetail", b =>
                {
                    b.HasOne("DAL.Models.ProdItemAttributesBatche", "ItemAtrribBatch")
                        .WithMany("ProdItemAttributesBatchesDetails")
                        .HasForeignKey("ItemAtrribBatchId")
                        .IsRequired()
                        .HasConstraintName("FK_Prod_ItemAttributesBatchesDetails_Prod_ItemAttributesBatche");

                    b.Navigation("ItemAtrribBatch");
                });

            modelBuilder.Entity("DAL.Models.ProdItemAttributsJoin", b =>
                {
                    b.HasOne("DAL.Models.ProdItemAttribute", "Attribut")
                        .WithMany("ProdItemAttributsJoins")
                        .HasForeignKey("AttributId")
                        .HasConstraintName("FK_Prod_ItemAttributsJoin_Prod_ItemAttributes");

                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("ProdItemAttributsJoins")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Prod_ItemAttributsJoin_MS_ItemCard");

                    b.Navigation("Attribut");

                    b.Navigation("ItemCard");
                });

            modelBuilder.Entity("DAL.Models.ProdItemBatchPartition", b =>
                {
                    b.HasOne("DAL.Models.ProdItemAttributesBatche", "ItemAtrribBatch")
                        .WithMany("ProdItemBatchPartitions")
                        .HasForeignKey("ItemAtrribBatchId")
                        .HasConstraintName("FK_Prod_ItemBatchPartition_Prod_ItemAttributesBatche");

                    b.Navigation("ItemAtrribBatch");
                });

            modelBuilder.Entity("DAL.Models.ProdItemcardExpense", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("ProdItemcardExpenses")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Prod_ItemcardExpenses_MS_ItemCard");

                    b.Navigation("ItemCard");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderEmpCostDocDetail", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrderEmpCostDoc", "JorderEmpDoc")
                        .WithMany("ProdJobOrderEmpCostDocDetails")
                        .HasForeignKey("JorderEmpDocId")
                        .HasConstraintName("FK_Prod_JobOrderEmpCostDocDetail_Prod_JobOrderEmpCostDoc");

                    b.Navigation("JorderEmpDoc");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderEquipCostDocDetail", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrderEquipCostDoc", "JorderEquipDoc")
                        .WithMany("ProdJobOrderEquipCostDocDetails")
                        .HasForeignKey("JorderEquipDocId")
                        .HasConstraintName("FK_Prod_JobOrderEquipCostDocDetail_Prod_JobOrderEquipCostDoc");

                    b.Navigation("JorderEquipDoc");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderEquipment", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderEquipments")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderEquipment_Prod_JobOrder");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderExpense", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderExpenses")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderExpenses_Prod_JobOrder");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderGoStock", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderGoStocks")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderGoStock_Prod_JobOrder");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderJob", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderJobs")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderJobs_Prod_JobOrder");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderMaterial", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderMaterials")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderMaterials_Prod_JobOrder");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderProduct", b =>
                {
                    b.HasOne("DAL.Models.ProdItemAttributesBatche", "ItemAtrribBatch")
                        .WithMany("ProdJobOrderProducts")
                        .HasForeignKey("ItemAtrribBatchId")
                        .HasConstraintName("FK_Prod_JobOrderProducts_Prod_ItemAttributesBatche");

                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("ProdJobOrderProducts")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Prod_JobOrderProducts_MS_ItemCard");

                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderProducts")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderProducts_Prod_JobOrder");

                    b.Navigation("ItemAtrribBatch");

                    b.Navigation("ItemCard");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderPurchaseInvoice", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderPurchaseInvoices")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderPurchaseInvoices_Prod_JobOrder");

                    b.HasOne("DAL.Models.MsPurchasInvoice", "PurInv")
                        .WithMany("ProdJobOrderPurchaseInvoices")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_Prod_JobOrderPurchaseInvoices_MS_PurchasInvoice");

                    b.Navigation("JobOrder");

                    b.Navigation("PurInv");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderScrap", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderScraps")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderScrap_Prod_JobOrder");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderService", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderServices")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderServices_Prod_JobOrder");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderTask", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderTasks")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderTasks_Prod_JobOrder");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderWorkFlow", b =>
                {
                    b.HasOne("DAL.Models.ProdJobOrder", "JobOrder")
                        .WithMany("ProdJobOrderWorkFlows")
                        .HasForeignKey("JobOrderId")
                        .HasConstraintName("FK_Prod_JobOrderWorkFlow_Prod_JobOrder");

                    b.Navigation("JobOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdJoinTaskEquipment", b =>
                {
                    b.HasOne("DAL.Models.ProdTask", "Task")
                        .WithMany("ProdJoinTaskEquipments")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Prod_JoinTaskEquipments_Prod_Tasks");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("DAL.Models.ProdJoinTaskJob", b =>
                {
                    b.HasOne("DAL.Models.ProdTask", "Task")
                        .WithMany("ProdJoinTaskJobs")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Prod_JoinTaskJob_Prod_Tasks");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("DAL.Models.ProdProductionLineDetail", b =>
                {
                    b.HasOne("DAL.Models.ProdProductionLine", "ProLine")
                        .WithMany("ProdProductionLineDetails")
                        .HasForeignKey("ProLineId")
                        .HasConstraintName("FK_Prod_ProductionLineDetails_Prod_ProductionLine");

                    b.Navigation("ProLine");
                });

            modelBuilder.Entity("DAL.Models.ProdProductionOrderDetail", b =>
                {
                    b.HasOne("DAL.Models.ProdProductionOrder", "ProductionOrder")
                        .WithMany("ProdProductionOrderDetails")
                        .HasForeignKey("ProductionOrderId")
                        .HasConstraintName("FK_Prod_ProductionOrderDetail_Prod_ProductionOrder");

                    b.Navigation("ProductionOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdRecipeDetail", b =>
                {
                    b.HasOne("DAL.Models.ProdRecipe", "Recipe")
                        .WithMany("ProdRecipeDetails")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK_Prod_RecipeDetail_Prod_Recipe");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderEquipment", b =>
                {
                    b.HasOne("DAL.Models.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderEquipments")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderEquipment_Prod_WorkOrder");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderExpense", b =>
                {
                    b.HasOne("DAL.Models.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderExpenses")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderExpenses_Prod_WorkOrder");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderItemRecQualityDoc", b =>
                {
                    b.HasOne("DAL.Models.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderItemRecQualityDocs")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderItemRecQualityDocs_Prod_WorkOrder");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderMaterial", b =>
                {
                    b.HasOne("DAL.Models.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderMaterials")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderMaterials_Prod_WorkOrder");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderProdItem", b =>
                {
                    b.HasOne("DAL.Models.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderProdItems")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderProdItems_Prod_WorkOrder");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrderService", b =>
                {
                    b.HasOne("DAL.Models.ProdWorkOrder", "WorkOrder")
                        .WithMany("ProdWorkOrderServices")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Prod_WorkOrderServices_Prod_WorkOrder");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("DAL.Models.ProjAccount", b =>
                {
                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjAccounts")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_Accounts_Proj_Projects");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjEstimateItem", b =>
                {
                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjEstimateItems")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_EstimateItems_Proj_Projects");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjExpense", b =>
                {
                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjExpenses")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_Expenses_Proj_Projects");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjFund", b =>
                {
                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjFunds")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_Fund_Proj_Projects");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjProjDocument", b =>
                {
                    b.HasOne("DAL.Models.CodOwnershipBond", "OwnShipBond")
                        .WithMany("ProjProjDocuments")
                        .HasForeignKey("OwnShipBondId")
                        .HasConstraintName("FK_Proj_ProjDocuments_Cod_OwnershipBonds");

                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjProjDocuments")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjDocuments_Proj_Projects");

                    b.Navigation("OwnShipBond");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjProjectItemEmpJoin", b =>
                {
                    b.HasOne("DAL.Models.HrEmployee", "Emp")
                        .WithMany("ProjProjectItemEmpJoins")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Proj_ProjectItemEmpJoin_Hr_Employees");

                    b.HasOne("DAL.Models.ProjProjectItemsJoin", "ProjItemsJoin")
                        .WithMany("ProjProjectItemEmpJoins")
                        .HasForeignKey("ProjItemsJoinId")
                        .HasConstraintName("FK_Proj_ProjectItemEmpJoin_Proj_ProjectItemsJoin");

                    b.Navigation("Emp");

                    b.Navigation("ProjItemsJoin");
                });

            modelBuilder.Entity("DAL.Models.ProjProjectItemsJoin", b =>
                {
                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjProjectItemsJoins")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjectItemsJoin_Proj_Projects");

                    b.HasOne("DAL.Models.ProjProjectItem", "ProjectItems")
                        .WithMany("ProjProjectItemsJoins")
                        .HasForeignKey("ProjectItemsId")
                        .HasConstraintName("FK_Proj_ProjectItemsJoin_Proj_ProjectItems");

                    b.Navigation("Project");

                    b.Navigation("ProjectItems");
                });

            modelBuilder.Entity("DAL.Models.ProjProjectItemsVendor", b =>
                {
                    b.HasOne("DAL.Models.ProjProjectItem", "ProjectItems")
                        .WithMany("ProjProjectItemsVendors")
                        .HasForeignKey("ProjectItemsId")
                        .HasConstraintName("FK_Proj_ProjectItemsVendors_Proj_ProjectItems");

                    b.HasOne("DAL.Models.MsVendor", "Vendor")
                        .WithMany("ProjProjectItemsVendors")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Proj_ProjectItemsVendors_MS_Vendor");

                    b.Navigation("ProjectItems");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("DAL.Models.ProjProjExploitJoin", b =>
                {
                    b.HasOne("DAL.Models.CodBuildingExploitation", "BuildExploit")
                        .WithMany("ProjProjExploitJoins")
                        .HasForeignKey("BuildExploitId")
                        .HasConstraintName("FK_Proj_ProjExploitJoin_Cod_BuildingExploitation");

                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjProjExploitJoins")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjExploitJoin_Proj_Projects");

                    b.Navigation("BuildExploit");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjProjInsurance", b =>
                {
                    b.HasOne("DAL.Models.CodBuildingInsuranceStatus", "BuildInsurStat")
                        .WithMany("ProjProjInsurances")
                        .HasForeignKey("BuildInsurStatId")
                        .HasConstraintName("FK_Proj_ProjInsurance_Cod_BuildingInsuranceStatus");

                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjProjInsurances")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjInsurance_Proj_Projects");

                    b.Navigation("BuildInsurStat");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjProjInsuranceUnit", b =>
                {
                    b.HasOne("DAL.Models.CodInsuranceCase", "InsurCase")
                        .WithMany("ProjProjInsuranceUnits")
                        .HasForeignKey("InsurCaseId")
                        .HasConstraintName("FK_Proj_ProjInsuranceUnit_Cod_InsuranceCases");

                    b.HasOne("DAL.Models.ProjProjUnit", "ProjUnit")
                        .WithMany("ProjProjInsuranceUnits")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjInsuranceUnit_Proj_ProjUnits");

                    b.HasOne("DAL.Models.CodUnitInsuranceStatus", "UnitInsurstat")
                        .WithMany("ProjProjInsuranceUnits")
                        .HasForeignKey("UnitInsurstatId")
                        .HasConstraintName("FK_Proj_ProjInsuranceUnit_Cod_UnitInsuranceStatus");

                    b.Navigation("InsurCase");

                    b.Navigation("ProjUnit");

                    b.Navigation("UnitInsurstat");
                });

            modelBuilder.Entity("DAL.Models.ProjProjItemEmpTaskJoin", b =>
                {
                    b.HasOne("DAL.Models.ProjProjectItemEmpJoin", "ProjItemEmp")
                        .WithMany("ProjProjItemEmpTaskJoins")
                        .HasForeignKey("ProjItemEmpId")
                        .HasConstraintName("FK_Proj_ProjItemEmpTaskJoin_Proj_ProjectItemEmpJoin");

                    b.HasOne("DAL.Models.ProdTask", "Task")
                        .WithMany("ProjProjItemEmpTaskJoins")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Proj_ProjItemEmpTaskJoin_Prod_Tasks");

                    b.Navigation("ProjItemEmp");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("DAL.Models.ProjProjOccupTypeJoin", b =>
                {
                    b.HasOne("DAL.Models.CodBuildOccupType", "BuildOccupType")
                        .WithMany("ProjProjOccupTypeJoins")
                        .HasForeignKey("BuildOccupTypeId")
                        .HasConstraintName("FK_Proj_ProjOccupTypeJoin_Cod_BuildOccupTypes");

                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjProjOccupTypeJoins")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjOccupTypeJoin_Proj_Projects");

                    b.Navigation("BuildOccupType");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjProjOwnerJoin", b =>
                {
                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjProjOwnerJoins")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjOwnerJoin_Proj_Projects");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjProjParkingJoin", b =>
                {
                    b.HasOne("DAL.Models.CodParking", "Parking")
                        .WithMany("ProjProjParkingJoins")
                        .HasForeignKey("ParkingId")
                        .HasConstraintName("FK_Proj_ProjParkingJoin_Cod_Parkings");

                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjProjParkingJoins")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjParkingJoin_Proj_Projects");

                    b.Navigation("Parking");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjProjPermitActivityJoin", b =>
                {
                    b.HasOne("DAL.Models.CodBuildPermitActiv", "BuildPermitActivity")
                        .WithMany("ProjProjPermitActivityJoins")
                        .HasForeignKey("BuildPermitActivityId")
                        .HasConstraintName("FK_Proj_ProjPermitActivityJoin_Cod_BuildPermitActiv");

                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjProjPermitActivityJoins")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjPermitActivityJoin_Proj_Projects");

                    b.Navigation("BuildPermitActivity");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjProjPerspectiveJoin", b =>
                {
                    b.HasOne("DAL.Models.CodBuildPerspective", "BuildPerspective")
                        .WithMany("ProjProjPerspectiveJoins")
                        .HasForeignKey("BuildPerspectiveId")
                        .HasConstraintName("FK_Proj_ProjPerspectiveJoin_Cod_BuildPerspective");

                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjProjPerspectiveJoins")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjPerspectiveJoin_Proj_Projects2");

                    b.Navigation("BuildPerspective");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjProjPicture", b =>
                {
                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjProjPictures")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjPicture_Proj_Projects");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnit", b =>
                {
                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjProjUnits")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_ProjUnits_Proj_Projects");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitDocument", b =>
                {
                    b.HasOne("DAL.Models.CodOwnershipBond", "OwnShipBond")
                        .WithMany("ProjProjUnitDocuments")
                        .HasForeignKey("OwnShipBondId")
                        .HasConstraintName("FK_Proj_ProjUnitDocument_Cod_OwnershipBonds");

                    b.HasOne("DAL.Models.ProjProjUnit", "ProjUnit")
                        .WithMany("ProjProjUnitDocuments")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitDocument_Proj_ProjUnits");

                    b.Navigation("OwnShipBond");

                    b.Navigation("ProjUnit");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitExploitJoin", b =>
                {
                    b.HasOne("DAL.Models.ProjProjUnit", "ProjUnit")
                        .WithMany("ProjProjUnitExploitJoins")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitExploitJoin_Proj_ProjUnits");

                    b.HasOne("DAL.Models.CodUnitExploitation", "UnitExploit")
                        .WithMany("ProjProjUnitExploitJoins")
                        .HasForeignKey("UnitExploitId")
                        .HasConstraintName("FK_Proj_ProjUnitExploitJoin_Cod_UnitExploitation");

                    b.Navigation("ProjUnit");

                    b.Navigation("UnitExploit");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitInstallTemp", b =>
                {
                    b.HasOne("DAL.Models.CodInstallmentTemp", "InstallTemp")
                        .WithMany("ProjProjUnitInstallTemps")
                        .HasForeignKey("InstallTempId")
                        .HasConstraintName("FK_Proj_ProjUnitInstallTemp_Cod_InstallmentTemps");

                    b.HasOne("DAL.Models.ProjProjUnit", "ProjUnit")
                        .WithMany("ProjProjUnitInstallTemps")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitInstallTemp_Proj_ProjUnits");

                    b.Navigation("InstallTemp");

                    b.Navigation("ProjUnit");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitOccupTypeJoin", b =>
                {
                    b.HasOne("DAL.Models.ProjProjUnit", "ProjUnit")
                        .WithMany("ProjProjUnitOccupTypeJoins")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitOccupTypeJoin_Proj_ProjUnits");

                    b.HasOne("DAL.Models.CodUnitOccupancyType", "UnitOccuType")
                        .WithMany("ProjProjUnitOccupTypeJoins")
                        .HasForeignKey("UnitOccuTypeId")
                        .HasConstraintName("FK_Proj_ProjUnitOccupTypeJoin_Cod_UnitOccupancyTypes");

                    b.Navigation("ProjUnit");

                    b.Navigation("UnitOccuType");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitOwnerJoin", b =>
                {
                    b.HasOne("DAL.Models.ProjProjUnit", "ProjUnit")
                        .WithMany("ProjProjUnitOwnerJoins")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitOwnerJoin_Proj_ProjUnits");

                    b.Navigation("ProjUnit");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitPermitActivityJoin", b =>
                {
                    b.HasOne("DAL.Models.ProjProjUnit", "ProjUnit")
                        .WithMany("ProjProjUnitPermitActivityJoins")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitPermitActivityJoin_Proj_ProjUnits");

                    b.HasOne("DAL.Models.CodUnitPermittedActivity", "UnitPermitActiv")
                        .WithMany("ProjProjUnitPermitActivityJoins")
                        .HasForeignKey("UnitPermitActivId")
                        .HasConstraintName("FK_Proj_ProjUnitPermitActivityJoin_Cod_UnitPermittedActivity");

                    b.Navigation("ProjUnit");

                    b.Navigation("UnitPermitActiv");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitPerspectiveJoin", b =>
                {
                    b.HasOne("DAL.Models.ProjProjUnit", "ProjUnit")
                        .WithMany("ProjProjUnitPerspectiveJoins")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitPerspectiveJoin_Proj_ProjUnits");

                    b.HasOne("DAL.Models.CodUnitPerspective", "UnitPerspective")
                        .WithMany("ProjProjUnitPerspectiveJoins")
                        .HasForeignKey("UnitPerspectiveId")
                        .HasConstraintName("FK_Proj_ProjUnitPerspectiveJoin_Cod_UnitPerspective");

                    b.Navigation("ProjUnit");

                    b.Navigation("UnitPerspective");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitPicture", b =>
                {
                    b.HasOne("DAL.Models.ProjProjUnit", "ProjUnit")
                        .WithMany("ProjProjUnitPictures")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitPicture_Proj_ProjUnits");

                    b.Navigation("ProjUnit");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitService", b =>
                {
                    b.HasOne("DAL.Models.ProjProjUnit", "ProjUnit")
                        .WithMany("ProjProjUnitServices")
                        .HasForeignKey("ProjUnitId")
                        .HasConstraintName("FK_Proj_ProjUnitService_Proj_ProjUnits");

                    b.HasOne("DAL.Models.ProjUnitReservation", "Reserv")
                        .WithMany("ProjProjUnitServices")
                        .HasForeignKey("ReservId")
                        .HasConstraintName("FK_Proj_ProjUnitService_Proj_UnitReservation");

                    b.HasOne("DAL.Models.CodUnitService", "UnitServ")
                        .WithMany("ProjProjUnitServices")
                        .HasForeignKey("UnitServId")
                        .HasConstraintName("FK_Proj_ProjUnitService_Cod_UnitServices");

                    b.Navigation("ProjUnit");

                    b.Navigation("Reserv");

                    b.Navigation("UnitServ");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnitSubUnit", b =>
                {
                    b.HasOne("DAL.Models.ProjProjUnit", "ProjUnit")
                        .WithMany("ProjProjUnitSubUnits")
                        .HasForeignKey("ProjUnitId")
                        .IsRequired()
                        .HasConstraintName("FK_Proj_ProjUnitSubUnits_Proj_ProjUnits");

                    b.HasOne("DAL.Models.CodeSubUnitType", "SubUnittype")
                        .WithMany("ProjProjUnitSubUnits")
                        .HasForeignKey("SubUnittypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Proj_ProjUnitSubUnits_Code_SubUnitTypes");

                    b.Navigation("ProjUnit");

                    b.Navigation("SubUnittype");
                });

            modelBuilder.Entity("DAL.Models.ProjRealItem", b =>
                {
                    b.HasOne("DAL.Models.ProjProject", "Project")
                        .WithMany("ProjRealItems")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_RealItems_Proj_Projects");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DAL.Models.ProjReserveUnitDocument", b =>
                {
                    b.HasOne("DAL.Models.ProjUnitReservation", "Reserv")
                        .WithMany("ProjReserveUnitDocuments")
                        .HasForeignKey("ReservId")
                        .HasConstraintName("FK_Proj_ReserveUnitDocuments_Proj_UnitReservation");

                    b.Navigation("Reserv");
                });

            modelBuilder.Entity("DAL.Models.ProjReserveUnitOwner", b =>
                {
                    b.HasOne("DAL.Models.ProjUnitReservation", "Reserv")
                        .WithMany("ProjReserveUnitOwners")
                        .HasForeignKey("ReservId")
                        .HasConstraintName("FK_Proj_ReserveUnitOwners_Proj_UnitReservation");

                    b.Navigation("Reserv");
                });

            modelBuilder.Entity("DAL.Models.ProjReserveUnitSeller", b =>
                {
                    b.HasOne("DAL.Models.ProjUnitReservation", "Reserv")
                        .WithMany("ProjReserveUnitSellers")
                        .HasForeignKey("ReservId")
                        .HasConstraintName("FK_Proj_ReserveUnitSellers_Proj_UnitReservation");

                    b.Navigation("Reserv");
                });

            modelBuilder.Entity("DAL.Models.ProjReservInstallment", b =>
                {
                    b.HasOne("DAL.Models.ProjUnitReservation", "Reserv")
                        .WithMany("ProjReservInstallments")
                        .HasForeignKey("ReservId")
                        .HasConstraintName("FK_Proj_ReservInstallments_Proj_UnitReservation1");

                    b.Navigation("Reserv");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractAdd", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderContract", "TenderContract")
                        .WithMany("ProjTenderContractAdds")
                        .HasForeignKey("TenderContractId")
                        .HasConstraintName("FK_Proj_TenderContractAdds_Proj_TenderContract");

                    b.Navigation("TenderContract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractDetail", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderContract", "TenderContract")
                        .WithMany("ProjTenderContractDetails")
                        .HasForeignKey("TenderContractId")
                        .HasConstraintName("FK_Proj_TenderContractDetail_Proj_TenderContract");

                    b.Navigation("TenderContract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractDiscount", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderContract", "TenderContract")
                        .WithMany("ProjTenderContractDiscounts")
                        .HasForeignKey("TenderContractId")
                        .HasConstraintName("FK_Proj_TenderContractDiscounts_Proj_TenderContract");

                    b.Navigation("TenderContract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorContractAdd", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderContractorContract", "ContractorContract")
                        .WithMany("ProjTenderContractorContractAdds")
                        .HasForeignKey("ContractorContractId")
                        .HasConstraintName("FK_Proj_TenderContractorContractAdds_Proj_TenderContractorContract");

                    b.Navigation("ContractorContract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorContractDetail", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderContractorContract", "ContractorContract")
                        .WithMany("ProjTenderContractorContractDetails")
                        .HasForeignKey("ContractorContractId")
                        .HasConstraintName("FK_Proj_TenderContractorContractDetails_Proj_TenderContractorContract");

                    b.Navigation("ContractorContract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorContractDiscount", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderContractorContract", "ContractorContract")
                        .WithMany("ProjTenderContractorContractDiscounts")
                        .HasForeignKey("ContractorContractId")
                        .HasConstraintName("FK_Proj_TenderContractorContractDiscounts_Proj_TenderContractorContract");

                    b.Navigation("ContractorContract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorExitractAdd", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderContractorExitract", "ContractorExitract")
                        .WithMany("ProjTenderContractorExitractAdds")
                        .HasForeignKey("ContractorExitractId")
                        .HasConstraintName("FK_Proj_TenderContractorExitractAdds_Proj_TenderContractorExitract");

                    b.Navigation("ContractorExitract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorExitractDetail", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderContractorExitract", "ContractorExitract")
                        .WithMany("ProjTenderContractorExitractDetails")
                        .HasForeignKey("ContractorExitractId")
                        .HasConstraintName("FK_Proj_TenderContractorExitractDetail_Proj_TenderContractorExitract");

                    b.Navigation("ContractorExitract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorExitractDiscount", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderContractorExitract", "ContractorExitract")
                        .WithMany("ProjTenderContractorExitractDiscounts")
                        .HasForeignKey("ContractorExitractId")
                        .HasConstraintName("FK_Proj_TenderContractorExitractDiscounts_Proj_TenderContractorExitract");

                    b.Navigation("ContractorExitract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderExecutionExitractDetail", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderExecutionExitract", "ExecutExitract")
                        .WithMany("ProjTenderExecutionExitractDetails")
                        .HasForeignKey("ExecutExitractId")
                        .HasConstraintName("FK_Proj_TenderExecutionExitractDetail_Proj_TenderExecutionExitract");

                    b.Navigation("ExecutExitract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOfferDetail", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderOffer", "TenderOffer")
                        .WithMany("ProjTenderOfferDetails")
                        .HasForeignKey("TenderOfferId")
                        .HasConstraintName("FK_Proj_TenderOfferDetail_Proj_TenderOffer");

                    b.Navigation("TenderOffer");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOwnerExitractAdd", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderOwnerExitract", "OwnerExitract")
                        .WithMany("ProjTenderOwnerExitractAdds")
                        .HasForeignKey("OwnerExitractId")
                        .HasConstraintName("FK_Proj_TenderOwnerExitractAdds_Proj_TenderOwnerExitract");

                    b.Navigation("OwnerExitract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOwnerExitractDetail", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderOwnerExitract", "OwnerExitract")
                        .WithMany("ProjTenderOwnerExitractDetails")
                        .HasForeignKey("OwnerExitractId")
                        .HasConstraintName("FK_Proj_TenderOwnerExitractDetail_Proj_TenderOwnerExitract");

                    b.Navigation("OwnerExitract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOwnerExitractDiscount", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderOwnerExitract", "OwnerExitract")
                        .WithMany("ProjTenderOwnerExitractDiscounts")
                        .HasForeignKey("OwnerExitractId")
                        .HasConstraintName("FK_Proj_TenderOwnerExitractDiscounts_Proj_TenderOwnerExitract");

                    b.Navigation("OwnerExitract");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderPlanDetail", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderPlan", "TenderPlan")
                        .WithMany("ProjTenderPlanDetails")
                        .HasForeignKey("TenderPlanId")
                        .HasConstraintName("FK_Proj_TenderPlanDetails_Proj_TenderPlan");

                    b.Navigation("TenderPlan");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderPlanDistributionDetail", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderPlanDistribution", "TenderPlanDist")
                        .WithMany("ProjTenderPlanDistributionDetails")
                        .HasForeignKey("TenderPlanDistId")
                        .HasConstraintName("FK_Proj_TenderPlanDistributionDetails_Proj_TenderPlanDistribution");

                    b.Navigation("TenderPlanDist");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderQoutationDetail", b =>
                {
                    b.HasOne("DAL.Models.ProjTenderQoutation", "TenderQoutation")
                        .WithMany("ProjTenderQoutationDetails")
                        .HasForeignKey("TenderQoutationId")
                        .HasConstraintName("FK_Proj_TenderQoutationDetails_Proj_TenderQoutation");

                    b.Navigation("TenderQoutation");
                });

            modelBuilder.Entity("DAL.Models.ProjTendersDetail", b =>
                {
                    b.HasOne("DAL.Models.ProjTender", "Tender")
                        .WithMany("ProjTendersDetails")
                        .HasForeignKey("TenderId")
                        .HasConstraintName("FK_Proj_TendersDetails_Proj_Tenders");

                    b.Navigation("Tender");
                });

            modelBuilder.Entity("DAL.Models.ProjUnitReservationGuarantor", b =>
                {
                    b.HasOne("DAL.Models.ProjUnitReservation", "Reserv")
                        .WithMany("ProjUnitReservationGuarantors")
                        .HasForeignKey("ReservId")
                        .HasConstraintName("FK_Proj_UnitReservationGuarantors_Proj_UnitReservation");

                    b.Navigation("Reserv");
                });

            modelBuilder.Entity("DAL.Models.QualityItemDeliverDetail", b =>
                {
                    b.HasOne("DAL.Models.QualityItemDelivery", "ItemDeliver")
                        .WithMany("QualityItemDeliverDetails")
                        .HasForeignKey("ItemDeliverId")
                        .HasConstraintName("FK_Quality_ItemDeliverDetails_Quality_ItemDelivery");

                    b.Navigation("ItemDeliver");
                });

            modelBuilder.Entity("DAL.Models.QualityItemDeliveryPackage", b =>
                {
                    b.HasOne("DAL.Models.QualityItemDelivery", "ItemDeliver")
                        .WithMany("QualityItemDeliveryPackages")
                        .HasForeignKey("ItemDeliverId")
                        .HasConstraintName("FK_Quality_ItemDeliveryPackages_Quality_ItemDelivery");

                    b.Navigation("ItemDeliver");
                });

            modelBuilder.Entity("DAL.Models.QualityItemRecCheckDetail", b =>
                {
                    b.HasOne("DAL.Models.QualityItemRecCheck", "ItemRecQuality")
                        .WithMany("QualityItemRecCheckDetails")
                        .HasForeignKey("ItemRecQualityId")
                        .HasConstraintName("FK_Quality_ItemRecCheckDetail_Quality_ItemRecCheck");

                    b.Navigation("ItemRecQuality");
                });

            modelBuilder.Entity("DAL.Models.QualityItemRecieveDetail", b =>
                {
                    b.HasOne("DAL.Models.QualityItemRecieve", "ProdItemRec")
                        .WithMany("QualityItemRecieveDetails")
                        .HasForeignKey("ProdItemRecId")
                        .HasConstraintName("FK_Prod_ItemRecieveDetails_Prod_ItemRecieve");

                    b.Navigation("ProdItemRec");
                });

            modelBuilder.Entity("DAL.Models.QualityItemRecPackage", b =>
                {
                    b.HasOne("DAL.Models.QualityItemRecCheck", "ItemRecQuality")
                        .WithMany("QualityItemRecPackages")
                        .HasForeignKey("ItemRecQualityId")
                        .HasConstraintName("FK_Quality_ItemRecPackages_Quality_ItemRecCheck");

                    b.HasOne("DAL.Models.ProdWorkOrder", "WorkOrder")
                        .WithMany("QualityItemRecPackages")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_Quality_ItemRecPackages_Prod_WorkOrder");

                    b.Navigation("ItemRecQuality");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrderComment", b =>
                {
                    b.HasOne("DAL.Models.RepairJobOrder", "Repair")
                        .WithMany("RepairJobOrderComments")
                        .HasForeignKey("RepairId")
                        .HasConstraintName("FK_Repair_JobOrderComments_Repair_JobOrder");

                    b.Navigation("Repair");
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrderEmp", b =>
                {
                    b.HasOne("DAL.Models.RepairJobOrder", "Repair")
                        .WithMany("RepairJobOrderEmps")
                        .HasForeignKey("RepairId")
                        .HasConstraintName("FK_Repair_JobOrderEmps_Repair_JobOrder");

                    b.Navigation("Repair");
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrderItem", b =>
                {
                    b.HasOne("DAL.Models.RepairJobOrder", "Repair")
                        .WithMany("RepairJobOrderItems")
                        .HasForeignKey("RepairId")
                        .HasConstraintName("FK_Repair_JobOrderItems_Repair_JobOrder");

                    b.Navigation("Repair");
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrderScrapItem", b =>
                {
                    b.HasOne("DAL.Models.RepairJobOrder", "Repair")
                        .WithMany("RepairJobOrderScrapItems")
                        .HasForeignKey("RepairId")
                        .HasConstraintName("FK_Repair_JobOrderScrapItems_Repair_JobOrder");

                    b.Navigation("Repair");
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrederExpense", b =>
                {
                    b.HasOne("DAL.Models.RepairJobOrder", "Repair")
                        .WithMany("RepairJobOrederExpenses")
                        .HasForeignKey("RepairId")
                        .HasConstraintName("FK_Repair_JobOrederExpenses_Repair_JobOrder");

                    b.Navigation("Repair");
                });

            modelBuilder.Entity("DAL.Models.SrAccomodation", b =>
                {
                    b.HasOne("DAL.Models.SrHotel", "Hotel")
                        .WithMany("SrAccomodations")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK_Sr_Accomodation_Sr_Hotels");

                    b.HasOne("DAL.Models.SrTrip", "Trip")
                        .WithMany("SrAccomodations")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK_Sr_Accomodation_Sr_Trips");

                    b.Navigation("Hotel");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("DAL.Models.SrEmpServicType", b =>
                {
                    b.HasOne("DAL.Models.HrEmployee", "Emp")
                        .WithMany("SrEmpServicTypes")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Sr_EmpServicTypes_Hr_Employees");

                    b.HasOne("DAL.Models.SrServiceType", "SrTyp")
                        .WithMany("SrEmpServicTypes")
                        .HasForeignKey("SrTypId")
                        .HasConstraintName("FK_Sr_EmpServicTypes_Sr_ServiceTypes");

                    b.Navigation("Emp");

                    b.Navigation("SrTyp");
                });

            modelBuilder.Entity("DAL.Models.SrExtension", b =>
                {
                    b.HasOne("DAL.Models.MsgaCity", "City")
                        .WithMany("SrExtensions")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Sr_Extension_MSGA_City");

                    b.HasOne("DAL.Models.SrHotel", "Hotel")
                        .WithMany("SrExtensions")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK_Sr_Extension_Sr_Hotels");

                    b.HasOne("DAL.Models.SrTrip", "Trip")
                        .WithMany("SrExtensions")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK_Sr_Extension_Sr_Trips");

                    b.Navigation("City");

                    b.Navigation("Hotel");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("DAL.Models.SrFlight", b =>
                {
                    b.HasOne("DAL.Models.SrTrip", "Trip")
                        .WithMany("SrFlights")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK_Sr_Flight_Sr_Trips");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("DAL.Models.SrHotel", b =>
                {
                    b.HasOne("DAL.Models.MsgaCity", "City")
                        .WithMany("SrHotels")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Sr_Hotels_MSGA_City");

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Models.SrJobAdditionalCost", b =>
                {
                    b.HasOne("DAL.Models.SrJobOrder", "Jorder")
                        .WithMany("SrJobAdditionalCosts")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobAdditionalCost_Sr_JobOrder");

                    b.Navigation("Jorder");
                });

            modelBuilder.Entity("DAL.Models.SrJobComment", b =>
                {
                    b.HasOne("DAL.Models.SrJobOrder", "Jorder")
                        .WithMany("SrJobComments")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobComments_Sr_JobOrder");

                    b.Navigation("Jorder");
                });

            modelBuilder.Entity("DAL.Models.SrJobExtrnalExpen", b =>
                {
                    b.HasOne("DAL.Models.SrJobOrder", "Jorder")
                        .WithMany("SrJobExtrnalExpens")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobExtrnalExpens_Sr_JobOrder");

                    b.Navigation("Jorder");
                });

            modelBuilder.Entity("DAL.Models.SrJobFile", b =>
                {
                    b.HasOne("DAL.Models.SrJobOrder", "Jorder")
                        .WithMany("SrJobFiles")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobFiles_Sr_JobOrder");

                    b.Navigation("Jorder");
                });

            modelBuilder.Entity("DAL.Models.SrJobOrder", b =>
                {
                    b.HasOne("DAL.Models.SrReciption", "Reciption")
                        .WithMany("SrJobOrders")
                        .HasForeignKey("ReciptionId")
                        .HasConstraintName("FK_Sr_JobOrder_Sr_Reciption");

                    b.HasOne("DAL.Models.SrServiceType", "SrTyp")
                        .WithMany("SrJobOrders")
                        .HasForeignKey("SrTypId")
                        .HasConstraintName("FK_Sr_JobOrder_Sr_ServiceTypes");

                    b.HasOne("DAL.Models.SrVehicle", "Vehicle")
                        .WithMany("SrJobOrders")
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("FK_Sr_JobOrder_Sr_Vehicles");

                    b.Navigation("Reciption");

                    b.Navigation("SrTyp");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DAL.Models.SrJobSpart", b =>
                {
                    b.HasOne("DAL.Models.SrJobOrder", "Jorder")
                        .WithMany("SrJobSparts")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobSparts_Sr_JobOrder");

                    b.Navigation("Jorder");
                });

            modelBuilder.Entity("DAL.Models.SrJobSwage", b =>
                {
                    b.HasOne("DAL.Models.SrJobOrder", "Jorder")
                        .WithMany("SrJobSwages")
                        .HasForeignKey("JorderId")
                        .HasConstraintName("FK_Sr_JobSWages_Sr_JobOrder");

                    b.Navigation("Jorder");
                });

            modelBuilder.Entity("DAL.Models.SrReceptionImage", b =>
                {
                    b.HasOne("DAL.Models.SrReciption", "Reciption")
                        .WithMany("SrReceptionImages")
                        .HasForeignKey("ReciptionId")
                        .HasConstraintName("FK_Sr_ReceptionImages_Sr_Reciption");

                    b.Navigation("Reciption");
                });

            modelBuilder.Entity("DAL.Models.SrReciptionDetail", b =>
                {
                    b.HasOne("DAL.Models.SrComplaint", "Com")
                        .WithMany("SrReciptionDetails")
                        .HasForeignKey("ComId")
                        .HasConstraintName("FK_Sr_ReciptionDetail_Sr_Complaints");

                    b.HasOne("DAL.Models.SrReciption", "Reciption")
                        .WithMany("SrReciptionDetails")
                        .HasForeignKey("ReciptionId")
                        .HasConstraintName("FK_Sr_ReciptionDetail_Sr_Reciption");

                    b.Navigation("Com");

                    b.Navigation("Reciption");
                });

            modelBuilder.Entity("DAL.Models.SrServiceDistributionDetail", b =>
                {
                    b.HasOne("DAL.Models.SrServiceDistribution", "SerDist")
                        .WithMany("SrServiceDistributionDetails")
                        .HasForeignKey("SerDistId")
                        .HasConstraintName("FK_Sr_ServiceDistributionDetails_Sr_ServiceDistribution");

                    b.Navigation("SerDist");
                });

            modelBuilder.Entity("DAL.Models.SrTask", b =>
                {
                    b.HasOne("DAL.Models.SrComplaint", "Com")
                        .WithMany("SrTasks")
                        .HasForeignKey("ComId")
                        .HasConstraintName("FK_Sr_Tasks_Sr_Complaints");

                    b.Navigation("Com");
                });

            modelBuilder.Entity("DAL.Models.SrTaskEmp", b =>
                {
                    b.HasOne("DAL.Models.HrEmployee", "Emp")
                        .WithMany("SrTaskEmps")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Sr_TaskEmp_Hr_Employees");

                    b.HasOne("DAL.Models.SrTask", "Task")
                        .WithMany("SrTaskEmps")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Sr_TaskEmp_Sr_Tasks");

                    b.Navigation("Emp");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("DAL.Models.SrTaskItem", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("SrTaskItems")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Sr_TaskItem_MS_ItemCard");

                    b.HasOne("DAL.Models.SrTask", "Task")
                        .WithMany("SrTaskItems")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Sr_TaskItem_Sr_Tasks");

                    b.Navigation("ItemCard");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("DAL.Models.SrTrafficLinePriceList", b =>
                {
                    b.HasOne("DAL.Models.SrContainerType", "ContainerType")
                        .WithMany("SrTrafficLinePriceLists")
                        .HasForeignKey("ContainerTypeId")
                        .HasConstraintName("FK_Sr_TrafficLinePriceList_Sr_ContainerTypes");

                    b.HasOne("DAL.Models.SrTrafficLine", "TrafficLine")
                        .WithMany("SrTrafficLinePriceLists")
                        .HasForeignKey("TrafficLineId")
                        .HasConstraintName("FK_Sr_TrafficLinePriceList_Sr_TrafficLines");

                    b.HasOne("DAL.Models.SrVehicle", "Vehicle")
                        .WithMany("SrTrafficLinePriceLists")
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("FK_Sr_TrafficLinePriceList_Sr_Vehicles");

                    b.Navigation("ContainerType");

                    b.Navigation("TrafficLine");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DAL.Models.SrTransportation", b =>
                {
                    b.HasOne("DAL.Models.SrTrip", "Trip")
                        .WithMany("SrTransportations")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK_Sr_Transportation_Sr_Trips");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("DAL.Models.SrTripAccomDetail", b =>
                {
                    b.HasOne("DAL.Models.SrAccomodation", "Accomodation")
                        .WithMany("SrTripAccomDetails")
                        .HasForeignKey("AccomodationId")
                        .HasConstraintName("FK_Sr_TripAccomDetail_Sr_Accomodation");

                    b.Navigation("Accomodation");
                });

            modelBuilder.Entity("DAL.Models.SrTripProgramJoin", b =>
                {
                    b.HasOne("DAL.Models.SrProgram", "Program")
                        .WithMany("SrTripProgramJoins")
                        .HasForeignKey("ProgramId")
                        .HasConstraintName("FK_Sr_TripProgramJoin_Sr_Programs");

                    b.HasOne("DAL.Models.SrTrip", "Trip")
                        .WithMany("SrTripProgramJoins")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK_Sr_TripProgramJoin_Sr_Trips");

                    b.Navigation("Program");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("DAL.Models.SrVehicle", b =>
                {
                    b.HasOne("DAL.Models.SrGarage", "Garage")
                        .WithMany("SrVehicles")
                        .HasForeignKey("GarageId")
                        .HasConstraintName("FK_Sr_Vehicles_Sr_Garage");

                    b.HasOne("DAL.Models.SrVehicleShape", "VehicleShape")
                        .WithMany("SrVehicles")
                        .HasForeignKey("VehicleShapeId")
                        .HasConstraintName("FK_Sr_Vehicles_Sr_VehicleShapes");

                    b.HasOne("DAL.Models.SrVehicleType", "VehicleTyp")
                        .WithMany("SrVehicles")
                        .HasForeignKey("VehicleTypId")
                        .HasConstraintName("FK_Sr_Vehicles_Sr_VehicleTypes");

                    b.HasOne("DAL.Models.SrWarranty", "WidNavigation")
                        .WithMany("SrVehicles")
                        .HasForeignKey("Wid")
                        .HasConstraintName("FK_Sr_Vehicles_Sr_Warranty");

                    b.Navigation("Garage");

                    b.Navigation("VehicleShape");

                    b.Navigation("VehicleTyp");

                    b.Navigation("WidNavigation");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleItemCard", b =>
                {
                    b.HasOne("DAL.Models.MsItemCard", "ItemCard")
                        .WithMany("SrVehicleItemCards")
                        .HasForeignKey("ItemCardId")
                        .HasConstraintName("FK_Sr_VehicleItemCard_MS_ItemCard");

                    b.Navigation("ItemCard");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleJobOrder", b =>
                {
                    b.HasOne("DAL.Models.SrVehicle", "Vehicle")
                        .WithMany("SrVehicleJobOrders")
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("FK_Sr_VehicleJobOrder_Sr_Vehicles");

                    b.HasOne("DAL.Models.SrVheicleJobOrderType", "VorderType")
                        .WithMany("SrVehicleJobOrders")
                        .HasForeignKey("VorderTypeId")
                        .HasConstraintName("FK_Sr_VehicleJobOrder_Sr_VheicleJobOrderType");

                    b.Navigation("Vehicle");

                    b.Navigation("VorderType");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleJobOrderDetail", b =>
                {
                    b.HasOne("DAL.Models.SrDriver", "Driver")
                        .WithMany("SrVehicleJobOrderDetails")
                        .HasForeignKey("DriverId")
                        .HasConstraintName("FK_Sr_VehicleJobOrderDetail_Sr_Drivers");

                    b.HasOne("DAL.Models.SrVehicleJobOrder", "Vjorder")
                        .WithMany("SrVehicleJobOrderDetails")
                        .HasForeignKey("VjorderId")
                        .HasConstraintName("FK_Sr_VehicleJobOrderDetail_Sr_VehicleJobOrder");

                    b.Navigation("Driver");

                    b.Navigation("Vjorder");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleMovementDetail", b =>
                {
                    b.HasOne("DAL.Models.SrVehicleMovement", "VehiclMov")
                        .WithMany("SrVehicleMovementDetails")
                        .HasForeignKey("VehiclMovId")
                        .HasConstraintName("FK_Sr_VehicleMovementDetails_Sr_VehicleMovement");

                    b.Navigation("VehiclMov");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleRentPayJoin", b =>
                {
                    b.HasOne("DAL.Models.MsPaymentNote", "Pay")
                        .WithMany("SrVehicleRentPayJoins")
                        .HasForeignKey("PayId")
                        .HasConstraintName("FK_Sr_VehicleRentPayJoin_MS_PaymentNote");

                    b.HasOne("DAL.Models.SrVehicleRenalContract", "VrentContract")
                        .WithMany("SrVehicleRentPayJoins")
                        .HasForeignKey("VrentContractId")
                        .HasConstraintName("FK_Sr_VehicleRentPayJoin_Sr_VehicleRenalContract");

                    b.Navigation("Pay");

                    b.Navigation("VrentContract");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleRentPurchJoin", b =>
                {
                    b.HasOne("DAL.Models.MsPurchasInvoice", "PurInv")
                        .WithMany("SrVehicleRentPurchJoins")
                        .HasForeignKey("PurInvId")
                        .HasConstraintName("FK_Sr_VehicleRentPurchJoin_MS_PurchasInvoice");

                    b.HasOne("DAL.Models.SrVehicleRenalContract", "VrentContract")
                        .WithMany("SrVehicleRentPurchJoins")
                        .HasForeignKey("VrentContractId")
                        .HasConstraintName("FK_Sr_VehicleRentPurchJoin_Sr_VehicleRenalContract");

                    b.Navigation("PurInv");

                    b.Navigation("VrentContract");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleRentRecJoin", b =>
                {
                    b.HasOne("DAL.Models.MsReceiptNote", "Rect")
                        .WithMany("SrVehicleRentRecJoins")
                        .HasForeignKey("RectId")
                        .HasConstraintName("FK_Sr_VehicleRentRecJoin_Ms_ReceiptNote");

                    b.HasOne("DAL.Models.SrVehicleRenalContract", "VrentContract")
                        .WithMany("SrVehicleRentRecJoins")
                        .HasForeignKey("VrentContractId")
                        .HasConstraintName("FK_Sr_VehicleRentRecJoin_Sr_VehicleRenalContract");

                    b.Navigation("Rect");

                    b.Navigation("VrentContract");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleRentSalesInvJoin", b =>
                {
                    b.HasOne("DAL.Models.MsSalesInvoice", "Inv")
                        .WithMany("SrVehicleRentSalesInvJoins")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK_Sr_VehicleRentSalesInvJoin_Ms_SalesInvoice");

                    b.HasOne("DAL.Models.SrVehicleRenalContract", "VrentContract")
                        .WithMany("SrVehicleRentSalesInvJoins")
                        .HasForeignKey("VrentContractId")
                        .HasConstraintName("FK_Sr_VehicleRentSalesInvJoin_Sr_VehicleRenalContract");

                    b.Navigation("Inv");

                    b.Navigation("VrentContract");
                });

            modelBuilder.Entity("DAL.Models.StockCapitalUpdate", b =>
                {
                    b.HasOne("DAL.Models.StockStock", "Stock")
                        .WithMany("StockCapitalUpdates")
                        .HasForeignKey("StockId")
                        .HasConstraintName("FK_Stock_CapitalUpdate_Stock_Stocks");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("DAL.Models.StockOpenningBalanceDetail", b =>
                {
                    b.HasOne("DAL.Models.StockOpenningBalance", "StockOpen")
                        .WithMany("StockOpenningBalanceDetails")
                        .HasForeignKey("StockOpenId")
                        .HasConstraintName("FK_Stock_OpenningBalanceDetails_Stock_OpenningBalance");

                    b.Navigation("StockOpen");
                });

            modelBuilder.Entity("DAL.Models.StockPortfolioAccount", b =>
                {
                    b.HasOne("DAL.Models.CalAccountChart", "Account")
                        .WithMany("StockPortfolioAccounts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Stock_PortfolioAccounts_Cal_AccountChart");

                    b.HasOne("DAL.Models.StockPortfolio", "StockPortfolio")
                        .WithMany("StockPortfolioAccounts")
                        .HasForeignKey("StockPortfolioId")
                        .HasConstraintName("FK_Stock_PortfolioAccounts_Stock_Portfolio");

                    b.Navigation("Account");

                    b.Navigation("StockPortfolio");
                });

            modelBuilder.Entity("DAL.Models.StockPortfolioStock", b =>
                {
                    b.HasOne("DAL.Models.StockStock", "Stock")
                        .WithMany("StockPortfolioStocks")
                        .HasForeignKey("StockId")
                        .HasConstraintName("FK_Stock_PortfolioStocks_Stock_Stocks");

                    b.HasOne("DAL.Models.StockPortfolio", "StockPortfolio")
                        .WithMany("StockPortfolioStocks")
                        .HasForeignKey("StockPortfolioId")
                        .HasConstraintName("FK_Stock_PortfolioStocks_Stock_Portfolio");

                    b.Navigation("Stock");

                    b.Navigation("StockPortfolio");
                });

            modelBuilder.Entity("DAL.Models.StockPortfolioStockArchive", b =>
                {
                    b.HasOne("DAL.Models.StockArchive", "StockArch")
                        .WithMany("StockPortfolioStockArchives")
                        .HasForeignKey("StockArchId")
                        .HasConstraintName("FK_Stock_PortfolioStockArchives_Stock_Archives");

                    b.HasOne("DAL.Models.StockPortfolioStock", "StockPortJoin")
                        .WithMany("StockPortfolioStockArchives")
                        .HasForeignKey("StockPortJoinId")
                        .HasConstraintName("FK_Stock_PortfolioStockArchives_Stock_PortfolioStocks");

                    b.Navigation("StockArch");

                    b.Navigation("StockPortJoin");
                });

            modelBuilder.Entity("DAL.Models.StockSalesPurchaseDetail", b =>
                {
                    b.HasOne("DAL.Models.StockSalesPurchase", "StockSalPurch")
                        .WithMany("StockSalesPurchaseDetails")
                        .HasForeignKey("StockSalPurchId")
                        .HasConstraintName("FK_Stock_SalesPurchaseDetails_Stock_SalesPurchase");

                    b.Navigation("StockSalPurch");
                });

            modelBuilder.Entity("DAL.Models.StockStock", b =>
                {
                    b.HasOne("DAL.Models.StockCategory", "StockCat")
                        .WithMany("StockStocks")
                        .HasForeignKey("StockCatId")
                        .HasConstraintName("FK_Stock_Stocks_Stock_Categories");

                    b.HasOne("DAL.Models.StockMarket", "StockMarket")
                        .WithMany("StockStocks")
                        .HasForeignKey("StockMarketId")
                        .HasConstraintName("FK_Stock_Stocks_Stock_Markets");

                    b.HasOne("DAL.Models.StockSector", "StockSectors")
                        .WithMany("StockStocks")
                        .HasForeignKey("StockSectorsId")
                        .HasConstraintName("FK_Stock_Stocks_Stock_Sectors");

                    b.Navigation("StockCat");

                    b.Navigation("StockMarket");

                    b.Navigation("StockSectors");
                });

            modelBuilder.Entity("DAL.Models.StockTransferDetail", b =>
                {
                    b.HasOne("DAL.Models.StockTransfer", "StockTransfer")
                        .WithMany("StockTransferDetails")
                        .HasForeignKey("StockTransferId")
                        .IsRequired()
                        .HasConstraintName("FK_Stock_TransferDetail_Stock_Transfer");

                    b.Navigation("StockTransfer");
                });

            modelBuilder.Entity("DAL.Models.SysAnalyticalCodeProccess", b =>
                {
                    b.HasOne("DAL.Models.SysAnalyticalCode", "AidNavigation")
                        .WithMany("SysAnalyticalCodeProccesses")
                        .HasForeignKey("Aid")
                        .HasConstraintName("FK_sys_AnalyticalCodeProccess_Sys_AnalyticalCodes");

                    b.Navigation("AidNavigation");
                });

            modelBuilder.Entity("DAL.Models.SysAnalyticalCodeUpdate", b =>
                {
                    b.HasOne("DAL.Models.SysAnalyticalCode", "AidNavigation")
                        .WithMany("SysAnalyticalCodeUpdates")
                        .HasForeignKey("Aid")
                        .HasConstraintName("FK_sys_AnalyticalCodeUpdates_Sys_AnalyticalCodes");

                    b.Navigation("AidNavigation");
                });

            modelBuilder.Entity("DAL.Models.SysFinancialInterval", b =>
                {
                    b.HasOne("DAL.Models.SysFinancialYear", "FinancialYear")
                        .WithMany("SysFinancialIntervals")
                        .HasForeignKey("FinancialYearId")
                        .HasConstraintName("FK_Sys_FinancialIntervals_Sys_FinancialYears");

                    b.Navigation("FinancialYear");
                });

            modelBuilder.Entity("DAL.Models.SysRemoteBranchesLogDetaile", b =>
                {
                    b.HasOne("DAL.Models.SysRemotBranchesLog", "Log")
                        .WithMany("SysRemoteBranchesLogDetailes")
                        .HasForeignKey("LogId")
                        .HasConstraintName("FK_SysRemoteBranchesLogDetaile_Sys_RemotBranchesLog");

                    b.Navigation("Log");
                });

            modelBuilder.Entity("DAL.Models.SysRemotLogDetail", b =>
                {
                    b.HasOne("DAL.Models.SysRemotTranLog", "Log")
                        .WithMany("SysRemotLogDetails")
                        .HasForeignKey("LogId")
                        .HasConstraintName("FK_Sys_RemotLogDetail_Sys_RemotTranLog");

                    b.Navigation("Log");
                });

            modelBuilder.Entity("DAL.Models.TrOpenningBalanceDetail", b =>
                {
                    b.HasOne("DAL.Models.TrOpenningBalance", "TrOpenningBalance")
                        .WithMany("TrOpenningBalanceDetails")
                        .HasForeignKey("TrOpenningBalanceId")
                        .HasConstraintName("FK_Tr_OpenningBalanceDetails_Tr_OpenningBalance");

                    b.Navigation("TrOpenningBalance");
                });

            modelBuilder.Entity("DAL.Models.WorkForcBloodExecludeDetail", b =>
                {
                    b.HasOne("DAL.Models.WorkForcBloodExeclude", "BloodExeclud")
                        .WithMany("WorkForcBloodExecludeDetails")
                        .HasForeignKey("BloodExecludId")
                        .HasConstraintName("FK_WorkForc_BloodExecludeDetails_WorkForc_BloodExeclude");

                    b.Navigation("BloodExeclud");
                });

            modelBuilder.Entity("DAL.Models.WorkForcFirstCustExecludeDetail", b =>
                {
                    b.HasOne("DAL.Models.WorkForcFirstCustExeclude", "Execlud")
                        .WithMany("WorkForcFirstCustExecludeDetails")
                        .HasForeignKey("ExecludId")
                        .HasConstraintName("FK_WorkForc_FirstCustExecludeDetail_WorkForc_FirstCustExeclude");

                    b.Navigation("Execlud");
                });

            modelBuilder.Entity("DAL.Models.WorkForcSecondCustExecludeDetail", b =>
                {
                    b.HasOne("DAL.Models.WorkForcSecondCustExeclude", "ScndExeclud")
                        .WithMany("WorkForcSecondCustExecludeDetails")
                        .HasForeignKey("ScndExecludId")
                        .HasConstraintName("FK_WorkForc_SecondCustExecludeDetail_WorkForc_SecondCustExeclude");

                    b.Navigation("ScndExeclud");
                });

            modelBuilder.Entity("DAL.Models.WorkForcTemplatesDetail", b =>
                {
                    b.HasOne("DAL.Models.WorkForcTemplate", "Wftemp")
                        .WithMany("WorkForcTemplatesDetails")
                        .HasForeignKey("WftempId")
                        .IsRequired()
                        .HasConstraintName("FK_WorkForc_TemplatesDetails_WorkForc_Templates");

                    b.Navigation("Wftemp");
                });

            modelBuilder.Entity("DAL.Models.WorkForcTestResultsDetail", b =>
                {
                    b.HasOne("DAL.Models.WorkForcTestResult", "TestResult")
                        .WithMany("WorkForcTestResultsDetails")
                        .HasForeignKey("TestResultId")
                        .HasConstraintName("FK_WorkForc_TestResultsDetails_WorkForc_TestResults");

                    b.Navigation("TestResult");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DAL.User.EmiratesUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DAL.User.EmiratesUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.User.EmiratesUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DAL.User.EmiratesUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.AnAnimalDeath", b =>
                {
                    b.Navigation("AnAnimalDeathDetails");
                });

            modelBuilder.Entity("DAL.Models.AnAnimalType", b =>
                {
                    b.Navigation("AnAnimalMidicins");
                });

            modelBuilder.Entity("DAL.Models.AnAnimalWeightRate", b =>
                {
                    b.Navigation("AnAnimalWeightRateDetails");
                });

            modelBuilder.Entity("DAL.Models.AnMedicin", b =>
                {
                    b.Navigation("AnAnimalMidicins");
                });

            modelBuilder.Entity("DAL.Models.AnNewBorn", b =>
                {
                    b.Navigation("AnNewBornDetails");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetAddDoc", b =>
                {
                    b.Navigation("AssetAssetAddDocDetails");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetCard", b =>
                {
                    b.Navigation("AssetAssetContacts");

                    b.Navigation("CalAssetAccounts");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetCategory", b =>
                {
                    b.Navigation("AssetAssetCards");

                    b.Navigation("InverseParentAssetCat");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetDeductDoc", b =>
                {
                    b.Navigation("AssetAssetDeductDocDetails");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetDeliverDoc", b =>
                {
                    b.Navigation("AssetAssetDeliverDocDetails");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetFixDoc", b =>
                {
                    b.Navigation("AssetAssetFixDocDetails");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetMoveDoc", b =>
                {
                    b.Navigation("AssetAssetMoveDocDetails");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetReceiveDoc", b =>
                {
                    b.Navigation("AssetAssetReceiveDocDetails");
                });

            modelBuilder.Entity("DAL.Models.AssetAssetSetting", b =>
                {
                    b.Navigation("AssetAssetSettingDetails");
                });

            modelBuilder.Entity("DAL.Models.AssetDepreciationDoc", b =>
                {
                    b.Navigation("AssetDepreciationDocDetails");
                });

            modelBuilder.Entity("DAL.Models.BnkBankNotice", b =>
                {
                    b.Navigation("BnkBankNoticeDetails");
                });

            modelBuilder.Entity("DAL.Models.CalAccountChart", b =>
                {
                    b.Navigation("CalAccChrtDailyAssists");

                    b.Navigation("CalAccountClaasiJoins");

                    b.Navigation("CalAccountUsers");

                    b.Navigation("CalCostCenterAccounts");

                    b.Navigation("CalEmpAccounts");

                    b.Navigation("CodDailyAssistances");

                    b.Navigation("StockPortfolioAccounts");
                });

            modelBuilder.Entity("DAL.Models.CalBudget", b =>
                {
                    b.Navigation("CalBudgetDetails");
                });

            modelBuilder.Entity("DAL.Models.CalCostCenter", b =>
                {
                    b.Navigation("CalCostCenterAccounts");
                });

            modelBuilder.Entity("DAL.Models.CalJurnalEntry", b =>
                {
                    b.Navigation("CalJurnalDetails");

                    b.Navigation("MsCashTransactionDetails");
                });

            modelBuilder.Entity("DAL.Models.CodAccountCategory", b =>
                {
                    b.Navigation("CodAccountClassifications");
                });

            modelBuilder.Entity("DAL.Models.CodBuildingExploitation", b =>
                {
                    b.Navigation("ProjProjExploitJoins");
                });

            modelBuilder.Entity("DAL.Models.CodBuildingInsuranceStatus", b =>
                {
                    b.Navigation("ProjProjInsurances");
                });

            modelBuilder.Entity("DAL.Models.CodBuildOccupType", b =>
                {
                    b.Navigation("ProjProjOccupTypeJoins");
                });

            modelBuilder.Entity("DAL.Models.CodBuildPermitActiv", b =>
                {
                    b.Navigation("ProjProjPermitActivityJoins");
                });

            modelBuilder.Entity("DAL.Models.CodBuildPerspective", b =>
                {
                    b.Navigation("ProjProjPerspectiveJoins");
                });

            modelBuilder.Entity("DAL.Models.CodCountry", b =>
                {
                    b.Navigation("CodRegions");
                });

            modelBuilder.Entity("DAL.Models.CodeSubUnitType", b =>
                {
                    b.Navigation("ProjProjUnitSubUnits");
                });

            modelBuilder.Entity("DAL.Models.CodInstallmentTemp", b =>
                {
                    b.Navigation("CodInstallmentTempsDetails");

                    b.Navigation("ProjProjUnitInstallTemps");
                });

            modelBuilder.Entity("DAL.Models.CodInsuranceCase", b =>
                {
                    b.Navigation("ProjProjInsuranceUnits");
                });

            modelBuilder.Entity("DAL.Models.CodLand", b =>
                {
                    b.Navigation("CodLandPermitActivJoins");

                    b.Navigation("CodLandPosJoins");

                    b.Navigation("CodLandRetainResJoins");
                });

            modelBuilder.Entity("DAL.Models.CodLandPermtActiv", b =>
                {
                    b.Navigation("CodLandPermitActivJoins");
                });

            modelBuilder.Entity("DAL.Models.CodLandPosition", b =>
                {
                    b.Navigation("CodLandPosJoins");
                });

            modelBuilder.Entity("DAL.Models.CodLandRetainRson", b =>
                {
                    b.Navigation("CodLandRetainResJoins");
                });

            modelBuilder.Entity("DAL.Models.CodOwnershipBond", b =>
                {
                    b.Navigation("ProjProjDocuments");

                    b.Navigation("ProjProjUnitDocuments");
                });

            modelBuilder.Entity("DAL.Models.CodPackingSize", b =>
                {
                    b.Navigation("MsItemUnitPackingJoins");
                });

            modelBuilder.Entity("DAL.Models.CodParking", b =>
                {
                    b.Navigation("ProjProjParkingJoins");
                });

            modelBuilder.Entity("DAL.Models.CodRegion", b =>
                {
                    b.Navigation("CodCities");
                });

            modelBuilder.Entity("DAL.Models.CodUnitExploitation", b =>
                {
                    b.Navigation("ProjProjUnitExploitJoins");
                });

            modelBuilder.Entity("DAL.Models.CodUnitInsuranceStatus", b =>
                {
                    b.Navigation("ProjProjInsuranceUnits");
                });

            modelBuilder.Entity("DAL.Models.CodUnitOccupancyType", b =>
                {
                    b.Navigation("ProjProjUnitOccupTypeJoins");
                });

            modelBuilder.Entity("DAL.Models.CodUnitPermittedActivity", b =>
                {
                    b.Navigation("ProjProjUnitPermitActivityJoins");
                });

            modelBuilder.Entity("DAL.Models.CodUnitPerspective", b =>
                {
                    b.Navigation("ProjProjUnitPerspectiveJoins");
                });

            modelBuilder.Entity("DAL.Models.CodUnitService", b =>
                {
                    b.Navigation("ProjProjUnitServices");
                });

            modelBuilder.Entity("DAL.Models.ContrInstallMent", b =>
                {
                    b.Navigation("ContrInstallMentDetails");
                });

            modelBuilder.Entity("DAL.Models.CrmLead", b =>
                {
                    b.Navigation("CrmLeadsMembersJoins");
                });

            modelBuilder.Entity("DAL.Models.CrmLeadsMember", b =>
                {
                    b.Navigation("CrmLeadsMembersDetails");

                    b.Navigation("CrmLeadsMembersJoins");
                });

            modelBuilder.Entity("DAL.Models.CrmLeadType", b =>
                {
                    b.Navigation("CrmLeads");
                });

            modelBuilder.Entity("DAL.Models.CrmMarketChannel", b =>
                {
                    b.Navigation("CrmLeads");
                });

            modelBuilder.Entity("DAL.Models.CrmSalesPlan", b =>
                {
                    b.Navigation("CrmSalesPlanDetails");
                });

            modelBuilder.Entity("DAL.Models.CrmTeam", b =>
                {
                    b.Navigation("CrmTeamMembers");
                });

            modelBuilder.Entity("DAL.Models.CrmVisit", b =>
                {
                    b.Navigation("CrmVisitSurveys");
                });

            modelBuilder.Entity("DAL.Models.CrmVisitType", b =>
                {
                    b.Navigation("CrmSurveys");

                    b.Navigation("CrmVisits");
                });

            modelBuilder.Entity("DAL.Models.GUser", b =>
                {
                    b.Navigation("CalAccountUsers");

                    b.Navigation("GUserModules");

                    b.Navigation("MsBoxUsers");

                    b.Navigation("MsCusromerUsers");

                    b.Navigation("MsVendorUsers");
                });

            modelBuilder.Entity("DAL.Models.GUserRole", b =>
                {
                    b.Navigation("GUserRolePermissions");

                    b.Navigation("GUsers");
                });

            modelBuilder.Entity("DAL.Models.HrAcheivedTarget", b =>
                {
                    b.Navigation("HrAcheivedTargetDetails");
                });

            modelBuilder.Entity("DAL.Models.HrAttendanceDoc", b =>
                {
                    b.Navigation("HrAttendDocDetails");

                    b.Navigation("HrAttendDocFactElements");
                });

            modelBuilder.Entity("DAL.Models.HrDepartment", b =>
                {
                    b.Navigation("HrEmployees");

                    b.Navigation("InverseParent");
                });

            modelBuilder.Entity("DAL.Models.HrEmpActivity", b =>
                {
                    b.Navigation("HrEmpActivityDetails");
                });

            modelBuilder.Entity("DAL.Models.HrEmpActivityDetail", b =>
                {
                    b.Navigation("HrActivityDetailElements");
                });

            modelBuilder.Entity("DAL.Models.HrEmpDocType", b =>
                {
                    b.Navigation("HrEmpDocuments");
                });

            modelBuilder.Entity("DAL.Models.HrEmpGroup", b =>
                {
                    b.Navigation("HrEmployees");

                    b.Navigation("InverseParent");
                });

            modelBuilder.Entity("DAL.Models.HrEmployee", b =>
                {
                    b.Navigation("CalEmpAccounts");

                    b.Navigation("HrEmpSalaryTypes");

                    b.Navigation("MsCheqBooks");

                    b.Navigation("ProjProjectItemEmpJoins");

                    b.Navigation("SrEmpServicTypes");

                    b.Navigation("SrTaskEmps");
                });

            modelBuilder.Entity("DAL.Models.HrEmpMovePromotion", b =>
                {
                    b.Navigation("HrEmpMovePromotDetails");
                });

            modelBuilder.Entity("DAL.Models.HrEmpVacation", b =>
                {
                    b.Navigation("HrEmpVacationsDetails");
                });

            modelBuilder.Entity("DAL.Models.HrJob", b =>
                {
                    b.Navigation("HrEmployees");
                });

            modelBuilder.Entity("DAL.Models.HrPeriodsTable", b =>
                {
                    b.Navigation("HrEmployees");

                    b.Navigation("HrPeriodTableDetails");

                    b.Navigation("HrPeriodTablePolicies");

                    b.Navigation("HrPeriodTableVacations");
                });

            modelBuilder.Entity("DAL.Models.HrSalaryIssueDoc", b =>
                {
                    b.Navigation("HrSalaryIssueDetails");

                    b.Navigation("HrSalaryIssueDistributions");
                });

            modelBuilder.Entity("DAL.Models.HrSalaryType", b =>
                {
                    b.Navigation("HrEmpSalaryTypes");

                    b.Navigation("HrEmpsSalaryTemps");

                    b.Navigation("HrSegments");
                });

            modelBuilder.Entity("DAL.Models.HrShift", b =>
                {
                    b.Navigation("HrEmployees");
                });

            modelBuilder.Entity("DAL.Models.MobSalesInvoice", b =>
                {
                    b.Navigation("MobSalesInvoiceItemCards");
                });

            modelBuilder.Entity("DAL.Models.MsAdjustMent", b =>
                {
                    b.Navigation("MsCashTransactionDetails");
                });

            modelBuilder.Entity("DAL.Models.MsBankAccount", b =>
                {
                    b.Navigation("MsBoxCurrencies");
                });

            modelBuilder.Entity("DAL.Models.MsBoxBank", b =>
                {
                    b.Navigation("MsBoxCurrencies");

                    b.Navigation("MsBoxUsers");

                    b.Navigation("MsPaymentNotes");

                    b.Navigation("MsReceiptNotes");

                    b.Navigation("MsStores");
                });

            modelBuilder.Entity("DAL.Models.MsBoxTransferNote", b =>
                {
                    b.Navigation("MsBoxTransferDetails");
                });

            modelBuilder.Entity("DAL.Models.MsBusinessPartner", b =>
                {
                    b.Navigation("CalBusinessPartnerAccounts");
                });

            modelBuilder.Entity("DAL.Models.MsBusinessPartnerCategory", b =>
                {
                    b.Navigation("MsBusinessPartners");
                });

            modelBuilder.Entity("DAL.Models.MsBusinessPartnerType", b =>
                {
                    b.Navigation("MsBusinessPartners");
                });

            modelBuilder.Entity("DAL.Models.MsCurrency", b =>
                {
                    b.Navigation("CalJurnalDetails");

                    b.Navigation("MsBoxCurrencies");

                    b.Navigation("MsCurrencyCategoryJoins");

                    b.Navigation("MsCurrencyRates");

                    b.Navigation("MsCustomers");

                    b.Navigation("MsVendors");
                });

            modelBuilder.Entity("DAL.Models.MsCurrencyCategory", b =>
                {
                    b.Navigation("MsCurrencyCategoryJoins");
                });

            modelBuilder.Entity("DAL.Models.MsCustomer", b =>
                {
                    b.Navigation("CalCustAccounts");

                    b.Navigation("LaLands");

                    b.Navigation("LaPropSerials");

                    b.Navigation("MsCusromerUsers");

                    b.Navigation("MsCustImgs");

                    b.Navigation("MsCustomerBranches");

                    b.Navigation("MsCustomerContacts");

                    b.Navigation("MsCustomersFollowUps");
                });

            modelBuilder.Entity("DAL.Models.MsCustomerCategory", b =>
                {
                    b.Navigation("MsCustomers");
                });

            modelBuilder.Entity("DAL.Models.MsCustomerType", b =>
                {
                    b.Navigation("MsCustomers");
                });

            modelBuilder.Entity("DAL.Models.MsDeliverItemCard", b =>
                {
                    b.Navigation("MsItemSerials");
                });

            modelBuilder.Entity("DAL.Models.MsDeliverSalesInvoice", b =>
                {
                    b.Navigation("MsDeliverItemCards");

                    b.Navigation("MsDeliverSalesInvoiceExpenses");

                    b.Navigation("MsDeliverSalesInvoiceMultiAccounts");
                });

            modelBuilder.Entity("DAL.Models.MsgaCity", b =>
                {
                    b.Navigation("SrExtensions");

                    b.Navigation("SrHotels");
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterExport", b =>
                {
                    b.Navigation("MsGaLetterExportDetails");

                    b.Navigation("MsGaShipmentDetails");
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterFayum", b =>
                {
                    b.Navigation("MsGaLetterFayumDetails");

                    b.Navigation("MsGaMotorSndetails");
                });

            modelBuilder.Entity("DAL.Models.MsGaLetterNormal", b =>
                {
                    b.Navigation("MsGaLetterNormalDetails");

                    b.Navigation("MsGaMotorSndetails");

                    b.Navigation("MsGaPeriodicBookDetails");
                });

            modelBuilder.Entity("DAL.Models.MsGaMotorSn", b =>
                {
                    b.Navigation("MsGaMotorSndetails");
                });

            modelBuilder.Entity("DAL.Models.MsGaPeriodicBook", b =>
                {
                    b.Navigation("MsGaPeriodicBookDetails");
                });

            modelBuilder.Entity("DAL.Models.MsGaShipment", b =>
                {
                    b.Navigation("MsGaShipmentDetails");
                });

            modelBuilder.Entity("DAL.Models.MsItemCard", b =>
                {
                    b.Navigation("MsDeliverItemCards");

                    b.Navigation("MsItemAlternatives");

                    b.Navigation("MsItemCardDefaulPartitions");

                    b.Navigation("MsItemCardOffers");

                    b.Navigation("MsItemCollections");

                    b.Navigation("MsItemImages");

                    b.Navigation("MsItemPartitions");

                    b.Navigation("MsItemStartQties");

                    b.Navigation("MsItemStockAdjustmentDetails");

                    b.Navigation("MsItemUnits");

                    b.Navigation("MsItemVendors");

                    b.Navigation("MsPurchOrderDetails");

                    b.Navigation("MsPurchaseInvoiceItemCards");

                    b.Navigation("MsReturnPurchaseItems");

                    b.Navigation("MsReturnSalesItemCards");

                    b.Navigation("MsSalesInvoiceItemCards");

                    b.Navigation("MsSalesOfferItemCards");

                    b.Navigation("MsStockReceiptItemCards");

                    b.Navigation("MsStockTranItemCards");

                    b.Navigation("ProdItemAttributsJoins");

                    b.Navigation("ProdItemcardExpenses");

                    b.Navigation("ProdJobOrderProducts");

                    b.Navigation("SrTaskItems");

                    b.Navigation("SrVehicleItemCards");
                });

            modelBuilder.Entity("DAL.Models.MsItemCategory", b =>
                {
                    b.Navigation("MsItemCards");
                });

            modelBuilder.Entity("DAL.Models.MsItemPricing", b =>
                {
                    b.Navigation("MsItemPricintDetails");
                });

            modelBuilder.Entity("DAL.Models.MsItemStockAdjustment", b =>
                {
                    b.Navigation("MsItemStockAdjustmentDetails");
                });

            modelBuilder.Entity("DAL.Models.MsItemStockAdjustmentDetail", b =>
                {
                    b.Navigation("MsItemSerials");
                });

            modelBuilder.Entity("DAL.Models.MsItemUnit", b =>
                {
                    b.Navigation("MsDeliverItemCards");

                    b.Navigation("MsItemUnitPackingJoins");

                    b.Navigation("MsPurchaseInvoiceItemCards");

                    b.Navigation("MsReturnPurchaseItems");

                    b.Navigation("MsReturnSalesItemCards");

                    b.Navigation("MsSalesInvoiceItemCards");

                    b.Navigation("MsStockReceiptItemCards");

                    b.Navigation("MsStockTranItemCards");
                });

            modelBuilder.Entity("DAL.Models.MsKeeperBank", b =>
                {
                    b.Navigation("MsKeeperBankDetails");
                });

            modelBuilder.Entity("DAL.Models.MsLetterOfGuarantee", b =>
                {
                    b.Navigation("MsLetterOfGuaranteeTrans");
                });

            modelBuilder.Entity("DAL.Models.MsPartition", b =>
                {
                    b.Navigation("MsItemPartitions");
                });

            modelBuilder.Entity("DAL.Models.MsPaymentNote", b =>
                {
                    b.Navigation("MsCashTransactionDetails");

                    b.Navigation("MsPaymentNoteCurrencies");

                    b.Navigation("MsPaymentNoteItems");

                    b.Navigation("MsPettyPaymentJoins");

                    b.Navigation("SrVehicleRentPayJoins");
                });

            modelBuilder.Entity("DAL.Models.MsPettycash", b =>
                {
                    b.Navigation("MsPettyCashDetails");

                    b.Navigation("MsPettyPaymentJoins");
                });

            modelBuilder.Entity("DAL.Models.MsPurchaseInvoiceItemCard", b =>
                {
                    b.Navigation("MsItemSerials");
                });

            modelBuilder.Entity("DAL.Models.MsPurchasInvoice", b =>
                {
                    b.Navigation("MsPaymentNotes");

                    b.Navigation("MsPurchInvVehicleJobOrderJoins");

                    b.Navigation("MsPurchasInvoiceCurrencies");

                    b.Navigation("MsPurchasInvoiceMultiAccounts");

                    b.Navigation("MsPurchaseInvoiceCostReceiveds");

                    b.Navigation("MsPurchaseInvoiceExpenses");

                    b.Navigation("MsPurchaseInvoiceItemCards");

                    b.Navigation("ProdJobOrderPurchaseInvoices");

                    b.Navigation("SrVehicleRentPurchJoins");
                });

            modelBuilder.Entity("DAL.Models.MsPurchasOrder", b =>
                {
                    b.Navigation("MsPurchOrderDetails");

                    b.Navigation("MsPurchasInvoices");
                });

            modelBuilder.Entity("DAL.Models.MsPurchasOrderRequest", b =>
                {
                    b.Navigation("MsPurchOrderReqDetails");
                });

            modelBuilder.Entity("DAL.Models.MsReceiptNote", b =>
                {
                    b.Navigation("MsCashTransactionDetails");

                    b.Navigation("MsReceiptNoteCurrencies");

                    b.Navigation("SrVehicleRentRecJoins");
                });

            modelBuilder.Entity("DAL.Models.MsReturnPurchase", b =>
                {
                    b.Navigation("MsReceiptNotes");

                    b.Navigation("MsReturnPurchaseCurrencies");

                    b.Navigation("MsReturnPurchaseExpenses");

                    b.Navigation("MsReturnPurchaseItems");

                    b.Navigation("MsReturnPurchaseMultiAccounts");
                });

            modelBuilder.Entity("DAL.Models.MsReturnPurchaseItem", b =>
                {
                    b.Navigation("MsItemSerials");
                });

            modelBuilder.Entity("DAL.Models.MsReturnSale", b =>
                {
                    b.Navigation("MsPaymentNotes");

                    b.Navigation("MsReturnSalesCurrencies");

                    b.Navigation("MsReturnSalesExpenses");

                    b.Navigation("MsReturnSalesItemCards");

                    b.Navigation("MsReturnSalesMultiAccounts");
                });

            modelBuilder.Entity("DAL.Models.MsReturnSalesItemCard", b =>
                {
                    b.Navigation("MsItemSerials");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoice", b =>
                {
                    b.Navigation("MsReceiptNotes");

                    b.Navigation("MsSalesInvJobOrderJoins");

                    b.Navigation("MsSalesInvVehiclJobOrderJoins");

                    b.Navigation("MsSalesInvoiceCostDelivers");

                    b.Navigation("MsSalesInvoiceCurrencies");

                    b.Navigation("MsSalesInvoiceExpenses");

                    b.Navigation("MsSalesInvoiceItemCards");

                    b.Navigation("MsSalesInvoiceMultiAccounts");

                    b.Navigation("MsSalesInvoiceQualityDeliveryDocs");

                    b.Navigation("MsSalesInvoiceQualityMissedItems");

                    b.Navigation("SrVehicleRentSalesInvJoins");
                });

            modelBuilder.Entity("DAL.Models.MsSalesInvoiceItemCard", b =>
                {
                    b.Navigation("MsItemSerials");
                });

            modelBuilder.Entity("DAL.Models.MsSalesItemsOffer", b =>
                {
                    b.Navigation("MsSalesItemsOffersDetails");
                });

            modelBuilder.Entity("DAL.Models.MsSalesOffer", b =>
                {
                    b.Navigation("MsSalesInvoices");

                    b.Navigation("MsSalesOfferItemCards");
                });

            modelBuilder.Entity("DAL.Models.MsSalesOfferRequest", b =>
                {
                    b.Navigation("MsSalesOfferItemRequests");
                });

            modelBuilder.Entity("DAL.Models.MsSalesOrder", b =>
                {
                    b.Navigation("MsSalesOrderItemCards");
                });

            modelBuilder.Entity("DAL.Models.MsSalesOrderItemCard", b =>
                {
                    b.Navigation("MsItemSerials");
                });

            modelBuilder.Entity("DAL.Models.MsStockReceiptItemCard", b =>
                {
                    b.Navigation("MsItemSerials");
                });

            modelBuilder.Entity("DAL.Models.MsStockRecript", b =>
                {
                    b.Navigation("MsStockReceiptItemCards");

                    b.Navigation("MsStockRecriptExpenses");

                    b.Navigation("MsStockRecriptMultiAccounts");
                });

            modelBuilder.Entity("DAL.Models.MsStockTranItemCard", b =>
                {
                    b.Navigation("MsItemSerials");
                });

            modelBuilder.Entity("DAL.Models.MsStockTranItemCardReq", b =>
                {
                    b.Navigation("MsItemSerials");
                });

            modelBuilder.Entity("DAL.Models.MsStockTransferNote", b =>
                {
                    b.Navigation("MsStockTranItemCards");
                });

            modelBuilder.Entity("DAL.Models.MsStockTransferNoteRequest", b =>
                {
                    b.Navigation("MsStockTranItemCardReqs");
                });

            modelBuilder.Entity("DAL.Models.MsStore", b =>
                {
                    b.Navigation("CalJurnalEntries");

                    b.Navigation("MsPartitions");
                });

            modelBuilder.Entity("DAL.Models.MsTaxis", b =>
                {
                    b.Navigation("MsPurchasInvoices");
                });

            modelBuilder.Entity("DAL.Models.MsTerm", b =>
                {
                    b.Navigation("MsTermsCostCenters");

                    b.Navigation("MsTermsDetails");
                });

            modelBuilder.Entity("DAL.Models.MsVendor", b =>
                {
                    b.Navigation("CalVendAccounts");

                    b.Navigation("MsItemVendors");

                    b.Navigation("MsVendImgs");

                    b.Navigation("MsVendorBranches");

                    b.Navigation("MsVendorContacts");

                    b.Navigation("MsVendorUsers");

                    b.Navigation("ProjProjectItemsVendors");
                });

            modelBuilder.Entity("DAL.Models.MsVendorCategory", b =>
                {
                    b.Navigation("MsVendors");
                });

            modelBuilder.Entity("DAL.Models.MsVendorType", b =>
                {
                    b.Navigation("MsVendors");
                });

            modelBuilder.Entity("DAL.Models.MsWeightCard", b =>
                {
                    b.Navigation("MsWeightcardItems");
                });

            modelBuilder.Entity("DAL.Models.PrintPricing", b =>
                {
                    b.Navigation("PrintPricingDetails");
                });

            modelBuilder.Entity("DAL.Models.PrintQoutation", b =>
                {
                    b.Navigation("PrintQoutationDetails");
                });

            modelBuilder.Entity("DAL.Models.PrintQoutationDetail", b =>
                {
                    b.Navigation("PrintQoutationDetailsItems");
                });

            modelBuilder.Entity("DAL.Models.ProdBasicUnit", b =>
                {
                    b.Navigation("InverseParentUnitNavigation");

                    b.Navigation("MsItemUnits");
                });

            modelBuilder.Entity("DAL.Models.ProdBillOfMaterial", b =>
                {
                    b.Navigation("ProdBillOfMaterialItems");

                    b.Navigation("ProdBillOfMaterialSecondaryItems");
                });

            modelBuilder.Entity("DAL.Models.ProdEmpEquipDistrib", b =>
                {
                    b.Navigation("ProdEmpEquipDistribDetails");
                });

            modelBuilder.Entity("DAL.Models.ProdEmpJobOrderDistrib", b =>
                {
                    b.Navigation("ProdEmpJobOrderDistribDetails");
                });

            modelBuilder.Entity("DAL.Models.ProdEquipment", b =>
                {
                    b.Navigation("ProdEquipProfiles");
                });

            modelBuilder.Entity("DAL.Models.ProdItemAttribute", b =>
                {
                    b.Navigation("ProdAttributeValues");

                    b.Navigation("ProdItemAttributsJoins");
                });

            modelBuilder.Entity("DAL.Models.ProdItemAttributesBatche", b =>
                {
                    b.Navigation("ProdItemAttributesBatchesDetails");

                    b.Navigation("ProdItemBatchPartitions");

                    b.Navigation("ProdJobOrderProducts");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrder", b =>
                {
                    b.Navigation("MsSalesInvJobOrderJoins");

                    b.Navigation("ProdJobOrderEquipments");

                    b.Navigation("ProdJobOrderExpenses");

                    b.Navigation("ProdJobOrderGoStocks");

                    b.Navigation("ProdJobOrderJobs");

                    b.Navigation("ProdJobOrderMaterials");

                    b.Navigation("ProdJobOrderProducts");

                    b.Navigation("ProdJobOrderPurchaseInvoices");

                    b.Navigation("ProdJobOrderScraps");

                    b.Navigation("ProdJobOrderServices");

                    b.Navigation("ProdJobOrderTasks");

                    b.Navigation("ProdJobOrderWorkFlows");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderEmpCostDoc", b =>
                {
                    b.Navigation("ProdJobOrderEmpCostDocDetails");
                });

            modelBuilder.Entity("DAL.Models.ProdJobOrderEquipCostDoc", b =>
                {
                    b.Navigation("ProdJobOrderEquipCostDocDetails");
                });

            modelBuilder.Entity("DAL.Models.ProdProductionLine", b =>
                {
                    b.Navigation("ProdProductionLineDetails");
                });

            modelBuilder.Entity("DAL.Models.ProdProductionOrder", b =>
                {
                    b.Navigation("ProdProductionOrderDetails");
                });

            modelBuilder.Entity("DAL.Models.ProdRecipe", b =>
                {
                    b.Navigation("ProdRecipeDetails");
                });

            modelBuilder.Entity("DAL.Models.ProdTask", b =>
                {
                    b.Navigation("ProdJoinTaskEquipments");

                    b.Navigation("ProdJoinTaskJobs");

                    b.Navigation("ProjProjItemEmpTaskJoins");
                });

            modelBuilder.Entity("DAL.Models.ProdWorkOrder", b =>
                {
                    b.Navigation("ProdWorkOrderEquipments");

                    b.Navigation("ProdWorkOrderExpenses");

                    b.Navigation("ProdWorkOrderItemRecQualityDocs");

                    b.Navigation("ProdWorkOrderMaterials");

                    b.Navigation("ProdWorkOrderProdItems");

                    b.Navigation("ProdWorkOrderServices");

                    b.Navigation("QualityItemRecPackages");
                });

            modelBuilder.Entity("DAL.Models.ProjProject", b =>
                {
                    b.Navigation("ProjAccounts");

                    b.Navigation("ProjEstimateItems");

                    b.Navigation("ProjExpenses");

                    b.Navigation("ProjFunds");

                    b.Navigation("ProjProjDocuments");

                    b.Navigation("ProjProjExploitJoins");

                    b.Navigation("ProjProjInsurances");

                    b.Navigation("ProjProjOccupTypeJoins");

                    b.Navigation("ProjProjOwnerJoins");

                    b.Navigation("ProjProjParkingJoins");

                    b.Navigation("ProjProjPermitActivityJoins");

                    b.Navigation("ProjProjPerspectiveJoins");

                    b.Navigation("ProjProjPictures");

                    b.Navigation("ProjProjUnits");

                    b.Navigation("ProjProjectItemsJoins");

                    b.Navigation("ProjRealItems");
                });

            modelBuilder.Entity("DAL.Models.ProjProjectItem", b =>
                {
                    b.Navigation("ProjProjectItemsJoins");

                    b.Navigation("ProjProjectItemsVendors");
                });

            modelBuilder.Entity("DAL.Models.ProjProjectItemEmpJoin", b =>
                {
                    b.Navigation("ProjProjItemEmpTaskJoins");
                });

            modelBuilder.Entity("DAL.Models.ProjProjectItemsJoin", b =>
                {
                    b.Navigation("ProjProjectItemEmpJoins");
                });

            modelBuilder.Entity("DAL.Models.ProjProjUnit", b =>
                {
                    b.Navigation("ProjProjInsuranceUnits");

                    b.Navigation("ProjProjUnitDocuments");

                    b.Navigation("ProjProjUnitExploitJoins");

                    b.Navigation("ProjProjUnitInstallTemps");

                    b.Navigation("ProjProjUnitOccupTypeJoins");

                    b.Navigation("ProjProjUnitOwnerJoins");

                    b.Navigation("ProjProjUnitPermitActivityJoins");

                    b.Navigation("ProjProjUnitPerspectiveJoins");

                    b.Navigation("ProjProjUnitPictures");

                    b.Navigation("ProjProjUnitServices");

                    b.Navigation("ProjProjUnitSubUnits");
                });

            modelBuilder.Entity("DAL.Models.ProjTender", b =>
                {
                    b.Navigation("ProjTendersDetails");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContract", b =>
                {
                    b.Navigation("ProjTenderContractAdds");

                    b.Navigation("ProjTenderContractDetails");

                    b.Navigation("ProjTenderContractDiscounts");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorContract", b =>
                {
                    b.Navigation("ProjTenderContractorContractAdds");

                    b.Navigation("ProjTenderContractorContractDetails");

                    b.Navigation("ProjTenderContractorContractDiscounts");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderContractorExitract", b =>
                {
                    b.Navigation("ProjTenderContractorExitractAdds");

                    b.Navigation("ProjTenderContractorExitractDetails");

                    b.Navigation("ProjTenderContractorExitractDiscounts");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderExecutionExitract", b =>
                {
                    b.Navigation("ProjTenderExecutionExitractDetails");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOffer", b =>
                {
                    b.Navigation("ProjTenderOfferDetails");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderOwnerExitract", b =>
                {
                    b.Navigation("ProjTenderOwnerExitractAdds");

                    b.Navigation("ProjTenderOwnerExitractDetails");

                    b.Navigation("ProjTenderOwnerExitractDiscounts");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderPlan", b =>
                {
                    b.Navigation("ProjTenderPlanDetails");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderPlanDistribution", b =>
                {
                    b.Navigation("ProjTenderPlanDistributionDetails");
                });

            modelBuilder.Entity("DAL.Models.ProjTenderQoutation", b =>
                {
                    b.Navigation("ProjTenderQoutationDetails");
                });

            modelBuilder.Entity("DAL.Models.ProjUnitReservation", b =>
                {
                    b.Navigation("ProjProjUnitServices");

                    b.Navigation("ProjReservInstallments");

                    b.Navigation("ProjReserveUnitDocuments");

                    b.Navigation("ProjReserveUnitOwners");

                    b.Navigation("ProjReserveUnitSellers");

                    b.Navigation("ProjUnitReservationGuarantors");
                });

            modelBuilder.Entity("DAL.Models.QualityItemDelivery", b =>
                {
                    b.Navigation("QualityItemDeliverDetails");

                    b.Navigation("QualityItemDeliveryPackages");
                });

            modelBuilder.Entity("DAL.Models.QualityItemRecCheck", b =>
                {
                    b.Navigation("QualityItemRecCheckDetails");

                    b.Navigation("QualityItemRecPackages");
                });

            modelBuilder.Entity("DAL.Models.QualityItemRecieve", b =>
                {
                    b.Navigation("QualityItemRecieveDetails");
                });

            modelBuilder.Entity("DAL.Models.RepairJobOrder", b =>
                {
                    b.Navigation("RepairJobOrderComments");

                    b.Navigation("RepairJobOrderEmps");

                    b.Navigation("RepairJobOrderItems");

                    b.Navigation("RepairJobOrderScrapItems");

                    b.Navigation("RepairJobOrederExpenses");
                });

            modelBuilder.Entity("DAL.Models.SrAccomodation", b =>
                {
                    b.Navigation("SrTripAccomDetails");
                });

            modelBuilder.Entity("DAL.Models.SrComplaint", b =>
                {
                    b.Navigation("SrReciptionDetails");

                    b.Navigation("SrTasks");
                });

            modelBuilder.Entity("DAL.Models.SrContainerType", b =>
                {
                    b.Navigation("SrTrafficLinePriceLists");
                });

            modelBuilder.Entity("DAL.Models.SrDriver", b =>
                {
                    b.Navigation("SrVehicleJobOrderDetails");
                });

            modelBuilder.Entity("DAL.Models.SrGarage", b =>
                {
                    b.Navigation("SrVehicles");
                });

            modelBuilder.Entity("DAL.Models.SrHotel", b =>
                {
                    b.Navigation("SrAccomodations");

                    b.Navigation("SrExtensions");
                });

            modelBuilder.Entity("DAL.Models.SrJobOrder", b =>
                {
                    b.Navigation("SrJobAdditionalCosts");

                    b.Navigation("SrJobComments");

                    b.Navigation("SrJobExtrnalExpens");

                    b.Navigation("SrJobFiles");

                    b.Navigation("SrJobSparts");

                    b.Navigation("SrJobSwages");
                });

            modelBuilder.Entity("DAL.Models.SrProgram", b =>
                {
                    b.Navigation("SrTripProgramJoins");
                });

            modelBuilder.Entity("DAL.Models.SrReciption", b =>
                {
                    b.Navigation("SrJobOrders");

                    b.Navigation("SrReceptionImages");

                    b.Navigation("SrReciptionDetails");
                });

            modelBuilder.Entity("DAL.Models.SrServiceDistribution", b =>
                {
                    b.Navigation("SrServiceDistributionDetails");
                });

            modelBuilder.Entity("DAL.Models.SrServiceType", b =>
                {
                    b.Navigation("SrEmpServicTypes");

                    b.Navigation("SrJobOrders");
                });

            modelBuilder.Entity("DAL.Models.SrTask", b =>
                {
                    b.Navigation("SrTaskEmps");

                    b.Navigation("SrTaskItems");
                });

            modelBuilder.Entity("DAL.Models.SrTrafficLine", b =>
                {
                    b.Navigation("SrTrafficLinePriceLists");
                });

            modelBuilder.Entity("DAL.Models.SrTrip", b =>
                {
                    b.Navigation("SrAccomodations");

                    b.Navigation("SrExtensions");

                    b.Navigation("SrFlights");

                    b.Navigation("SrTransportations");

                    b.Navigation("SrTripProgramJoins");
                });

            modelBuilder.Entity("DAL.Models.SrVehicle", b =>
                {
                    b.Navigation("SrJobOrders");

                    b.Navigation("SrTrafficLinePriceLists");

                    b.Navigation("SrVehicleJobOrders");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleJobOrder", b =>
                {
                    b.Navigation("MsPurchInvVehicleJobOrderJoins");

                    b.Navigation("MsSalesInvVehiclJobOrderJoins");

                    b.Navigation("SrVehicleJobOrderDetails");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleMovement", b =>
                {
                    b.Navigation("SrVehicleMovementDetails");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleRenalContract", b =>
                {
                    b.Navigation("SrVehicleRentPayJoins");

                    b.Navigation("SrVehicleRentPurchJoins");

                    b.Navigation("SrVehicleRentRecJoins");

                    b.Navigation("SrVehicleRentSalesInvJoins");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleShape", b =>
                {
                    b.Navigation("SrVehicles");
                });

            modelBuilder.Entity("DAL.Models.SrVehicleType", b =>
                {
                    b.Navigation("SrVehicles");
                });

            modelBuilder.Entity("DAL.Models.SrVheicleJobOrderType", b =>
                {
                    b.Navigation("SrVehicleJobOrders");
                });

            modelBuilder.Entity("DAL.Models.SrWarranty", b =>
                {
                    b.Navigation("SrVehicles");
                });

            modelBuilder.Entity("DAL.Models.StockArchive", b =>
                {
                    b.Navigation("StockPortfolioStockArchives");
                });

            modelBuilder.Entity("DAL.Models.StockCategory", b =>
                {
                    b.Navigation("StockStocks");
                });

            modelBuilder.Entity("DAL.Models.StockMarket", b =>
                {
                    b.Navigation("StockStocks");
                });

            modelBuilder.Entity("DAL.Models.StockOpenningBalance", b =>
                {
                    b.Navigation("StockOpenningBalanceDetails");
                });

            modelBuilder.Entity("DAL.Models.StockPortfolio", b =>
                {
                    b.Navigation("StockPortfolioAccounts");

                    b.Navigation("StockPortfolioStocks");
                });

            modelBuilder.Entity("DAL.Models.StockPortfolioStock", b =>
                {
                    b.Navigation("StockPortfolioStockArchives");
                });

            modelBuilder.Entity("DAL.Models.StockSalesPurchase", b =>
                {
                    b.Navigation("StockSalesPurchaseDetails");
                });

            modelBuilder.Entity("DAL.Models.StockSector", b =>
                {
                    b.Navigation("StockStocks");
                });

            modelBuilder.Entity("DAL.Models.StockStock", b =>
                {
                    b.Navigation("StockCapitalUpdates");

                    b.Navigation("StockPortfolioStocks");
                });

            modelBuilder.Entity("DAL.Models.StockTransfer", b =>
                {
                    b.Navigation("StockTransferDetails");
                });

            modelBuilder.Entity("DAL.Models.SysAnalyticalCode", b =>
                {
                    b.Navigation("CalAccountCharts");

                    b.Navigation("CalJurnalEntries");

                    b.Navigation("CodAccountCategories");

                    b.Navigation("CodDailyAssistances");

                    b.Navigation("SysAnalyticalCodeProccesses");

                    b.Navigation("SysAnalyticalCodeUpdates");
                });

            modelBuilder.Entity("DAL.Models.SysCity", b =>
                {
                    b.Navigation("CodCities");
                });

            modelBuilder.Entity("DAL.Models.SysCountry", b =>
                {
                    b.Navigation("CodCountries");
                });

            modelBuilder.Entity("DAL.Models.SysFinancialYear", b =>
                {
                    b.Navigation("SysFinancialIntervals");
                });

            modelBuilder.Entity("DAL.Models.SysRemotBranchesLog", b =>
                {
                    b.Navigation("SysRemoteBranchesLogDetailes");
                });

            modelBuilder.Entity("DAL.Models.SysRemotTranLog", b =>
                {
                    b.Navigation("SysRemotLogDetails");
                });

            modelBuilder.Entity("DAL.Models.TrOpenningBalance", b =>
                {
                    b.Navigation("TrOpenningBalanceDetails");
                });

            modelBuilder.Entity("DAL.Models.WorkForcBloodExeclude", b =>
                {
                    b.Navigation("WorkForcBloodExecludeDetails");
                });

            modelBuilder.Entity("DAL.Models.WorkForcFirstCustExeclude", b =>
                {
                    b.Navigation("WorkForcFirstCustExecludeDetails");
                });

            modelBuilder.Entity("DAL.Models.WorkForcSecondCustExeclude", b =>
                {
                    b.Navigation("WorkForcSecondCustExecludeDetails");
                });

            modelBuilder.Entity("DAL.Models.WorkForcTemplate", b =>
                {
                    b.Navigation("WorkForcTemplatesDetails");
                });

            modelBuilder.Entity("DAL.Models.WorkForcTestResult", b =>
                {
                    b.Navigation("WorkForcTestResultsDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
